{"version":3,"sources":["webpack:///src/app/language/language.service.ts","webpack:///src/app/user/profile/user-profile.page.html","webpack:///src/app/user/profile/user-profile.page.ts","webpack:///src/app/user/profile/user-profile.module.ts","webpack:///src/app/user/profile/user-profile.resolver.ts"],"names":["LanguageService","languages","Array","push","name","code","UserProfilePage","route","translate","languageService","alertController","available_languages","subscriptions","data","pipe","resolvedRouteData","extractData","subscribe","state","profile","getTranslations","error","console","log","onLangChange","unsubscribe","getTranslation","currentLang","translations","getLanguages","map","item","type","label","value","checked","create","header","SELECT_LANGUAGE","inputs","cssClass","buttons","text","CANCEL","role","handler","OK","use","alert","present","isShell","openLanguageChooser","selector","templateUrl","styleUrls","routes","path","component","resolve","UserProfilePageModule","forChild","imports","declarations","providers","UserProfileResolver","userService","dataSource","getProfileDataSource","dataStore","getProfileStore"],"mappings":"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","file":"user-profile-user-profile-module-es5.js","sourcesContent":["import { Injectable } from '@angular/core';\r\nimport { LanguageModel } from './language.model';\r\n\r\n@Injectable()\r\nexport class LanguageService {\r\n  languages: Array<LanguageModel> = new Array<LanguageModel>();\r\n\r\n   constructor() {\r\n     this.languages.push(\r\n      { name: 'English', code: 'en' },\r\n      { name: 'Spanish', code: 'es' },\r\n      { name: 'French', code: 'fr' }\r\n     );\r\n   }\r\n\r\n   getLanguages() {\r\n     return this.languages;\r\n   }\r\n\r\n }\r\n","<ion-header class=\"ion-no-border\">\r\n  <ion-toolbar>\r\n    <ion-buttons slot=\"start\">\r\n      <ion-menu-button></ion-menu-button>\r\n    </ion-buttons>\r\n  </ion-toolbar>\r\n</ion-header>\r\n\r\n<ion-content class=\"user-profile-content\">\r\n  <ion-row class=\"user-details-section\">\r\n    <ion-col class=\"user-image-wrapper\">\r\n      <app-aspect-ratio [ratio]=\"{w: 1, h: 1}\">\r\n        <app-image-shell class=\"user-image\" animation=\"spinner\" [src]=\"profile?.userImage\"></app-image-shell>\r\n      </app-aspect-ratio>\r\n    </ion-col>\r\n    <ion-col class=\"user-info-wrapper\">\r\n      <ion-row class=\"user-data-row\">\r\n        <ion-col size=\"9\">\r\n          <h3 class=\"user-name\">\r\n            <app-text-shell [data]=\"profile?.name\"></app-text-shell>\r\n          </h3>\r\n          <h5 class=\"user-title\">\r\n            <app-text-shell [data]=\"profile?.job\"></app-text-shell>\r\n          </h5>\r\n        </ion-col>\r\n        <ion-col class=\"membership-col\">\r\n          <span class=\"user-membership\">\r\n            <app-text-shell [data]=\"profile?.membership\"></app-text-shell>\r\n          </span>\r\n        </ion-col>\r\n      </ion-row>\r\n      <ion-row class=\"actions-row\">\r\n        <ion-col class=\"main-actions\">\r\n          <ion-button class=\"call-to-action-btn\" size=\"small\" color=\"primary\">{{ 'FOLLOW' | translate }}</ion-button>\r\n          <ion-button class=\"call-to-action-btn\" size=\"small\" color=\"medium\">{{ 'MESSAGE' | translate }}</ion-button>\r\n        </ion-col>\r\n        <ion-col class=\"secondary-actions\">\r\n          <ion-button class=\"more-btn\" size=\"small\" fill=\"clear\" color=\"medium\" (click)=\"openLanguageChooser()\">\r\n            <ion-icon slot=\"icon-only\" ios=\"ellipsis-horizontal\" md=\"ellipsis-vertical\"></ion-icon>\r\n          </ion-button>\r\n        </ion-col>\r\n      </ion-row>\r\n    </ion-col>\r\n  </ion-row>\r\n  <ion-row class=\"user-stats-section\">\r\n    <ion-col class=\"user-stats-wrapper\" size=\"4\">\r\n      <span class=\"stat-value\">\r\n        <app-text-shell [data]=\"profile?.likes\"></app-text-shell>\r\n      </span>\r\n      <span class=\"stat-name\">{{ 'LIKES' | translate }}</span>\r\n    </ion-col>\r\n    <ion-col class=\"user-stats-wrapper\" size=\"4\">\r\n      <span class=\"stat-value\">\r\n        <app-text-shell [data]=\"profile?.followers\"></app-text-shell>\r\n      </span>\r\n      <span class=\"stat-name\">{{ 'FOLLOWERS' | translate }}</span>\r\n    </ion-col>\r\n    <ion-col class=\"user-stats-wrapper\" size=\"4\">\r\n      <span class=\"stat-value\">\r\n        <app-text-shell [data]=\"profile?.following\"></app-text-shell>\r\n      </span>\r\n      <span class=\"stat-name\">{{ 'FOLLOWING' | translate }}</span>\r\n    </ion-col>\r\n  </ion-row>\r\n  <div class=\"user-about-section\">\r\n    <h3 class=\"details-section-title\">{{ 'ABOUT' | translate }}</h3>\r\n    <p class=\"user-description\">\r\n      <app-text-shell animation=\"bouncing\" lines=\"4\" [data]=\"profile?.about\"></app-text-shell>\r\n    </p>\r\n  </div>\r\n  <div class=\"user-friends-section\">\r\n    <ion-row class=\"heading-row\">\r\n      <h3 class=\"details-section-title\">{{ 'FRIENDS' | translate }}</h3>\r\n      <a class=\"heading-call-to-action\" [routerLink]=\"['/app/user/friends']\">{{ 'SEE_ALL' | translate }}</a>\r\n    </ion-row>\r\n    <ion-row class=\"friends-row\">\r\n      <ion-col class=\"friend-item\" *ngFor=\"let friend of profile?.friends\">\r\n        <app-aspect-ratio [ratio]=\"{w: 1, h: 1}\">\r\n          <app-image-shell class=\"friend-picture\" [src]=\"friend.image\"></app-image-shell>\r\n        </app-aspect-ratio>\r\n        <span class=\"friend-name\">\r\n          <app-text-shell [data]=\"friend.name\"></app-text-shell>\r\n        </span>\r\n      </ion-col>\r\n    </ion-row>\r\n  </div>\r\n\r\n  <div class=\"user-photos-section\">\r\n    <ion-row class=\"heading-row\">\r\n      <h3 class=\"details-section-title\">{{ 'PHOTOS' | translate }}</h3>\r\n      <a class=\"heading-call-to-action\">{{ 'SEE_ALL' | translate }}</a>\r\n    </ion-row>\r\n    <ion-row class=\"pictures-row\">\r\n      <ion-col class=\"picture-item\" *ngFor=\"let photo of profile?.photos\">\r\n        <app-image-shell [display]=\"'cover'\" [src]=\"photo.image\" class=\"user-photo-image\">\r\n          <app-aspect-ratio [ratio]=\"{w:1, h:1}\">\r\n          </app-aspect-ratio>\r\n        </app-image-shell>\r\n      </ion-col>\r\n    </ion-row>\r\n  </div>\r\n</ion-content>\r\n","import { Component, OnInit, HostBinding } from '@angular/core';\r\nimport { ActivatedRoute } from '@angular/router';\r\nimport { Subscription } from 'rxjs';\r\n\r\nimport { IResolvedRouteData, ResolverHelper } from '../../utils/resolver-helper';\r\nimport { UserProfileModel } from './user-profile.model';\r\nimport { AlertController } from '@ionic/angular';\r\n\r\nimport { LanguageService } from '../../language/language.service';\r\nimport { TranslateService } from '@ngx-translate/core';\r\nimport { switchMap } from 'rxjs/operators';\r\n\r\n@Component({\r\n  selector: 'app-user-profile',\r\n  templateUrl: './user-profile.page.html',\r\n  styleUrls: [\r\n    './styles/user-profile.page.scss',\r\n    './styles/user-profile.shell.scss',\r\n    './styles/user-profile.ios.scss',\r\n    './styles/user-profile.md.scss'\r\n  ],\r\n})\r\nexport class UserProfilePage implements OnInit {\r\n  // Gather all component subscription in one place. Can be one Subscription or multiple (chained using the Subscription.add() method)\r\n  subscriptions: Subscription;\r\n\r\n  profile: UserProfileModel;\r\n  available_languages = [];\r\n  translations;\r\n\r\n  @HostBinding('class.is-shell') get isShell() {\r\n    return (this.profile && this.profile.isShell) ? true : false;\r\n  }\r\n\r\n  constructor(\r\n    private route: ActivatedRoute,\r\n    public translate: TranslateService,\r\n    public languageService: LanguageService,\r\n    public alertController: AlertController\r\n  ) { }\r\n\r\n\r\n  ngOnInit(): void {\r\n    this.subscriptions = this.route.data\r\n    .pipe(\r\n      // Extract data for this page\r\n      switchMap((resolvedRouteData: IResolvedRouteData<UserProfileModel>) => {\r\n        return ResolverHelper.extractData<UserProfileModel>(resolvedRouteData.data, UserProfileModel);\r\n      })\r\n    )\r\n    .subscribe((state) => {\r\n      this.profile = state;\r\n\r\n      // get translations for this page to use in the Language Chooser Alert\r\n      this.getTranslations();\r\n    }, (error) => console.log(error));\r\n\r\n    this.translate.onLangChange.subscribe(() => this.getTranslations());\r\n  }\r\n\r\n\r\n  // NOTE: Ionic only calls ngOnDestroy if the page was popped (ex: when navigating back)\r\n  // Since ngOnDestroy might not fire when you navigate from the current page, use ionViewWillLeave to cleanup Subscriptions\r\n  ionViewWillLeave(): void {\r\n    this.subscriptions.unsubscribe();\r\n  }\r\n\r\n  getTranslations() {\r\n    // get translations for this page to use in the Language Chooser Alert\r\n    this.translate.getTranslation(this.translate.currentLang)\r\n    .subscribe((translations) => this.translations = translations);\r\n  }\r\n\r\n  async openLanguageChooser() {\r\n    this.available_languages = this.languageService.getLanguages()\r\n    .map(item =>\r\n      ({\r\n        name: item.name,\r\n        type: 'radio',\r\n        label: item.name,\r\n        value: item.code,\r\n        checked: item.code === this.translate.currentLang\r\n      })\r\n    );\r\n\r\n    const alert = await this.alertController.create({\r\n      header: this.translations.SELECT_LANGUAGE,\r\n      inputs: this.available_languages,\r\n      cssClass: 'language-alert',\r\n      buttons: [\r\n        {\r\n          text: this.translations.CANCEL,\r\n          role: 'cancel',\r\n          cssClass: 'secondary',\r\n          handler: () => {}\r\n        }, {\r\n          text: this.translations.OK,\r\n          handler: (data) => {\r\n            if (data) {\r\n              this.translate.use(data);\r\n            }\r\n          }\r\n        }\r\n      ]\r\n    });\r\n    await alert.present();\r\n\r\n  }\r\n}\r\n","import { NgModule } from '@angular/core';\r\nimport { CommonModule } from '@angular/common';\r\nimport { FormsModule } from '@angular/forms';\r\nimport { Routes, RouterModule } from '@angular/router';\r\n\r\nimport { IonicModule } from '@ionic/angular';\r\n\r\nimport { UserService } from '../user.service';\r\nimport { UserProfilePage } from './user-profile.page';\r\nimport { UserProfileResolver } from './user-profile.resolver';\r\nimport { ComponentsModule } from '../../components/components.module';\r\nimport { LanguageService } from '../../language/language.service';\r\nimport { TranslateModule } from '@ngx-translate/core';\r\n\r\n\r\nconst routes: Routes = [\r\n  {\r\n    path: '',\r\n    component: UserProfilePage,\r\n    resolve: {\r\n      data: UserProfileResolver\r\n    }\r\n  }\r\n];\r\n\r\n@NgModule({\r\n  imports: [\r\n    IonicModule,\r\n    CommonModule,\r\n    FormsModule,\r\n    TranslateModule,\r\n    ComponentsModule,\r\n    RouterModule.forChild(routes)\r\n  ],\r\n  declarations: [UserProfilePage],\r\n  providers: [\r\n    UserProfileResolver,\r\n    UserService,\r\n    LanguageService\r\n  ]\r\n})\r\nexport class UserProfilePageModule {}\r\n","import { Injectable } from '@angular/core';\r\nimport { Resolve } from '@angular/router';\r\nimport { Observable } from 'rxjs';\r\n\r\nimport { DataStore } from '../../shell/data-store';\r\nimport { UserService } from '../user.service';\r\nimport { UserProfileModel } from './user-profile.model';\r\n\r\n@Injectable()\r\nexport class UserProfileResolver implements Resolve<DataStore<UserProfileModel>> {\r\n\r\n  constructor(private userService: UserService) { }\r\n\r\n  resolve(): DataStore<UserProfileModel> {\r\n    const dataSource: Observable<UserProfileModel> = this.userService.getProfileDataSource();\r\n    const dataStore: DataStore<UserProfileModel> = this.userService.getProfileStore(dataSource);\r\n\r\n    return dataStore;\r\n  }\r\n}\r\n"]}