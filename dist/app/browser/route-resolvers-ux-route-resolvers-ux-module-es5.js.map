{"version":3,"sources":["webpack:///src/app/showcase/route-resolvers-ux/blocking-resolvers/blocking-resolvers.page.ts","webpack:///src/app/showcase/route-resolvers-ux/blocking-resolvers/blocking-resolvers.page.html","webpack:///src/app/showcase/route-resolvers-ux/route-resolvers-ux.module.ts","webpack:///src/app/showcase/route-resolvers-ux/progressive-shell-resolvers/progressive-shell.resolver.ts","webpack:///src/app/shell/data-store.ts","webpack:///src/app/showcase/route-resolvers-ux/blocking-resolvers/blocking.resolver.ts","webpack:///src/app/showcase/route-resolvers-ux/non-blocking-resolvers/non-blocking.resolver.ts","webpack:///src/app/showcase/route-resolvers-ux/route-resolvers-ux.page.ts","webpack:///src/app/showcase/route-resolvers-ux/route-resolvers-ux.page.html","webpack:///src/app/showcase/route-resolvers-ux/non-blocking-resolvers/non-blocking-resolvers.page.ts","webpack:///src/app/showcase/route-resolvers-ux/non-blocking-resolvers/non-blocking-resolvers.page.html","webpack:///src/app/showcase/route-resolvers-ux/progressive-shell-resolvers/progressive-shell-resolvers.page.ts","webpack:///src/app/showcase/route-resolvers-ux/progressive-shell-resolvers/progressive-shell-resolvers.page.html"],"names":["BlockingResovlersPage","route","console","log","data","dataObservable","subscribe","observableValue","pageData","isShell","routeResolveData","warn","selector","templateUrl","styleUrls","routes","path","component","resolve","RouteResolversUXModule","forChild","imports","declarations","providers","ProgressiveShellResolver","showcaseService","dataSource","getDataSourceWithDelay","dataStore","getSimpleDataStore","ShellModel","DataStore","shellModel","networkDelay","appShellConfig","timeline","dataSourceObservable","delay","processedDataSource","AppendShell","dataValue","next","asObservable","delayObservable","pipe","delayValue","Object","assign","BlockingResolver","loadingController","create","message","loadingElement","present","dismiss","dismissLoader","deferedObservable","presentLoader","NonBlockingResolver","observablePromise","Promise","reject","RouteResovlersUXPage","NonBlockingResolversPage","promiseObservable","promiseValue","ProgressiveShellResovlersPage","resolvedRouteData","state","error"],"mappings":"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","file":"route-resolvers-ux-route-resolvers-ux-module-es5.js","sourcesContent":["import { Component, OnInit } from '@angular/core';\r\nimport { ActivatedRoute } from '@angular/router';\r\n\r\n// You can also use a Class object as a shell model\r\nimport { ShowcaseShellModel } from '../../showcase-shell.model';\r\n\r\n@Component({\r\n  selector: 'app-showcase-blocking-resolvers',\r\n  templateUrl: './blocking-resolvers.page.html',\r\n  styleUrls: ['./blocking-resolvers.page.scss']\r\n})\r\nexport class BlockingResovlersPage implements OnInit {\r\n  // We will assign data coming from the Route Resolver to this property\r\n  routeResolveData: ShowcaseShellModel;\r\n\r\n  constructor(\r\n    private route: ActivatedRoute\r\n  ) { }\r\n\r\n  ngOnInit(): void {\r\n    console.log('Showcase Blocking Resovlers - ngOnInit()');\r\n\r\n    if (this.route && this.route.data) {\r\n      const dataObservable = this.route.data;\r\n      console.log('Showcase Blocking Resovlers - Route Resolve Observable => dataObservable: ', dataObservable);\r\n\r\n      if (dataObservable) {\r\n        dataObservable.subscribe(observableValue => {\r\n          const pageData: ShowcaseShellModel = observableValue['data'];\r\n          // tslint:disable-next-line:max-line-length\r\n          console.log('Showcase Blocking Resovlers - Subscribe to dataObservable (will emmit just one value) => PageData (' + ((pageData && pageData.isShell) ? 'SHELL' : 'REAL') + '): ', pageData);\r\n          if (pageData) {\r\n            this.routeResolveData = pageData;\r\n          }\r\n        });\r\n      } else {\r\n        console.warn('No dataObservable coming from Route Resolver data');\r\n      }\r\n    } else {\r\n      console.warn('No data coming from Route Resolver');\r\n    }\r\n  }\r\n}\r\n","<ion-header>\r\n  <ion-toolbar color=\"primary\">\r\n    <ion-buttons slot=\"start\">\r\n      <ion-back-button defaultHref=\"showcase/route-resolvers-ux\"></ion-back-button>\r\n    </ion-buttons>\r\n    <ion-title>\r\n      Blocking Resovler Showcase\r\n    </ion-title>\r\n  </ion-toolbar>\r\n</ion-header>\r\n\r\n<ion-content class=\"showcase-content\">\r\n  <section class=\"showcase-section\">\r\n    <p>\r\n      Notice how the UX degrades when using <b>Blocking</b> Route Resolvers in Angular\r\n    </p>\r\n    <ion-row style=\"background-color: #FFF; padding: 10px;\">\r\n      <ion-col size=\"12\">\r\n        <div [ngStyle]=\"{'background-image': 'url(' + routeResolveData?.cover + ')'}\" style=\"background-size: cover; background-repeat: no-repeat;\">\r\n          <app-aspect-ratio [ratio]=\"{w:2, h:1}\">\r\n            <h4 style=\"margin: 10px; text-align: center; color: #FFF;\">Heading on top of a cover image</h4>\r\n          </app-aspect-ratio>\r\n        </div>\r\n      </ion-col>\r\n      <ion-col size=\"4\">\r\n        <app-aspect-ratio [ratio]=\"{w:1, h:1}\">\r\n          <img [src]=\"routeResolveData?.image\" alt=\"Sample Image\" style=\"width: 100%; height: 100%;\"/>\r\n        </app-aspect-ratio>\r\n      </ion-col>\r\n      <ion-col size=\"8\">\r\n        <h3 style=\"margin-top: 0px;\">\r\n          {{ routeResolveData?.title }}\r\n        </h3>\r\n        <p>\r\n          {{ routeResolveData?.description }}\r\n        </p>\r\n      </ion-col>\r\n    </ion-row>\r\n  </section>\r\n</ion-content>\r\n","import { NgModule } from '@angular/core';\r\nimport { CommonModule } from '@angular/common';\r\nimport { FormsModule } from '@angular/forms';\r\nimport { Routes, RouterModule } from '@angular/router';\r\nimport { IonicModule } from '@ionic/angular';\r\nimport { ComponentsModule } from '../../components/components.module';\r\n\r\nimport { RouteResovlersUXPage } from './route-resolvers-ux.page';\r\nimport { NonBlockingResolversPage } from './non-blocking-resolvers/non-blocking-resolvers.page';\r\nimport { BlockingResovlersPage } from './blocking-resolvers/blocking-resolvers.page';\r\nimport { ProgressiveShellResovlersPage } from './progressive-shell-resolvers/progressive-shell-resolvers.page';\r\n\r\nimport { BlockingResolver } from './blocking-resolvers/blocking.resolver';\r\nimport { NonBlockingResolver } from './non-blocking-resolvers/non-blocking.resolver';\r\nimport { ProgressiveShellResolver } from './progressive-shell-resolvers/progressive-shell.resolver';\r\n\r\nimport { ShowcaseService } from '../showcase.service';\r\n\r\nconst routes: Routes = [\r\n  {\r\n    path: '',\r\n    component: RouteResovlersUXPage\r\n  },\r\n  {\r\n    path: 'blocking-resolvers',\r\n    component: BlockingResovlersPage,\r\n    resolve: {\r\n      data: BlockingResolver\r\n    }\r\n  },\r\n  {\r\n    path: 'non-blocking-resolvers',\r\n    component: NonBlockingResolversPage,\r\n    resolve: {\r\n      data: NonBlockingResolver\r\n    }\r\n  },\r\n  {\r\n    path: 'progressive-shell-resolvers',\r\n    component: ProgressiveShellResovlersPage,\r\n    resolve: {\r\n      data: ProgressiveShellResolver\r\n    }\r\n  }\r\n];\r\n\r\n@NgModule({\r\n  imports: [\r\n    CommonModule,\r\n    FormsModule,\r\n    IonicModule,\r\n    RouterModule.forChild(routes),\r\n    ComponentsModule\r\n  ],\r\n  declarations: [\r\n    RouteResovlersUXPage,\r\n    BlockingResovlersPage,\r\n    NonBlockingResolversPage,\r\n    ProgressiveShellResovlersPage\r\n  ],\r\n  providers: [\r\n    BlockingResolver,\r\n    NonBlockingResolver,\r\n    ProgressiveShellResolver,\r\n    ShowcaseService\r\n  ]\r\n})\r\nexport class RouteResolversUXModule {}\r\n","import { Injectable } from '@angular/core';\r\nimport { Resolve } from '@angular/router';\r\n\r\nimport { ShowcaseService } from '../../showcase.service';\r\nimport { ShowcaseShellModel } from '../../showcase-shell.model';\r\nimport { Observable } from 'rxjs';\r\nimport { DataStore } from '../../../shell/data-store';\r\n\r\n@Injectable()\r\nexport class ProgressiveShellResolver implements Resolve<any> {\r\n\r\n  constructor(private showcaseService: ShowcaseService) {}\r\n\r\n  resolve() {\r\n    const dataSource: Observable<ShowcaseShellModel> = this.showcaseService.getDataSourceWithDelay();\r\n    const dataStore: DataStore<ShowcaseShellModel> = this.showcaseService.getSimpleDataStore(dataSource);\r\n\r\n    return dataStore;\r\n  }\r\n}\r\n","import { Observable, of, combineLatest, ReplaySubject } from 'rxjs';\r\nimport { delay, map, startWith } from 'rxjs/operators';\r\nimport { environment } from '../../environments/environment';\r\n\r\nexport class ShellModel {\r\n  isShell = false;\r\n}\r\n\r\nexport class DataStore<T> {\r\n  // We wait on purpose 2 secs on local environment when fetching from json to simulate the backend roundtrip.\r\n  // However, in production you should set this delay to 0 in the environment.prod file.\r\n  // tslint:disable-next-line:max-line-length\r\n  private networkDelay = (environment.appShellConfig && environment.appShellConfig.networkDelay) ? environment.appShellConfig.networkDelay : 0;\r\n\r\n  private timeline: ReplaySubject<T & ShellModel> = new ReplaySubject(1);\r\n\r\n  constructor(private shellModel: T) { }\r\n\r\n  // Static function with generics\r\n  // (ref: https://stackoverflow.com/a/24293088/1116959)\r\n  // Append a shell (T & ShellModel) to every value (T) emmited to the timeline\r\n  public static AppendShell<T>(dataObservable: Observable<T>, shellModel: T, networkDelay = 400): Observable<T & ShellModel> {\r\n    const delayObservable = of(true).pipe(\r\n      delay(networkDelay)\r\n    );\r\n\r\n    // Assign shell flag accordingly\r\n    // (ref: https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Object/assign)\r\n    return combineLatest([\r\n      delayObservable,\r\n      dataObservable\r\n    ]).pipe(\r\n      // Dismiss unnecessary delayValue\r\n      map(([delayValue, dataValue]: [boolean, T]): (T & ShellModel) => Object.assign(dataValue, {isShell: false})),\r\n      // Set the shell model as the initial value\r\n      startWith(Object.assign(shellModel, {isShell: true}))\r\n    );\r\n  }\r\n\r\n  load(dataSourceObservable: Observable<T>, networkDelay?: number): void {\r\n    // tslint:disable-next-line:no-shadowed-variable\r\n    const delay = (typeof networkDelay === 'number') ? networkDelay : this.networkDelay;\r\n\r\n    let processedDataSource: Observable<any>;\r\n\r\n    // If no network delay, then don't show shell\r\n    if (delay === 0) {\r\n      processedDataSource = dataSourceObservable;\r\n    } else {\r\n      processedDataSource = DataStore.AppendShell(dataSourceObservable, this.shellModel, delay);\r\n    }\r\n\r\n    processedDataSource\r\n    .subscribe((dataValue: T & ShellModel) => {\r\n      this.timeline.next(dataValue);\r\n    });\r\n  }\r\n\r\n  public get state(): Observable<T & ShellModel> {\r\n    return this.timeline.asObservable();\r\n  }\r\n}\r\n","import { Injectable } from '@angular/core';\r\nimport { Resolve } from '@angular/router';\r\nimport { LoadingController } from '@ionic/angular';\r\n\r\nimport { defer } from 'rxjs';\r\nimport { finalize } from 'rxjs/operators';\r\n\r\nimport { ShowcaseService } from '../../showcase.service';\r\n\r\n@Injectable()\r\nexport class BlockingResolver implements Resolve<any> {\r\n  private loadingElement: any;\r\n\r\n  constructor(\r\n    private showcaseService: ShowcaseService,\r\n    private loadingController: LoadingController\r\n  ) { }\r\n\r\n  async presentLoader() {\r\n    this.loadingElement = await this.loadingController.create({\r\n      message: 'Loading ...'\r\n    });\r\n\r\n    await this.loadingElement.present();\r\n  }\r\n\r\n  async dismissLoader() {\r\n    if (this.loadingElement) {\r\n      await this.loadingElement.dismiss();\r\n    }\r\n  }\r\n\r\n  resolve() {\r\n    // WITHOUT LOADING INDICATOR\r\n\r\n    // Base Observable (where we get data from)\r\n    // const dataObservable = this.showcaseService.getData();\r\n\r\n    // Basic Resolver that returns the base Observable\r\n    // return dataObservable;\r\n\r\n\r\n    // WITH LOADING INDICATOR\r\n\r\n    // Base Observable (where we get data from)\r\n    const dataObservable = this.showcaseService.getDataSourceWithDelay().pipe(\r\n      finalize(() => {\r\n        console.log('dataObservable COMPLETED - HIDE LOADER');\r\n        this.dismissLoader();\r\n      })\r\n    );\r\n\r\n    const deferedObservable = defer(() => {\r\n      // Will be logged at the moment of subscription\r\n      console.log('dataObservable STARTED - SHOW LOADER');\r\n      this.presentLoader();\r\n      return dataObservable;\r\n    });\r\n\r\n    // Basic Resolver that returns the base Observable\r\n    return deferedObservable;\r\n  }\r\n}\r\n","import { Injectable } from '@angular/core';\r\nimport { Resolve } from '@angular/router';\r\n\r\nimport { ShowcaseService } from '../../showcase.service';\r\n\r\n@Injectable()\r\nexport class NonBlockingResolver implements Resolve<any> {\r\n\r\n  constructor(private showcaseService: ShowcaseService) {}\r\n\r\n  resolve() {\r\n\r\n    // Base Observable (where we get data from)\r\n    const dataObservable = this.showcaseService.getDataSourceWithDelay();\r\n\r\n    // NON-BLOCKING RESOLVERS\r\n\r\n    // Resolver using a ReplySubject that emits the base Observable and then completes\r\n    // const subject = new ReplaySubject();\r\n    // subject.next(dataObservable);\r\n    // subject.complete();\r\n    // return subject;\r\n\r\n    // Resolver using an Observable that emits the base Observable and then completes\r\n    // const observable = Observable.create((observer) => {\r\n    //   observer.next(dataObservable);\r\n    //   observer.complete();\r\n    // });\r\n    // return observable;\r\n\r\n    // Resolver using a Promise that resolves the base Observable\r\n    const observablePromise = new Promise((resolve, reject) => {\r\n      resolve(dataObservable);\r\n    });\r\n    return observablePromise;\r\n  }\r\n}\r\n","import { Component } from '@angular/core';\r\n\r\n@Component({\r\n  selector: 'app-showcase-route-resolvers-ux',\r\n  templateUrl: './route-resolvers-ux.page.html',\r\n  styleUrls: ['./route-resolvers-ux.page.scss']\r\n})\r\n\r\nexport class RouteResovlersUXPage {\r\n\r\n  constructor() { }\r\n\r\n}\r\n","<ion-header>\r\n  <ion-toolbar color=\"primary\">\r\n    <ion-buttons slot=\"start\">\r\n      <ion-menu-button></ion-menu-button>\r\n    </ion-buttons>\r\n    <ion-title>\r\n      Improve Route Resolvers UX\r\n    </ion-title>\r\n  </ion-toolbar>\r\n</ion-header>\r\n\r\n<ion-content class=\"showcase-content\">\r\n  <section class=\"showcase-section\">\r\n    <p>\r\n      Lets see the difference between the different implementations of Route Resolvers.\r\n    </p>\r\n    <h5>Blocking Route Resolvers</h5>\r\n    <p>\r\n      By default, Angular Route Resolvers won't transition to the page until the Resolver Observable completes.\r\n    </p>\r\n    <p>\r\n      Let's suppose the backend is slow and takes 5 seconds to fetch data and return it to the client, this is what's going to happen.\r\n    </p>\r\n    <p>\r\n      <b>Expected behavior:</b> Page transition will be delayed 5 seconds until the server sends data back to the client.\r\n    </p>\r\n    <ion-button expand=\"block\" [routerLink]=\"['/showcase/route-resolvers-ux/blocking-resolvers']\">Blocking Resolvers</ion-button>\r\n  </section>\r\n  <section class=\"showcase-section\">\r\n    <h5>NON-Blocking Route Resolvers</h5>\r\n    <p>\r\n      To avoid waiting for the Observable to complete, we can wrap the base Observable (the one we are getting data from) with a dummy Observable, Subject or Promise that emits the base Observable and immediately completes.\r\n    </p>\r\n    <p>\r\n      <b>Expected behavior:</b> Page transition will be instant and the transitioned page will show a blank state while the server sends data back to the client.\r\n    </p>\r\n    <ion-button expand=\"block\" [routerLink]=\"['/showcase/route-resolvers-ux/non-blocking-resolvers']\">Non-Blocking Resolvers</ion-button>\r\n  </section>\r\n  <section class=\"showcase-section\">\r\n    <h5>Progressive Shell Resolvers</h5>\r\n    <p>\r\n      By using the <code>DataStore</code> utility in conjunction with Angular Route Resolvers, we can solve this UX problem and make page transitions immediate.\r\n    </p>\r\n    <p>\r\n      This approach uses a non-blocking Resolver in conjunction with the <code>DataStore</code> utility.\r\n    </p>\r\n    <p>\r\n      <b>Expected behavior:</b> Page transition will be instant and the transitioned page will show some shell elements while the server sends data back to the client.\r\n    </p>\r\n    <ion-button expand=\"block\" [routerLink]=\"['/showcase/route-resolvers-ux/progressive-shell-resolvers']\">Progressive Shell Resolvers</ion-button>\r\n  </section>\r\n</ion-content>\r\n","import { Component, OnInit } from '@angular/core';\r\nimport { ActivatedRoute } from '@angular/router';\r\n\r\n// You can also use a Class object as a shell model\r\nimport { ShowcaseShellModel } from '../../showcase-shell.model';\r\n\r\n@Component({\r\n  selector: 'app-showcase-non-blocking-resolvers',\r\n  templateUrl: './non-blocking-resolvers.page.html',\r\n  styleUrls: ['./non-blocking-resolvers.page.scss']\r\n})\r\nexport class NonBlockingResolversPage implements OnInit {\r\n  // We will assign data coming from the Route Resolver to this property\r\n  routeResolveData: ShowcaseShellModel;\r\n\r\n  constructor(\r\n    private route: ActivatedRoute\r\n  ) { }\r\n\r\n  ngOnInit(): void {\r\n    console.log('Showcase NON Blocking Resovlers - ngOnInit()');\r\n\r\n    if (this.route && this.route.data) {\r\n      // We resolved a promise for the data Observable\r\n      const promiseObservable = this.route.data;\r\n      console.log('Showcase NON Blocking Resovlers - Route Resolve Observable => promiseObservable: ', promiseObservable);\r\n\r\n      if (promiseObservable) {\r\n        promiseObservable.subscribe(promiseValue => {\r\n          const dataObservable = promiseValue['data'];\r\n          console.log('Showcase NON Blocking Resovlers - Subscribe to promiseObservable => dataObservable: ', dataObservable);\r\n\r\n          if (dataObservable) {\r\n            dataObservable.subscribe(observableValue => {\r\n              const pageData: ShowcaseShellModel = observableValue;\r\n              // tslint:disable-next-line:max-line-length\r\n              console.log('Showcase NON Blocking Resovlers - Subscribe to dataObservable (will emmit just one value) => PageData (' + ((pageData && pageData.isShell) ? 'SHELL' : 'REAL') + '): ', pageData);\r\n              if (pageData) {\r\n                this.routeResolveData = pageData;\r\n              }\r\n            });\r\n          } else {\r\n            console.warn('No dataObservable coming from Route Resolver promiseObservable');\r\n          }\r\n        });\r\n      } else {\r\n        console.warn('No promiseObservable coming from Route Resolver data');\r\n      }\r\n    } else {\r\n      console.warn('No data coming from Route Resolver');\r\n    }\r\n  }\r\n}\r\n","<ion-header>\r\n  <ion-toolbar color=\"primary\">\r\n    <ion-buttons slot=\"start\">\r\n      <ion-back-button defaultHref=\"showcase/route-resolvers-ux\"></ion-back-button>\r\n    </ion-buttons>\r\n    <ion-title>\r\n      NON Blocking Resovler Showcase\r\n    </ion-title>\r\n  </ion-toolbar>\r\n</ion-header>\r\n\r\n<ion-content class=\"showcase-content\">\r\n  <section class=\"showcase-section\">\r\n    <p>\r\n      With Non-Blocking Resolvers, page transition is immediate. However UX degrades because you are showing a static loading indicator while the server sends data back to the client.\r\n    </p>\r\n    <ng-container *ngIf=\"!routeResolveData\">\r\n      <div style=\"margin: 20px 40px; text-align: center;\">\r\n        <ion-spinner></ion-spinner>\r\n        <p>\r\n          <b>You can show a static shell while fetching data from the backend</b>\r\n        </p>\r\n      </div>\r\n    </ng-container>\r\n    <ng-container *ngIf=\"routeResolveData\">\r\n      <ion-row style=\"background-color: #FFF; padding: 10px;\">\r\n        <ion-col size=\"12\">\r\n          <div [ngStyle]=\"{'background-image': 'url(' + routeResolveData?.cover + ')'}\" style=\"background-size: cover; background-repeat: no-repeat;\">\r\n            <app-aspect-ratio [ratio]=\"{w:2, h:1}\">\r\n              <h4 style=\"margin: 10px; text-align: center; color: #FFF;\">Heading on top of a cover image</h4>\r\n            </app-aspect-ratio>\r\n          </div>\r\n        </ion-col>\r\n        <ion-col size=\"4\">\r\n          <app-aspect-ratio [ratio]=\"{w:1, h:1}\">\r\n            <img [src]=\"routeResolveData?.image\" alt=\"Sample Image\" style=\"width: 100%; height: 100%;\"/>\r\n          </app-aspect-ratio>\r\n        </ion-col>\r\n        <ion-col size=\"8\">\r\n          <h3 style=\"margin-top: 0px;\">\r\n            {{ routeResolveData?.title }}\r\n          </h3>\r\n          <p>\r\n            {{ routeResolveData?.description }}\r\n          </p>\r\n        </ion-col>\r\n      </ion-row>\r\n    </ng-container>\r\n  </section>\r\n</ion-content>\r\n","import { Component, OnInit } from '@angular/core';\r\nimport { ActivatedRoute } from '@angular/router';\r\n\r\n// You can also use a Class object as a shell model\r\nimport { ShowcaseShellModel } from '../../showcase-shell.model';\r\nimport { switchMap } from 'rxjs/operators';\r\n\r\n@Component({\r\n  selector: 'app-showcase-progressive-shell-resolvers',\r\n  templateUrl: './progressive-shell-resolvers.page.html',\r\n  styleUrls: ['./progressive-shell-resolvers.page.scss']\r\n})\r\nexport class ProgressiveShellResovlersPage implements OnInit {\r\n  // We will assign data coming from the Route Resolver to this property\r\n  routeResolveData: ShowcaseShellModel;\r\n\r\n  constructor(private route: ActivatedRoute) { }\r\n\r\n  ngOnInit(): void {\r\n    console.log('Showcase Progressive Shell Resovlers - ngOnInit()');\r\n\r\n    this.route.data\r\n    .pipe(\r\n      // Extract data for this page\r\n      switchMap((resolvedRouteData) => resolvedRouteData['data'].state)\r\n    )\r\n    .subscribe((state: any) => {\r\n      this.routeResolveData = state;\r\n    }, (error) => console.log(error));\r\n  }\r\n}\r\n","<ion-header>\r\n  <ion-toolbar color=\"primary\">\r\n    <ion-buttons slot=\"start\">\r\n      <ion-back-button defaultHref=\"showcase/route-resolvers-ux\"></ion-back-button>\r\n    </ion-buttons>\r\n    <ion-title>\r\n      Progressive Shell Showcase\r\n    </ion-title>\r\n  </ion-toolbar>\r\n</ion-header>\r\n\r\n<ion-content class=\"showcase-content\">\r\n  <section class=\"showcase-section\">\r\n    <ion-row style=\"background-color: #FFF; padding: 10px;\">\r\n      <ion-col size=\"12\">\r\n        <app-image-shell class=\"add-overlay\" animation=\"spinner\" [display]=\"'cover'\" [src]=\"routeResolveData?.cover\" [alt]=\"'Sample Image Cover'\">\r\n          <app-aspect-ratio [ratio]=\"{w:2, h:1}\">\r\n            <h4 style=\"margin: 10px; text-align: center; color: #FFF;\">Heading on top of a cover image</h4>\r\n          </app-aspect-ratio>\r\n        </app-image-shell>\r\n      </ion-col>\r\n      <ion-col size=\"4\">\r\n        <app-aspect-ratio [ratio]=\"{w:1, h:1}\">\r\n          <app-image-shell animation=\"spinner\" [src]=\"routeResolveData?.image\" [alt]=\"'Sample Image'\"></app-image-shell>\r\n        </app-aspect-ratio>\r\n      </ion-col>\r\n      <ion-col size=\"8\">\r\n        <h3 style=\"margin-top: 0px;\">\r\n          <app-text-shell [data]=\"routeResolveData?.title\"></app-text-shell>\r\n        </h3>\r\n        <p>\r\n          <app-text-shell animation=\"bouncing\" lines=\"3\" [data]=\"routeResolveData?.description\"></app-text-shell>\r\n        </p>\r\n      </ion-col>\r\n    </ion-row>\r\n  </section>\r\n</ion-content>\r\n"]}