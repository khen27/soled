{"version":3,"sources":["webpack:///src/app/firebase/crud/user/select-image/user-image.model.ts","webpack:///src/app/firebase/crud/listing/firebase-listing.model.ts","webpack:///src/app/firebase/crud/user/create/firebase-create-user.modal.html","webpack:///src/app/firebase/crud/user/create/firebase-create-user.modal.ts","webpack:///src/app/shell/data-store.ts","webpack:///src/app/firebase/crud/firebase-crud.service.ts","webpack:///src/app/firebase/crud/user/select-image/select-user-image.modal.ts","webpack:///src/app/firebase/crud/user/select-image/select-user-image.modal.html","webpack:///src/app/firebase/crud/firebase-crud-shared.module.ts","webpack:///src/app/firebase/crud/user/firebase-user.model.ts","webpack:///src/app/validators/checkbox-checked.validator.ts"],"names":["UserImageModel","FirebaseListingItemModel","FirebaseCreateUserModal","modalController","firebaseCrudService","userData","skills","avatar","createUserForm","name","required","lastname","email","compose","pattern","phone","birthdate","minSelectedCheckboxes","spanish","english","french","getSkills","subscribe","map","controls","push","value","dismiss","unix","languages","selectedSkills","index","id","createUser","then","dismissModal","getTop","component","swipeToClose","presentingElement","create","modal","onDidDismiss","data","link","present","get","changeUserImage","selector","templateUrl","styleUrls","ShellModel","isShell","DataStore","shellModel","networkDelay","appShellConfig","timeline","dataSourceObservable","delay","processedDataSource","AppendShell","dataValue","next","asObservable","dataObservable","delayObservable","pipe","delayValue","Object","assign","FirebaseCrudService","platformId","transferStateHelper","afs","rawDataSource","collection","valueChanges","idField","actions","user","age","calcUserAge","cachedDataSource","checkDataSourceState","dataSource","listingDataStore","load","lower","upper","minDate","Date","now","subtract","maxDate","listingCollection","ref","orderBy","startAt","endAt","userId","getUser","userSkillsObservables","skill","getSkill","userDetails","userSkills","combinedUserDataStore","combinedUserDataSource","relatedUsersObservable","getUsersWithSameSkill","relatedUsersDataStore","add","doc","set","userKey","avatarsDataStore","skillId","snapshotChanges","a","payload","queries","where","relatedUsers","flattenedRelatedUsers","concat","filteredRelatedUsers","reduce","accumulatedUsers","findIndex","accumulatedUser","dateOfBirth","diff","SelectUserImageModal","getAvatarsDataSource","dataStore","getAvatarsStore","state","avatars","error","FirebaseCrudSharedModule","imports","declarations","exports","FirebaseSkillModel","FirebaseUserModel","FirebaseCombinedUserModel","CheckboxCheckedValidator","min","validator","formArray","totalSelected","control","prev"],"mappings":"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","file":"default~crud-listing-firebase-listing-module~crud-user-firebase-user-details-module-es5.js","sourcesContent":["import { ShellModel } from '../../../../shell/data-store';\r\n\r\nexport class UserImageModel extends ShellModel {\r\n  link: string;\r\n\r\n  constructor() {\r\n    super();\r\n  }\r\n}\r\n","import { ShellModel } from '../../../shell/data-store';\r\n\r\nexport class FirebaseListingItemModel extends ShellModel {\r\n  image: string;\r\n  name: string;\r\n  birthdate: number; // timestamp\r\n  lastname: string;\r\n  age: number;\r\n  id: string;\r\n\r\n  constructor() {\r\n    super();\r\n  }\r\n}\r\n","<!-- This is the proper way if you have submit button outside your ion-content form (typically in the ion-header or ion-footer) -->\r\n<!-- (ref: https://github.com/ionic-team/ionic/issues/16661) -->\r\n<form class=\"create-user-form ion-page\" [formGroup]=\"createUserForm\" (ngSubmit)=\"createUser()\">\r\n  <ion-header>\r\n    <ion-toolbar color=\"primary\">\r\n      <ion-buttons slot=\"end\">\r\n        <ion-button (click)=\"dismissModal()\">\r\n          <ion-icon slot=\"icon-only\" name=\"close\"></ion-icon>\r\n        </ion-button>\r\n      </ion-buttons>\r\n      <ion-title>New User</ion-title>\r\n    </ion-toolbar>\r\n  </ion-header>\r\n\r\n  <ion-content class=\"create-user-content\">\r\n    <ion-row class=\"select-user-image-row\">\r\n      <ion-col class=\"user-image-col\" size=\"5\">\r\n        <app-aspect-ratio [ratio]=\"{w: 1, h: 1}\">\r\n          <app-image-shell [display]=\"'cover'\" class=\"user-image\" animation=\"spinner\" [src]=\"userData.avatar\" [alt]=\"'user image'\"></app-image-shell>\r\n        </app-aspect-ratio>\r\n        <ion-button class=\"change-image-btn\" color=\"secondary\" (click)=\"changeUserImage()\">\r\n          <ion-icon class=\"btn-icon\" slot=\"icon-only\" name=\"camera\"></ion-icon>\r\n        </ion-button>\r\n      </ion-col>\r\n    </ion-row>\r\n\r\n    <section class=\"user-details-fields fields-section\">\r\n      <ion-list class=\"inputs-list\" lines=\"full\">\r\n        <ion-item class=\"input-item\">\r\n          <ion-label color=\"secondary\" position=\"floating\">Name</ion-label>\r\n          <ion-input type=\"text\" formControlName=\"name\" required></ion-input>\r\n        </ion-item>\r\n        <ion-item class=\"input-item\">\r\n          <ion-label color=\"secondary\" position=\"floating\">Last name</ion-label>\r\n          <ion-input type=\"text\" formControlName=\"lastname\" required></ion-input>\r\n        </ion-item>\r\n        <ion-item class=\"input-item\">\r\n          <ion-label color=\"secondary\" position=\"floating\">Date of Birth</ion-label>\r\n          <ion-datetime display-format=\"DD/MM/YYYY\" picker-format=\"DD MMMM YYYY\" formControlName=\"birthdate\" required></ion-datetime>\r\n        </ion-item>\r\n        <ion-item class=\"input-item\">\r\n          <ion-label color=\"secondary\" position=\"floating\">Phone number</ion-label>\r\n          <ion-input type=\"tel\" formControlName=\"phone\" required></ion-input>\r\n        </ion-item>\r\n        <ion-item class=\"input-item\">\r\n          <ion-label color=\"secondary\" position=\"floating\">Email</ion-label>\r\n          <ion-input type=\"email\" formControlName=\"email\" required></ion-input>\r\n        </ion-item>\r\n      </ion-list>\r\n    </section>\r\n\r\n    <section class=\"user-experience-fields fields-section\">\r\n      <h5 class=\"section-header\">Experience in</h5>\r\n      <ion-row class=\"checkbox-tags rounded-checkbox-tags\">\r\n        <ion-item formArrayName=\"skills\" lines=\"none\" class=\"checkbox-tag rounded-tag\" *ngFor=\"let skill of skillsFormArray.controls; let i = index;\">\r\n          <ion-label class=\"tag-label\">{{skills[i].name}}</ion-label>\r\n          <ion-checkbox [formControlName]=\"i\"></ion-checkbox>\r\n        </ion-item>\r\n      </ion-row>\r\n    </section>\r\n\r\n    <section class=\"user-languages-fields fields-section\">\r\n      <h5 class=\"section-header\">Languages</h5>\r\n      <ion-row class=\"range-item-row\">\r\n        <ion-col size=\"12\">\r\n          <div class=\"range-header\">\r\n            <span class=\"range-label\">English</span>\r\n            <span class=\"range-value\">{{ changeLangValue(createUserForm.controls.english.value) }}</span>\r\n          </div>\r\n        </ion-col>\r\n        <ion-col size=\"12\">\r\n          <ion-range class=\"range-control\" formControlName=\"english\" color=\"secondary\" min=\"1\" max=\"10\" step=\"1\"></ion-range>\r\n        </ion-col>\r\n      </ion-row>\r\n      <ion-row class=\"range-item-row\">\r\n        <ion-col size=\"12\">\r\n          <div class=\"range-header\">\r\n            <span class=\"range-label\">Spanish</span>\r\n            <span class=\"range-value\">{{ changeLangValue(createUserForm.controls.spanish.value) }}</span>\r\n          </div>\r\n        </ion-col>\r\n        <ion-col size=\"12\">\r\n          <ion-range class=\"range-control\" formControlName=\"spanish\" color=\"secondary\" min=\"1\" max=\"10\" step=\"1\"></ion-range>\r\n        </ion-col>\r\n      </ion-row>\r\n      <ion-row class=\"range-item-row\">\r\n        <ion-col size=\"12\">\r\n          <div class=\"range-header\">\r\n            <span class=\"range-label\">French</span>\r\n            <span class=\"range-value\">{{ changeLangValue(createUserForm.controls.french.value) }}</span>\r\n          </div>\r\n        </ion-col>\r\n        <ion-col size=\"12\">\r\n          <ion-range class=\"range-control\" formControlName=\"french\" color=\"secondary\" min=\"1\" max=\"10\" step=\"1\"></ion-range>\r\n        </ion-col>\r\n      </ion-row>\r\n    </section>\r\n  </ion-content>\r\n\r\n  <ion-footer>\r\n    <ion-row class=\"form-actions-wrapper\">\r\n      <ion-col>\r\n        <ion-button class=\"submit-btn\" expand=\"block\" color=\"secondary\" type=\"submit\" fill=\"solid\" [disabled]=\"!createUserForm.valid\">CREATE</ion-button>\r\n      </ion-col>\r\n    </ion-row>\r\n  </ion-footer>\r\n</form>\r\n","import { Component, OnInit } from '@angular/core';\r\nimport { ModalController } from '@ionic/angular';\r\nimport { Validators, FormGroup, FormControl, FormArray } from '@angular/forms';\r\nimport * as dayjs from 'dayjs';\r\n\r\nimport { CheckboxCheckedValidator } from '../../../../validators/checkbox-checked.validator';\r\n\r\nimport { FirebaseUserModel } from '../firebase-user.model';\r\nimport { SelectUserImageModal } from '../select-image/select-user-image.modal';\r\nimport { FirebaseCrudService } from '../../firebase-crud.service';\r\n\r\n@Component({\r\n  selector: 'app-firebase-create-user',\r\n  templateUrl: './firebase-create-user.modal.html',\r\n  styleUrls: [\r\n    './styles/firebase-create-user.modal.scss',\r\n    './styles/firebase-create-user.shell.scss'\r\n  ],\r\n})\r\nexport class FirebaseCreateUserModal implements OnInit {\r\n  createUserForm: FormGroup;\r\n  userData: FirebaseUserModel = new FirebaseUserModel();\r\n  skills = [];\r\n\r\n  constructor(\r\n    private modalController: ModalController,\r\n    public firebaseCrudService: FirebaseCrudService\r\n  ) { }\r\n\r\n  ngOnInit() {\r\n    // default image\r\n    this.userData.avatar = 'https://s3-us-west-2.amazonaws.com/ionicthemes/otros/avatar-placeholder.png';\r\n\r\n    this.createUserForm = new FormGroup({\r\n      name: new FormControl('', Validators.required),\r\n      lastname: new FormControl('', Validators.required),\r\n      email: new FormControl('', Validators.compose([\r\n        Validators.required,\r\n        Validators.pattern('^[a-zA-Z0-9_.+-]+@[a-zA-Z0-9-]+.[a-zA-Z0-9-.]+$')\r\n      ])),\r\n      phone: new FormControl('', Validators.required),\r\n      birthdate: new FormControl(Validators.required),\r\n      skills: new FormArray([], CheckboxCheckedValidator.minSelectedCheckboxes(1)),\r\n      spanish: new FormControl(),\r\n      english: new FormControl(),\r\n      french: new FormControl()\r\n    });\r\n\r\n    this.firebaseCrudService.getSkills().subscribe(skills => {\r\n      this.skills = skills;\r\n      // create skill checkboxes\r\n      this.skills.map(() => {\r\n        (this.createUserForm.controls.skills as FormArray).push(new FormControl());\r\n      });\r\n    });\r\n  }\r\n\r\n  get skillsFormArray() { return <FormArray>this.createUserForm.get('skills'); }\r\n\r\n  changeLangValue(value): string {\r\n    switch (true) {\r\n      case (value <= 3 ):\r\n        return 'Novice';\r\n      case (value > 3 && value <= 6 ):\r\n        return 'Competent';\r\n      case (value > 6 ):\r\n        return 'Expert';\r\n    }\r\n  }\r\n\r\n  dismissModal() {\r\n   this.modalController.dismiss();\r\n  }\r\n\r\n  createUser() {\r\n    this.userData.name = this.createUserForm.value.name;\r\n    this.userData.lastname = this.createUserForm.value.lastname;\r\n    this.userData.birthdate = dayjs(this.createUserForm.value.birthdate).unix(); // save it in timestamp\r\n    this.userData.phone = this.createUserForm.value.phone;\r\n    this.userData.email = this.createUserForm.value.email;\r\n    this.userData.languages.spanish = this.createUserForm.value.spanish;\r\n    this.userData.languages.english = this.createUserForm.value.english;\r\n    this.userData.languages.french = this.createUserForm.value.french;\r\n\r\n    // get the ids of the selected skills\r\n    const selectedSkills = [];\r\n\r\n    this.createUserForm.value.skills\r\n    .map((value: any, index: number) => {\r\n      if (value) {\r\n        selectedSkills.push(this.skills[index].id);\r\n      }\r\n    });\r\n    this.userData.skills = selectedSkills;\r\n\r\n    this.firebaseCrudService.createUser(this.userData)\r\n    .then(() => {\r\n      this.dismissModal();\r\n    });\r\n  }\r\n\r\n  async changeUserImage() {\r\n    const modal = await this.modalController.create({\r\n      component: SelectUserImageModal,\r\n      swipeToClose: true,\r\n      presentingElement: await this.modalController.getTop()\r\n    });\r\n\r\n    modal.onDidDismiss().then(avatar => {\r\n      if (avatar.data != null) {\r\n        this.userData.avatar = avatar.data.link;\r\n      }\r\n    });\r\n    await modal.present();\r\n  }\r\n\r\n}\r\n","import { Observable, of, combineLatest, ReplaySubject } from 'rxjs';\r\nimport { delay, map, startWith } from 'rxjs/operators';\r\nimport { environment } from '../../environments/environment';\r\n\r\nexport class ShellModel {\r\n  isShell = false;\r\n}\r\n\r\nexport class DataStore<T> {\r\n  // We wait on purpose 2 secs on local environment when fetching from json to simulate the backend roundtrip.\r\n  // However, in production you should set this delay to 0 in the environment.prod file.\r\n  // tslint:disable-next-line:max-line-length\r\n  private networkDelay = (environment.appShellConfig && environment.appShellConfig.networkDelay) ? environment.appShellConfig.networkDelay : 0;\r\n\r\n  private timeline: ReplaySubject<T & ShellModel> = new ReplaySubject(1);\r\n\r\n  constructor(private shellModel: T) { }\r\n\r\n  // Static function with generics\r\n  // (ref: https://stackoverflow.com/a/24293088/1116959)\r\n  // Append a shell (T & ShellModel) to every value (T) emmited to the timeline\r\n  public static AppendShell<T>(dataObservable: Observable<T>, shellModel: T, networkDelay = 400): Observable<T & ShellModel> {\r\n    const delayObservable = of(true).pipe(\r\n      delay(networkDelay)\r\n    );\r\n\r\n    // Assign shell flag accordingly\r\n    // (ref: https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Object/assign)\r\n    return combineLatest([\r\n      delayObservable,\r\n      dataObservable\r\n    ]).pipe(\r\n      // Dismiss unnecessary delayValue\r\n      map(([delayValue, dataValue]: [boolean, T]): (T & ShellModel) => Object.assign(dataValue, {isShell: false})),\r\n      // Set the shell model as the initial value\r\n      startWith(Object.assign(shellModel, {isShell: true}))\r\n    );\r\n  }\r\n\r\n  load(dataSourceObservable: Observable<T>, networkDelay?: number): void {\r\n    // tslint:disable-next-line:no-shadowed-variable\r\n    const delay = (typeof networkDelay === 'number') ? networkDelay : this.networkDelay;\r\n\r\n    let processedDataSource: Observable<any>;\r\n\r\n    // If no network delay, then don't show shell\r\n    if (delay === 0) {\r\n      processedDataSource = dataSourceObservable;\r\n    } else {\r\n      processedDataSource = DataStore.AppendShell(dataSourceObservable, this.shellModel, delay);\r\n    }\r\n\r\n    processedDataSource\r\n    .subscribe((dataValue: T & ShellModel) => {\r\n      this.timeline.next(dataValue);\r\n    });\r\n  }\r\n\r\n  public get state(): Observable<T & ShellModel> {\r\n    return this.timeline.asObservable();\r\n  }\r\n}\r\n","import { Inject, Injectable, PLATFORM_ID } from '@angular/core';\r\nimport { AngularFirestore, DocumentReference } from '@angular/fire/firestore';\r\n\r\nimport { Observable, of, forkJoin, throwError, combineLatest } from 'rxjs';\r\nimport { map, concatMap, first, filter } from 'rxjs/operators';\r\nimport * as dayjs from 'dayjs';\r\nimport { DataStore, ShellModel } from '../../shell/data-store';\r\nimport { FirebaseListingItemModel } from './../crud/listing/firebase-listing.model';\r\nimport { FirebaseCombinedUserModel, FirebaseSkillModel, FirebaseUserModel } from './../crud/user/firebase-user.model';\r\nimport { UserImageModel } from './../crud/user/select-image/user-image.model';\r\nimport { TransferStateHelper } from '../../utils/transfer-state-helper';\r\nimport { isPlatformServer } from '@angular/common';\r\n\r\n@Injectable()\r\nexport class FirebaseCrudService {\r\n  // Listing Page\r\n  private listingDataStore: DataStore<Array<FirebaseListingItemModel>>;\r\n  // User Details Page\r\n  private combinedUserDataStore: DataStore<FirebaseCombinedUserModel>;\r\n  private relatedUsersDataStore: DataStore<Array<FirebaseListingItemModel>>;\r\n  // Select User Image Modal\r\n  private avatarsDataStore: DataStore<Array<UserImageModel>>;\r\n\r\n  constructor(\r\n    @Inject(PLATFORM_ID) private platformId: object,\r\n    private transferStateHelper: TransferStateHelper,\r\n    private afs: AngularFirestore\r\n  ) {}\r\n\r\n  /*\r\n    Firebase User Listing Page\r\n  */\r\n  public getListingDataSource(): Observable<Array<FirebaseListingItemModel>> {\r\n    const rawDataSource = this.afs.collection<FirebaseListingItemModel>('users').valueChanges({ idField: 'id' })\r\n     .pipe(\r\n       map(actions => actions.map(user => {\r\n          const age = this.calcUserAge(user.birthdate);\r\n          return { age, ...user } as FirebaseListingItemModel;\r\n        })\r\n      )\r\n    );\r\n\r\n    // This method tapps into the raw data source and stores the resolved data in the TransferState, then when\r\n    // transitioning from the server rendered view to the browser, checks if we already loaded the data in the server to prevent\r\n    // duplicate http requests.\r\n    const cachedDataSource = this.transferStateHelper.checkDataSourceState('firebase-listing-state', rawDataSource);\r\n\r\n    return cachedDataSource;\r\n  }\r\n\r\n  public getListingStore(dataSource: Observable<Array<FirebaseListingItemModel>>): DataStore<Array<FirebaseListingItemModel>> {\r\n    // Use cache if available\r\n    if (!this.listingDataStore) {\r\n      // Initialize the model specifying that it is a shell model\r\n      const shellModel: Array<FirebaseListingItemModel> = [\r\n        new FirebaseListingItemModel(),\r\n        new FirebaseListingItemModel(),\r\n        new FirebaseListingItemModel(),\r\n        new FirebaseListingItemModel(),\r\n        new FirebaseListingItemModel(),\r\n        new FirebaseListingItemModel()\r\n      ];\r\n      this.listingDataStore = new DataStore(shellModel);\r\n\r\n      // If running in the server, then don't add shell to the Data Store\r\n      // If we already loaded the Data Source in the server, then don't show a shell when transitioning back to the broswer from the server\r\n      if (isPlatformServer(this.platformId) || dataSource['ssr_state']) {\r\n        // Trigger loading mechanism with 0 delay (this will prevent the shell to be shown)\r\n        this.listingDataStore.load(dataSource, 0);\r\n      } else { // On browser transitions\r\n        // Trigger the loading mechanism (with shell)\r\n        this.listingDataStore.load(dataSource);\r\n      }\r\n    }\r\n\r\n    return this.listingDataStore;\r\n  }\r\n\r\n  // Filter users by age\r\n  public searchUsersByAge(lower: number, upper: number): Observable<Array<FirebaseListingItemModel>> {\r\n    // we save the dateOfBirth in our DB so we need to calc the min and max dates valid for this query\r\n    const minDate = (dayjs(Date.now()).subtract(upper, 'year')).unix();\r\n    const maxDate =  (dayjs(Date.now()).subtract(lower, 'year')).unix();\r\n\r\n    const listingCollection = this.afs.collection<FirebaseListingItemModel>('users', ref =>\r\n      ref.orderBy('birthdate').startAt(minDate).endAt(maxDate));\r\n\r\n    return listingCollection.valueChanges({ idField: 'id' }).pipe(\r\n      map(actions => actions.map(user => {\r\n         const age = this.calcUserAge(user.birthdate);\r\n         return { age, ...user } as FirebaseListingItemModel;\r\n       })\r\n     ));\r\n  }\r\n\r\n  /*\r\n    Firebase User Details Page\r\n  */\r\n  // Concat the userData with the details of the userSkills (from the skills collection)\r\n  public getCombinedUserDataSource(userId: string): Observable<FirebaseCombinedUserModel> {\r\n    const rawDataSource = this.getUser(userId)\r\n    .pipe(\r\n      // Transformation operator: Map each source value (user) to an Observable (combineDataSources | throwError) which\r\n      // is merged in the output Observable\r\n      concatMap(user => {\r\n        if (user && user.skills) {\r\n          // Map each skill id and get the skill data as an Observable\r\n          const userSkillsObservables: Array<Observable<FirebaseSkillModel>> = user.skills.map(skill => {\r\n            return this.getSkill(skill).pipe(first());\r\n          });\r\n\r\n          // Combination operator: Take the most recent value from both input sources (of(user) & forkJoin(userSkillsObservables)),\r\n          // and transform those emitted values into one value ([userDetails, userSkills])\r\n          return combineLatest([\r\n            of(user),\r\n            forkJoin(userSkillsObservables)\r\n          ]).pipe(\r\n            map(([userDetails, userSkills]: [FirebaseUserModel, Array<FirebaseSkillModel>]) => {\r\n              // Spread operator (see: https://dev.to/napoleon039/how-to-use-the-spread-and-rest-operator-4jbb)\r\n              return {\r\n                ...userDetails,\r\n                skills: userSkills\r\n              } as FirebaseCombinedUserModel;\r\n            })\r\n          );\r\n        } else {\r\n          // Throw error\r\n          return throwError('User does not have any skills.');\r\n        }\r\n      })\r\n    );\r\n\r\n    // This method tapps into the raw data source and stores the resolved data in the TransferState, then when\r\n    // transitioning from the server rendered view to the browser, checks if we already loaded the data in the server to prevent\r\n    // duplicate http requests.\r\n    const cachedDataSource = this.transferStateHelper.checkDataSourceState(`firebase-user-${userId}-state`, rawDataSource);\r\n\r\n    return cachedDataSource;\r\n  }\r\n\r\n  public getCombinedUserStore(dataSource: Observable<FirebaseCombinedUserModel>): DataStore<FirebaseCombinedUserModel> {\r\n    // Initialize the model specifying that it is a shell model\r\n    const shellModel: FirebaseCombinedUserModel = new FirebaseCombinedUserModel();\r\n    this.combinedUserDataStore = new DataStore(shellModel);\r\n\r\n    // If running in the server, then don't add shell to the Data Store\r\n    // If we already loaded the Data Source in the server, then don't show a shell when transitioning back to the broswer from the server\r\n    if (isPlatformServer(this.platformId) || dataSource['ssr_state']) {\r\n      // Trigger loading mechanism with 0 delay (this will prevent the shell to be shown)\r\n      this.combinedUserDataStore.load(dataSource, 0);\r\n    } else { // On browser transitions\r\n      // Trigger the loading mechanism (with shell)\r\n      this.combinedUserDataStore.load(dataSource);\r\n    }\r\n\r\n    return this.combinedUserDataStore;\r\n  }\r\n\r\n  // tslint:disable-next-line:max-line-length\r\n  public getRelatedUsersDataSource(combinedUserDataSource: Observable<FirebaseCombinedUserModel & ShellModel>, userId: string): Observable<Array<FirebaseListingItemModel>>  {\r\n    const rawDataSource = combinedUserDataSource\r\n    .pipe(\r\n      // Filter user values that are not shells. We need to add this filter if using the combinedUserDataStore timeline\r\n      filter(user => !user.isShell),\r\n      concatMap(user => {\r\n        if (user && user.skills) {\r\n          // Get all users with at least 1 skill in common\r\n          const relatedUsersObservable: Observable<Array<FirebaseListingItemModel>> =\r\n          this.getUsersWithSameSkill(user.id, user.skills);\r\n\r\n          return relatedUsersObservable;\r\n        } else {\r\n          // Throw error\r\n          return throwError('Could not get related user');\r\n        }\r\n      })\r\n    );\r\n\r\n    // This method tapps into the raw data source and stores the resolved data in the TransferState, then when\r\n    // transitioning from the server rendered view to the browser, checks if we already loaded the data in the server to prevent\r\n    // duplicate http requests.\r\n    const cachedDataSource = this.transferStateHelper.checkDataSourceState(`firebase-user-${userId}-related-users-state`, rawDataSource);\r\n\r\n    return cachedDataSource;\r\n  }\r\n\r\n  public getRelatedUsersStore(dataSource: Observable<Array<FirebaseListingItemModel>>): DataStore<Array<FirebaseListingItemModel>> {\r\n    // Initialize the model specifying that it is a shell model\r\n    const shellModel: Array<FirebaseListingItemModel> = [\r\n      new FirebaseListingItemModel(),\r\n      new FirebaseListingItemModel(),\r\n      new FirebaseListingItemModel()\r\n    ];\r\n    this.relatedUsersDataStore = new DataStore(shellModel);\r\n\r\n    // If running in the server, then don't add shell to the Data Store\r\n    // If we already loaded the Data Source in the server, then don't show a shell when transitioning back to the broswer from the server\r\n    if (isPlatformServer(this.platformId) || dataSource['ssr_state']) {\r\n      // Trigger loading mechanism with 0 delay (this will prevent the shell to be shown)\r\n      this.relatedUsersDataStore.load(dataSource, 0);\r\n    } else { // On browser transitions\r\n      // Trigger the loading mechanism (with shell)\r\n      this.relatedUsersDataStore.load(dataSource);\r\n    }\r\n\r\n    return this.relatedUsersDataStore;\r\n  }\r\n\r\n  /*\r\n    Firebase Create User Modal\r\n  */\r\n  public createUser(userData: FirebaseUserModel): Promise<DocumentReference>  {\r\n    return this.afs.collection('users').add({...userData});\r\n  }\r\n\r\n  /*\r\n    Firebase Update User Modal\r\n  */\r\n  public updateUser(userData: FirebaseUserModel): Promise<void> {\r\n    return this.afs.collection('users').doc(userData.id).set(userData);\r\n  }\r\n\r\n  public deleteUser(userKey: string): Promise<void> {\r\n    return this.afs.collection('users').doc(userKey).delete();\r\n  }\r\n\r\n  /*\r\n    Firebase Select User Image Modal\r\n  */\r\n  public getAvatarsDataSource(): Observable<Array<UserImageModel>> {\r\n    return this.afs.collection<UserImageModel>('avatars').valueChanges();\r\n  }\r\n\r\n  public getAvatarsStore(dataSource: Observable<Array<UserImageModel>>): DataStore<Array<UserImageModel>> {\r\n    // Use cache if available\r\n    if (!this.avatarsDataStore) {\r\n      // Initialize the model specifying that it is a shell model\r\n      const shellModel: Array<UserImageModel> = [\r\n        new UserImageModel(),\r\n        new UserImageModel(),\r\n        new UserImageModel(),\r\n        new UserImageModel(),\r\n        new UserImageModel()\r\n      ];\r\n\r\n      this.avatarsDataStore = new DataStore(shellModel);\r\n      // Trigger the loading mechanism (with shell) in the dataStore\r\n      this.avatarsDataStore.load(dataSource);\r\n    }\r\n    return this.avatarsDataStore;\r\n  }\r\n\r\n  /*\r\n    FireStore utility methods\r\n  */\r\n  // Get list of all available Skills (used in the create and update modals)\r\n  public getSkills(): Observable<Array<FirebaseSkillModel>> {\r\n    return this.afs.collection<FirebaseSkillModel>('skills').valueChanges({ idField: 'id' });\r\n  }\r\n\r\n  // Get data of a specific Skill\r\n  private getSkill(skillId: string): Observable<FirebaseSkillModel> {\r\n    return this.afs.doc<FirebaseSkillModel>('skills/' + skillId)\r\n    .snapshotChanges()\r\n    .pipe(\r\n      map(a => {\r\n        const data = a.payload.data();\r\n        const id = a.payload.id;\r\n        return { id, ...data } as FirebaseSkillModel;\r\n      })\r\n    );\r\n  }\r\n\r\n\r\n  // Get data of a specific User\r\n  private getUser(userId: string): Observable<FirebaseUserModel> {\r\n    return this.afs.doc<FirebaseUserModel>('users/' + userId)\r\n    .snapshotChanges()\r\n    .pipe(\r\n      map(a => {\r\n        const userData = a.payload.data();\r\n        const id = a.payload.id;\r\n        const age = userData ? this.calcUserAge(userData.birthdate) : 0;\r\n        return { id, age, ...userData } as FirebaseUserModel;\r\n      })\r\n    );\r\n  }\r\n\r\n  // Get all users who share at least 1 skill of the user's 'skills' list\r\n  private getUsersWithSameSkill(userId: string, skills: Array<FirebaseSkillModel>): Observable<Array<FirebaseListingItemModel>> {\r\n    // Get the users who have at least 1 skill in common\r\n    // Because firestore doesn't have a logical 'OR' operator we need to create multiple queries, one for each skill from the 'skills' list\r\n    const queries = skills.map(skill => {\r\n      return this.afs.collection('users', ref => ref\r\n      .where('skills', 'array-contains', skill.id))\r\n      .valueChanges({ idField: 'id' });\r\n    });\r\n\r\n    // Combine all these queries\r\n    return combineLatest(queries).pipe(\r\n      map((relatedUsers: FirebaseListingItemModel[][]) => {\r\n        // Flatten the array of arrays of FirebaseListingItemModel\r\n        const flattenedRelatedUsers = ([] as FirebaseListingItemModel[]).concat(...relatedUsers);\r\n\r\n        // Removes duplicates from the array of FirebaseListingItemModel objects.\r\n        // Also remove the original user (userId)\r\n        const filteredRelatedUsers = flattenedRelatedUsers\r\n        .reduce((accumulatedUsers, user) => {\r\n          if ((accumulatedUsers.findIndex(accumulatedUser => accumulatedUser.id === user.id) < 0) && (user.id !== userId)) {\r\n            return [...accumulatedUsers, user];\r\n          } else {\r\n            // If the user doesn't pass the test, then don't add it to the filtered users array\r\n            return accumulatedUsers;\r\n          }\r\n        }, ([] as FirebaseListingItemModel[]));\r\n\r\n        return filteredRelatedUsers;\r\n      })\r\n    );\r\n  }\r\n\r\n  private calcUserAge(dateOfBirth: number): number {\r\n    return dayjs(Date.now()).diff(dayjs.unix(dateOfBirth), 'year');\r\n  }\r\n}\r\n","import { Component, OnInit, HostBinding } from '@angular/core';\r\nimport { ModalController } from '@ionic/angular';\r\n\r\nimport { UserImageModel } from './user-image.model';\r\nimport { ShellModel } from '../../../../shell/data-store';\r\nimport { FirebaseCrudService } from '../../firebase-crud.service';\r\n\r\n@Component({\r\n  selector: 'app-select-user-image',\r\n  templateUrl: './select-user-image.modal.html',\r\n  styleUrls: [\r\n    './styles/select-user-image.modal.scss',\r\n    './styles/select-user-image.shell.scss'\r\n  ]\r\n})\r\nexport class SelectUserImageModal implements OnInit {\r\n  // Use Typescript intersection types to enable docorating the Array of firebase models with a shell model\r\n  // (ref: https://www.typescriptlang.org/docs/handbook/advanced-types.html#intersection-types)\r\n  avatars: Array<UserImageModel> & ShellModel;\r\n\r\n  @HostBinding('class.is-shell') get isShell() {\r\n    return (this.avatars && this.avatars.isShell) ? true : false;\r\n  }\r\n\r\n  constructor(\r\n    private modalController: ModalController,\r\n    public firebaseCrudService: FirebaseCrudService\r\n  ) { }\r\n\r\n  ngOnInit() {\r\n    const dataSource = this.firebaseCrudService.getAvatarsDataSource();\r\n    const dataStore = this.firebaseCrudService.getAvatarsStore(dataSource);\r\n\r\n    dataStore.state.subscribe(\r\n      (state) => {\r\n        this.avatars = state;\r\n      },\r\n      (error) => {}\r\n    );\r\n  }\r\n\r\n  dismissModal(avatar?: UserImageModel) {\r\n    this.modalController.dismiss(avatar);\r\n  }\r\n}\r\n","<ion-header>\r\n  <ion-toolbar color=\"primary\">\r\n    <ion-buttons slot=\"end\">\r\n      <ion-button (click)=\"dismissModal()\">\r\n        <ion-icon slot=\"icon-only\" name=\"close\"></ion-icon>\r\n      </ion-button>\r\n    </ion-buttons>\r\n    <ion-title>Select an Avatar</ion-title>\r\n  </ion-toolbar>\r\n</ion-header>\r\n\r\n<ion-content class=\"select-image-content\">\r\n  <ion-row class=\"images-wrapper\">\r\n    <ion-col size=\"4\" class=\"image-item\" *ngFor=\"let avatar of avatars\">\r\n      <app-image-shell [display]=\"'cover'\" class=\"user-image\" animation=\"spinner\" [src]=\"avatar.link\" [alt]=\"'avatar image'\" (click)=\"dismissModal(avatar)\">\r\n        <app-aspect-ratio [ratio]=\"{w: 1, h: 1}\">\r\n        </app-aspect-ratio>\r\n      </app-image-shell>\r\n    </ion-col>\r\n  </ion-row>\r\n</ion-content>\r\n","import { IonicModule } from '@ionic/angular';\r\nimport { NgModule } from '@angular/core';\r\nimport { CommonModule } from '@angular/common';\r\n\r\nimport { ComponentsModule } from '../../components/components.module';\r\nimport { FirebaseCreateUserModal } from './user/create/firebase-create-user.modal';\r\nimport { SelectUserImageModal } from './user/select-image/select-user-image.modal';\r\nimport { FormsModule, ReactiveFormsModule } from '@angular/forms';\r\n\r\n\r\n@NgModule({\r\n  imports: [\r\n    IonicModule,\r\n    CommonModule,\r\n    ComponentsModule,\r\n    FormsModule,\r\n    ReactiveFormsModule\r\n  ],\r\n  declarations: [\r\n    FirebaseCreateUserModal,\r\n    SelectUserImageModal\r\n  ],\r\n  exports: [\r\n    SelectUserImageModal,\r\n    FirebaseCreateUserModal\r\n  ]\r\n})\r\nexport class FirebaseCrudSharedModule {}\r\n","import { ShellModel } from '../../../shell/data-store';\r\n\r\nexport class FirebaseSkillModel extends ShellModel {\r\n  id: string;\r\n  name: string;\r\n\r\n  constructor() {\r\n    super();\r\n  }\r\n}\r\n\r\nexport class FirebaseUserModel extends ShellModel {\r\n  id: string;\r\n  avatar: string;\r\n  name: string;\r\n  lastname: string;\r\n  email: string;\r\n  phone: number;\r\n  age?: number;\r\n  birthdate: number; // timestamp\r\n  skills: Array<any> = [\r\n    '',\r\n    '',\r\n    ''\r\n  ];\r\n  languages: {\r\n    spanish: number,\r\n    english: number,\r\n    french: number\r\n  } = {\r\n    spanish: 0,\r\n    english: 0,\r\n    french: 0\r\n  };\r\n\r\n  constructor() {\r\n    super();\r\n  }\r\n}\r\nexport class FirebaseCombinedUserModel extends FirebaseUserModel {\r\n  skills: Array<FirebaseSkillModel> = [\r\n    new FirebaseSkillModel(),\r\n    new FirebaseSkillModel(),\r\n    new FirebaseSkillModel()\r\n  ];\r\n\r\n  constructor() {\r\n    super();\r\n  }\r\n}\r\n","import { ValidatorFn, FormArray } from '@angular/forms';\r\n\r\nexport class CheckboxCheckedValidator {\r\n\r\n  static minSelectedCheckboxes(min) {\r\n    const validator: ValidatorFn = (formArray: FormArray) => {\r\n      const totalSelected = formArray.controls\r\n        // get a list of checkbox values (boolean)\r\n        .map(control => control.value)\r\n        // total up the number of checked checkboxes\r\n        .reduce((prev, next) => next ? prev + next : prev, 0);\r\n\r\n      // if the total is not greater than the minimum, return the error message\r\n      return totalSelected >= min ? null : { required: true };\r\n    };\r\n\r\n    return validator;\r\n  }\r\n}\r\n"]}