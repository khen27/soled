{"version":3,"sources":["./src/app/firebase/crud/user/select-image/user-image.model.ts","./src/app/firebase/crud/listing/firebase-listing.model.ts","./src/app/firebase/crud/user/create/firebase-create-user.modal.ts","./src/app/firebase/crud/user/create/firebase-create-user.modal.html","./src/app/shell/data-store.ts","./src/app/firebase/crud/firebase-crud.service.ts","./src/app/firebase/crud/user/select-image/select-user-image.modal.ts","./src/app/firebase/crud/user/select-image/select-user-image.modal.html","./src/app/firebase/crud/firebase-crud-shared.module.ts","./src/app/firebase/crud/user/firebase-user.model.ts","./src/app/validators/checkbox-checked.validator.ts"],"names":[],"mappings":"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","file":"default~crud-listing-firebase-listing-module~crud-user-firebase-user-details-module-es2015.js","sourcesContent":["import { ShellModel } from '../../../../shell/data-store';\r\n\r\nexport class UserImageModel extends ShellModel {\r\n  link: string;\r\n\r\n  constructor() {\r\n    super();\r\n  }\r\n}\r\n","import { ShellModel } from '../../../shell/data-store';\r\n\r\nexport class FirebaseListingItemModel extends ShellModel {\r\n  image: string;\r\n  name: string;\r\n  birthdate: number; // timestamp\r\n  lastname: string;\r\n  age: number;\r\n  id: string;\r\n\r\n  constructor() {\r\n    super();\r\n  }\r\n}\r\n","import { Component, OnInit } from '@angular/core';\r\nimport { ModalController } from '@ionic/angular';\r\nimport { Validators, FormGroup, FormControl, FormArray } from '@angular/forms';\r\nimport * as dayjs from 'dayjs';\r\n\r\nimport { CheckboxCheckedValidator } from '../../../../validators/checkbox-checked.validator';\r\n\r\nimport { FirebaseUserModel } from '../firebase-user.model';\r\nimport { SelectUserImageModal } from '../select-image/select-user-image.modal';\r\nimport { FirebaseCrudService } from '../../firebase-crud.service';\r\n\r\n@Component({\r\n  selector: 'app-firebase-create-user',\r\n  templateUrl: './firebase-create-user.modal.html',\r\n  styleUrls: [\r\n    './styles/firebase-create-user.modal.scss',\r\n    './styles/firebase-create-user.shell.scss'\r\n  ],\r\n})\r\nexport class FirebaseCreateUserModal implements OnInit {\r\n  createUserForm: FormGroup;\r\n  userData: FirebaseUserModel = new FirebaseUserModel();\r\n  skills = [];\r\n\r\n  constructor(\r\n    private modalController: ModalController,\r\n    public firebaseCrudService: FirebaseCrudService\r\n  ) { }\r\n\r\n  ngOnInit() {\r\n    // default image\r\n    this.userData.avatar = 'https://s3-us-west-2.amazonaws.com/ionicthemes/otros/avatar-placeholder.png';\r\n\r\n    this.createUserForm = new FormGroup({\r\n      name: new FormControl('', Validators.required),\r\n      lastname: new FormControl('', Validators.required),\r\n      email: new FormControl('', Validators.compose([\r\n        Validators.required,\r\n        Validators.pattern('^[a-zA-Z0-9_.+-]+@[a-zA-Z0-9-]+.[a-zA-Z0-9-.]+$')\r\n      ])),\r\n      phone: new FormControl('', Validators.required),\r\n      birthdate: new FormControl(Validators.required),\r\n      skills: new FormArray([], CheckboxCheckedValidator.minSelectedCheckboxes(1)),\r\n      spanish: new FormControl(),\r\n      english: new FormControl(),\r\n      french: new FormControl()\r\n    });\r\n\r\n    this.firebaseCrudService.getSkills().subscribe(skills => {\r\n      this.skills = skills;\r\n      // create skill checkboxes\r\n      this.skills.map(() => {\r\n        (this.createUserForm.controls.skills as FormArray).push(new FormControl());\r\n      });\r\n    });\r\n  }\r\n\r\n  get skillsFormArray() { return <FormArray>this.createUserForm.get('skills'); }\r\n\r\n  changeLangValue(value): string {\r\n    switch (true) {\r\n      case (value <= 3 ):\r\n        return 'Novice';\r\n      case (value > 3 && value <= 6 ):\r\n        return 'Competent';\r\n      case (value > 6 ):\r\n        return 'Expert';\r\n    }\r\n  }\r\n\r\n  dismissModal() {\r\n   this.modalController.dismiss();\r\n  }\r\n\r\n  createUser() {\r\n    this.userData.name = this.createUserForm.value.name;\r\n    this.userData.lastname = this.createUserForm.value.lastname;\r\n    this.userData.birthdate = dayjs(this.createUserForm.value.birthdate).unix(); // save it in timestamp\r\n    this.userData.phone = this.createUserForm.value.phone;\r\n    this.userData.email = this.createUserForm.value.email;\r\n    this.userData.languages.spanish = this.createUserForm.value.spanish;\r\n    this.userData.languages.english = this.createUserForm.value.english;\r\n    this.userData.languages.french = this.createUserForm.value.french;\r\n\r\n    // get the ids of the selected skills\r\n    const selectedSkills = [];\r\n\r\n    this.createUserForm.value.skills\r\n    .map((value: any, index: number) => {\r\n      if (value) {\r\n        selectedSkills.push(this.skills[index].id);\r\n      }\r\n    });\r\n    this.userData.skills = selectedSkills;\r\n\r\n    this.firebaseCrudService.createUser(this.userData)\r\n    .then(() => {\r\n      this.dismissModal();\r\n    });\r\n  }\r\n\r\n  async changeUserImage() {\r\n    const modal = await this.modalController.create({\r\n      component: SelectUserImageModal,\r\n      swipeToClose: true,\r\n      presentingElement: await this.modalController.getTop()\r\n    });\r\n\r\n    modal.onDidDismiss().then(avatar => {\r\n      if (avatar.data != null) {\r\n        this.userData.avatar = avatar.data.link;\r\n      }\r\n    });\r\n    await modal.present();\r\n  }\r\n\r\n}\r\n","<!-- This is the proper way if you have submit button outside your ion-content form (typically in the ion-header or ion-footer) -->\r\n<!-- (ref: https://github.com/ionic-team/ionic/issues/16661) -->\r\n<form class=\"create-user-form ion-page\" [formGroup]=\"createUserForm\" (ngSubmit)=\"createUser()\">\r\n  <ion-header>\r\n    <ion-toolbar color=\"primary\">\r\n      <ion-buttons slot=\"end\">\r\n        <ion-button (click)=\"dismissModal()\">\r\n          <ion-icon slot=\"icon-only\" name=\"close\"></ion-icon>\r\n        </ion-button>\r\n      </ion-buttons>\r\n      <ion-title>New User</ion-title>\r\n    </ion-toolbar>\r\n  </ion-header>\r\n\r\n  <ion-content class=\"create-user-content\">\r\n    <ion-row class=\"select-user-image-row\">\r\n      <ion-col class=\"user-image-col\" size=\"5\">\r\n        <app-aspect-ratio [ratio]=\"{w: 1, h: 1}\">\r\n          <app-image-shell [display]=\"'cover'\" class=\"user-image\" animation=\"spinner\" [src]=\"userData.avatar\" [alt]=\"'user image'\"></app-image-shell>\r\n        </app-aspect-ratio>\r\n        <ion-button class=\"change-image-btn\" color=\"secondary\" (click)=\"changeUserImage()\">\r\n          <ion-icon class=\"btn-icon\" slot=\"icon-only\" name=\"camera\"></ion-icon>\r\n        </ion-button>\r\n      </ion-col>\r\n    </ion-row>\r\n\r\n    <section class=\"user-details-fields fields-section\">\r\n      <ion-list class=\"inputs-list\" lines=\"full\">\r\n        <ion-item class=\"input-item\">\r\n          <ion-label color=\"secondary\" position=\"floating\">Name</ion-label>\r\n          <ion-input type=\"text\" formControlName=\"name\" required></ion-input>\r\n        </ion-item>\r\n        <ion-item class=\"input-item\">\r\n          <ion-label color=\"secondary\" position=\"floating\">Last name</ion-label>\r\n          <ion-input type=\"text\" formControlName=\"lastname\" required></ion-input>\r\n        </ion-item>\r\n        <ion-item class=\"input-item\">\r\n          <ion-label color=\"secondary\" position=\"floating\">Date of Birth</ion-label>\r\n          <ion-datetime display-format=\"DD/MM/YYYY\" picker-format=\"DD MMMM YYYY\" formControlName=\"birthdate\" required></ion-datetime>\r\n        </ion-item>\r\n        <ion-item class=\"input-item\">\r\n          <ion-label color=\"secondary\" position=\"floating\">Phone number</ion-label>\r\n          <ion-input type=\"tel\" formControlName=\"phone\" required></ion-input>\r\n        </ion-item>\r\n        <ion-item class=\"input-item\">\r\n          <ion-label color=\"secondary\" position=\"floating\">Email</ion-label>\r\n          <ion-input type=\"email\" formControlName=\"email\" required></ion-input>\r\n        </ion-item>\r\n      </ion-list>\r\n    </section>\r\n\r\n    <section class=\"user-experience-fields fields-section\">\r\n      <h5 class=\"section-header\">Experience in</h5>\r\n      <ion-row class=\"checkbox-tags rounded-checkbox-tags\">\r\n        <ion-item formArrayName=\"skills\" lines=\"none\" class=\"checkbox-tag rounded-tag\" *ngFor=\"let skill of skillsFormArray.controls; let i = index;\">\r\n          <ion-label class=\"tag-label\">{{skills[i].name}}</ion-label>\r\n          <ion-checkbox [formControlName]=\"i\"></ion-checkbox>\r\n        </ion-item>\r\n      </ion-row>\r\n    </section>\r\n\r\n    <section class=\"user-languages-fields fields-section\">\r\n      <h5 class=\"section-header\">Languages</h5>\r\n      <ion-row class=\"range-item-row\">\r\n        <ion-col size=\"12\">\r\n          <div class=\"range-header\">\r\n            <span class=\"range-label\">English</span>\r\n            <span class=\"range-value\">{{ changeLangValue(createUserForm.controls.english.value) }}</span>\r\n          </div>\r\n        </ion-col>\r\n        <ion-col size=\"12\">\r\n          <ion-range class=\"range-control\" formControlName=\"english\" color=\"secondary\" min=\"1\" max=\"10\" step=\"1\"></ion-range>\r\n        </ion-col>\r\n      </ion-row>\r\n      <ion-row class=\"range-item-row\">\r\n        <ion-col size=\"12\">\r\n          <div class=\"range-header\">\r\n            <span class=\"range-label\">Spanish</span>\r\n            <span class=\"range-value\">{{ changeLangValue(createUserForm.controls.spanish.value) }}</span>\r\n          </div>\r\n        </ion-col>\r\n        <ion-col size=\"12\">\r\n          <ion-range class=\"range-control\" formControlName=\"spanish\" color=\"secondary\" min=\"1\" max=\"10\" step=\"1\"></ion-range>\r\n        </ion-col>\r\n      </ion-row>\r\n      <ion-row class=\"range-item-row\">\r\n        <ion-col size=\"12\">\r\n          <div class=\"range-header\">\r\n            <span class=\"range-label\">French</span>\r\n            <span class=\"range-value\">{{ changeLangValue(createUserForm.controls.french.value) }}</span>\r\n          </div>\r\n        </ion-col>\r\n        <ion-col size=\"12\">\r\n          <ion-range class=\"range-control\" formControlName=\"french\" color=\"secondary\" min=\"1\" max=\"10\" step=\"1\"></ion-range>\r\n        </ion-col>\r\n      </ion-row>\r\n    </section>\r\n  </ion-content>\r\n\r\n  <ion-footer>\r\n    <ion-row class=\"form-actions-wrapper\">\r\n      <ion-col>\r\n        <ion-button class=\"submit-btn\" expand=\"block\" color=\"secondary\" type=\"submit\" fill=\"solid\" [disabled]=\"!createUserForm.valid\">CREATE</ion-button>\r\n      </ion-col>\r\n    </ion-row>\r\n  </ion-footer>\r\n</form>\r\n","import { Observable, of, combineLatest, ReplaySubject } from 'rxjs';\r\nimport { delay, map, startWith } from 'rxjs/operators';\r\nimport { environment } from '../../environments/environment';\r\n\r\nexport class ShellModel {\r\n  isShell = false;\r\n}\r\n\r\nexport class DataStore<T> {\r\n  // We wait on purpose 2 secs on local environment when fetching from json to simulate the backend roundtrip.\r\n  // However, in production you should set this delay to 0 in the environment.prod file.\r\n  // tslint:disable-next-line:max-line-length\r\n  private networkDelay = (environment.appShellConfig && environment.appShellConfig.networkDelay) ? environment.appShellConfig.networkDelay : 0;\r\n\r\n  private timeline: ReplaySubject<T & ShellModel> = new ReplaySubject(1);\r\n\r\n  constructor(private shellModel: T) { }\r\n\r\n  // Static function with generics\r\n  // (ref: https://stackoverflow.com/a/24293088/1116959)\r\n  // Append a shell (T & ShellModel) to every value (T) emmited to the timeline\r\n  public static AppendShell<T>(dataObservable: Observable<T>, shellModel: T, networkDelay = 400): Observable<T & ShellModel> {\r\n    const delayObservable = of(true).pipe(\r\n      delay(networkDelay)\r\n    );\r\n\r\n    // Assign shell flag accordingly\r\n    // (ref: https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Object/assign)\r\n    return combineLatest([\r\n      delayObservable,\r\n      dataObservable\r\n    ]).pipe(\r\n      // Dismiss unnecessary delayValue\r\n      map(([delayValue, dataValue]: [boolean, T]): (T & ShellModel) => Object.assign(dataValue, {isShell: false})),\r\n      // Set the shell model as the initial value\r\n      startWith(Object.assign(shellModel, {isShell: true}))\r\n    );\r\n  }\r\n\r\n  load(dataSourceObservable: Observable<T>, networkDelay?: number): void {\r\n    // tslint:disable-next-line:no-shadowed-variable\r\n    const delay = (typeof networkDelay === 'number') ? networkDelay : this.networkDelay;\r\n\r\n    let processedDataSource: Observable<any>;\r\n\r\n    // If no network delay, then don't show shell\r\n    if (delay === 0) {\r\n      processedDataSource = dataSourceObservable;\r\n    } else {\r\n      processedDataSource = DataStore.AppendShell(dataSourceObservable, this.shellModel, delay);\r\n    }\r\n\r\n    processedDataSource\r\n    .subscribe((dataValue: T & ShellModel) => {\r\n      this.timeline.next(dataValue);\r\n    });\r\n  }\r\n\r\n  public get state(): Observable<T & ShellModel> {\r\n    return this.timeline.asObservable();\r\n  }\r\n}\r\n","import { Inject, Injectable, PLATFORM_ID } from '@angular/core';\r\nimport { AngularFirestore, DocumentReference } from '@angular/fire/firestore';\r\n\r\nimport { Observable, of, forkJoin, throwError, combineLatest } from 'rxjs';\r\nimport { map, concatMap, first, filter } from 'rxjs/operators';\r\nimport * as dayjs from 'dayjs';\r\nimport { DataStore, ShellModel } from '../../shell/data-store';\r\nimport { FirebaseListingItemModel } from './../crud/listing/firebase-listing.model';\r\nimport { FirebaseCombinedUserModel, FirebaseSkillModel, FirebaseUserModel } from './../crud/user/firebase-user.model';\r\nimport { UserImageModel } from './../crud/user/select-image/user-image.model';\r\nimport { TransferStateHelper } from '../../utils/transfer-state-helper';\r\nimport { isPlatformServer } from '@angular/common';\r\n\r\n@Injectable()\r\nexport class FirebaseCrudService {\r\n  // Listing Page\r\n  private listingDataStore: DataStore<Array<FirebaseListingItemModel>>;\r\n  // User Details Page\r\n  private combinedUserDataStore: DataStore<FirebaseCombinedUserModel>;\r\n  private relatedUsersDataStore: DataStore<Array<FirebaseListingItemModel>>;\r\n  // Select User Image Modal\r\n  private avatarsDataStore: DataStore<Array<UserImageModel>>;\r\n\r\n  constructor(\r\n    @Inject(PLATFORM_ID) private platformId: object,\r\n    private transferStateHelper: TransferStateHelper,\r\n    private afs: AngularFirestore\r\n  ) {}\r\n\r\n  /*\r\n    Firebase User Listing Page\r\n  */\r\n  public getListingDataSource(): Observable<Array<FirebaseListingItemModel>> {\r\n    const rawDataSource = this.afs.collection<FirebaseListingItemModel>('users').valueChanges({ idField: 'id' })\r\n     .pipe(\r\n       map(actions => actions.map(user => {\r\n          const age = this.calcUserAge(user.birthdate);\r\n          return { age, ...user } as FirebaseListingItemModel;\r\n        })\r\n      )\r\n    );\r\n\r\n    // This method tapps into the raw data source and stores the resolved data in the TransferState, then when\r\n    // transitioning from the server rendered view to the browser, checks if we already loaded the data in the server to prevent\r\n    // duplicate http requests.\r\n    const cachedDataSource = this.transferStateHelper.checkDataSourceState('firebase-listing-state', rawDataSource);\r\n\r\n    return cachedDataSource;\r\n  }\r\n\r\n  public getListingStore(dataSource: Observable<Array<FirebaseListingItemModel>>): DataStore<Array<FirebaseListingItemModel>> {\r\n    // Use cache if available\r\n    if (!this.listingDataStore) {\r\n      // Initialize the model specifying that it is a shell model\r\n      const shellModel: Array<FirebaseListingItemModel> = [\r\n        new FirebaseListingItemModel(),\r\n        new FirebaseListingItemModel(),\r\n        new FirebaseListingItemModel(),\r\n        new FirebaseListingItemModel(),\r\n        new FirebaseListingItemModel(),\r\n        new FirebaseListingItemModel()\r\n      ];\r\n      this.listingDataStore = new DataStore(shellModel);\r\n\r\n      // If running in the server, then don't add shell to the Data Store\r\n      // If we already loaded the Data Source in the server, then don't show a shell when transitioning back to the broswer from the server\r\n      if (isPlatformServer(this.platformId) || dataSource['ssr_state']) {\r\n        // Trigger loading mechanism with 0 delay (this will prevent the shell to be shown)\r\n        this.listingDataStore.load(dataSource, 0);\r\n      } else { // On browser transitions\r\n        // Trigger the loading mechanism (with shell)\r\n        this.listingDataStore.load(dataSource);\r\n      }\r\n    }\r\n\r\n    return this.listingDataStore;\r\n  }\r\n\r\n  // Filter users by age\r\n  public searchUsersByAge(lower: number, upper: number): Observable<Array<FirebaseListingItemModel>> {\r\n    // we save the dateOfBirth in our DB so we need to calc the min and max dates valid for this query\r\n    const minDate = (dayjs(Date.now()).subtract(upper, 'year')).unix();\r\n    const maxDate =  (dayjs(Date.now()).subtract(lower, 'year')).unix();\r\n\r\n    const listingCollection = this.afs.collection<FirebaseListingItemModel>('users', ref =>\r\n      ref.orderBy('birthdate').startAt(minDate).endAt(maxDate));\r\n\r\n    return listingCollection.valueChanges({ idField: 'id' }).pipe(\r\n      map(actions => actions.map(user => {\r\n         const age = this.calcUserAge(user.birthdate);\r\n         return { age, ...user } as FirebaseListingItemModel;\r\n       })\r\n     ));\r\n  }\r\n\r\n  /*\r\n    Firebase User Details Page\r\n  */\r\n  // Concat the userData with the details of the userSkills (from the skills collection)\r\n  public getCombinedUserDataSource(userId: string): Observable<FirebaseCombinedUserModel> {\r\n    const rawDataSource = this.getUser(userId)\r\n    .pipe(\r\n      // Transformation operator: Map each source value (user) to an Observable (combineDataSources | throwError) which\r\n      // is merged in the output Observable\r\n      concatMap(user => {\r\n        if (user && user.skills) {\r\n          // Map each skill id and get the skill data as an Observable\r\n          const userSkillsObservables: Array<Observable<FirebaseSkillModel>> = user.skills.map(skill => {\r\n            return this.getSkill(skill).pipe(first());\r\n          });\r\n\r\n          // Combination operator: Take the most recent value from both input sources (of(user) & forkJoin(userSkillsObservables)),\r\n          // and transform those emitted values into one value ([userDetails, userSkills])\r\n          return combineLatest([\r\n            of(user),\r\n            forkJoin(userSkillsObservables)\r\n          ]).pipe(\r\n            map(([userDetails, userSkills]: [FirebaseUserModel, Array<FirebaseSkillModel>]) => {\r\n              // Spread operator (see: https://dev.to/napoleon039/how-to-use-the-spread-and-rest-operator-4jbb)\r\n              return {\r\n                ...userDetails,\r\n                skills: userSkills\r\n              } as FirebaseCombinedUserModel;\r\n            })\r\n          );\r\n        } else {\r\n          // Throw error\r\n          return throwError('User does not have any skills.');\r\n        }\r\n      })\r\n    );\r\n\r\n    // This method tapps into the raw data source and stores the resolved data in the TransferState, then when\r\n    // transitioning from the server rendered view to the browser, checks if we already loaded the data in the server to prevent\r\n    // duplicate http requests.\r\n    const cachedDataSource = this.transferStateHelper.checkDataSourceState(`firebase-user-${userId}-state`, rawDataSource);\r\n\r\n    return cachedDataSource;\r\n  }\r\n\r\n  public getCombinedUserStore(dataSource: Observable<FirebaseCombinedUserModel>): DataStore<FirebaseCombinedUserModel> {\r\n    // Initialize the model specifying that it is a shell model\r\n    const shellModel: FirebaseCombinedUserModel = new FirebaseCombinedUserModel();\r\n    this.combinedUserDataStore = new DataStore(shellModel);\r\n\r\n    // If running in the server, then don't add shell to the Data Store\r\n    // If we already loaded the Data Source in the server, then don't show a shell when transitioning back to the broswer from the server\r\n    if (isPlatformServer(this.platformId) || dataSource['ssr_state']) {\r\n      // Trigger loading mechanism with 0 delay (this will prevent the shell to be shown)\r\n      this.combinedUserDataStore.load(dataSource, 0);\r\n    } else { // On browser transitions\r\n      // Trigger the loading mechanism (with shell)\r\n      this.combinedUserDataStore.load(dataSource);\r\n    }\r\n\r\n    return this.combinedUserDataStore;\r\n  }\r\n\r\n  // tslint:disable-next-line:max-line-length\r\n  public getRelatedUsersDataSource(combinedUserDataSource: Observable<FirebaseCombinedUserModel & ShellModel>, userId: string): Observable<Array<FirebaseListingItemModel>>  {\r\n    const rawDataSource = combinedUserDataSource\r\n    .pipe(\r\n      // Filter user values that are not shells. We need to add this filter if using the combinedUserDataStore timeline\r\n      filter(user => !user.isShell),\r\n      concatMap(user => {\r\n        if (user && user.skills) {\r\n          // Get all users with at least 1 skill in common\r\n          const relatedUsersObservable: Observable<Array<FirebaseListingItemModel>> =\r\n          this.getUsersWithSameSkill(user.id, user.skills);\r\n\r\n          return relatedUsersObservable;\r\n        } else {\r\n          // Throw error\r\n          return throwError('Could not get related user');\r\n        }\r\n      })\r\n    );\r\n\r\n    // This method tapps into the raw data source and stores the resolved data in the TransferState, then when\r\n    // transitioning from the server rendered view to the browser, checks if we already loaded the data in the server to prevent\r\n    // duplicate http requests.\r\n    const cachedDataSource = this.transferStateHelper.checkDataSourceState(`firebase-user-${userId}-related-users-state`, rawDataSource);\r\n\r\n    return cachedDataSource;\r\n  }\r\n\r\n  public getRelatedUsersStore(dataSource: Observable<Array<FirebaseListingItemModel>>): DataStore<Array<FirebaseListingItemModel>> {\r\n    // Initialize the model specifying that it is a shell model\r\n    const shellModel: Array<FirebaseListingItemModel> = [\r\n      new FirebaseListingItemModel(),\r\n      new FirebaseListingItemModel(),\r\n      new FirebaseListingItemModel()\r\n    ];\r\n    this.relatedUsersDataStore = new DataStore(shellModel);\r\n\r\n    // If running in the server, then don't add shell to the Data Store\r\n    // If we already loaded the Data Source in the server, then don't show a shell when transitioning back to the broswer from the server\r\n    if (isPlatformServer(this.platformId) || dataSource['ssr_state']) {\r\n      // Trigger loading mechanism with 0 delay (this will prevent the shell to be shown)\r\n      this.relatedUsersDataStore.load(dataSource, 0);\r\n    } else { // On browser transitions\r\n      // Trigger the loading mechanism (with shell)\r\n      this.relatedUsersDataStore.load(dataSource);\r\n    }\r\n\r\n    return this.relatedUsersDataStore;\r\n  }\r\n\r\n  /*\r\n    Firebase Create User Modal\r\n  */\r\n  public createUser(userData: FirebaseUserModel): Promise<DocumentReference>  {\r\n    return this.afs.collection('users').add({...userData});\r\n  }\r\n\r\n  /*\r\n    Firebase Update User Modal\r\n  */\r\n  public updateUser(userData: FirebaseUserModel): Promise<void> {\r\n    return this.afs.collection('users').doc(userData.id).set(userData);\r\n  }\r\n\r\n  public deleteUser(userKey: string): Promise<void> {\r\n    return this.afs.collection('users').doc(userKey).delete();\r\n  }\r\n\r\n  /*\r\n    Firebase Select User Image Modal\r\n  */\r\n  public getAvatarsDataSource(): Observable<Array<UserImageModel>> {\r\n    return this.afs.collection<UserImageModel>('avatars').valueChanges();\r\n  }\r\n\r\n  public getAvatarsStore(dataSource: Observable<Array<UserImageModel>>): DataStore<Array<UserImageModel>> {\r\n    // Use cache if available\r\n    if (!this.avatarsDataStore) {\r\n      // Initialize the model specifying that it is a shell model\r\n      const shellModel: Array<UserImageModel> = [\r\n        new UserImageModel(),\r\n        new UserImageModel(),\r\n        new UserImageModel(),\r\n        new UserImageModel(),\r\n        new UserImageModel()\r\n      ];\r\n\r\n      this.avatarsDataStore = new DataStore(shellModel);\r\n      // Trigger the loading mechanism (with shell) in the dataStore\r\n      this.avatarsDataStore.load(dataSource);\r\n    }\r\n    return this.avatarsDataStore;\r\n  }\r\n\r\n  /*\r\n    FireStore utility methods\r\n  */\r\n  // Get list of all available Skills (used in the create and update modals)\r\n  public getSkills(): Observable<Array<FirebaseSkillModel>> {\r\n    return this.afs.collection<FirebaseSkillModel>('skills').valueChanges({ idField: 'id' });\r\n  }\r\n\r\n  // Get data of a specific Skill\r\n  private getSkill(skillId: string): Observable<FirebaseSkillModel> {\r\n    return this.afs.doc<FirebaseSkillModel>('skills/' + skillId)\r\n    .snapshotChanges()\r\n    .pipe(\r\n      map(a => {\r\n        const data = a.payload.data();\r\n        const id = a.payload.id;\r\n        return { id, ...data } as FirebaseSkillModel;\r\n      })\r\n    );\r\n  }\r\n\r\n\r\n  // Get data of a specific User\r\n  private getUser(userId: string): Observable<FirebaseUserModel> {\r\n    return this.afs.doc<FirebaseUserModel>('users/' + userId)\r\n    .snapshotChanges()\r\n    .pipe(\r\n      map(a => {\r\n        const userData = a.payload.data();\r\n        const id = a.payload.id;\r\n        const age = userData ? this.calcUserAge(userData.birthdate) : 0;\r\n        return { id, age, ...userData } as FirebaseUserModel;\r\n      })\r\n    );\r\n  }\r\n\r\n  // Get all users who share at least 1 skill of the user's 'skills' list\r\n  private getUsersWithSameSkill(userId: string, skills: Array<FirebaseSkillModel>): Observable<Array<FirebaseListingItemModel>> {\r\n    // Get the users who have at least 1 skill in common\r\n    // Because firestore doesn't have a logical 'OR' operator we need to create multiple queries, one for each skill from the 'skills' list\r\n    const queries = skills.map(skill => {\r\n      return this.afs.collection('users', ref => ref\r\n      .where('skills', 'array-contains', skill.id))\r\n      .valueChanges({ idField: 'id' });\r\n    });\r\n\r\n    // Combine all these queries\r\n    return combineLatest(queries).pipe(\r\n      map((relatedUsers: FirebaseListingItemModel[][]) => {\r\n        // Flatten the array of arrays of FirebaseListingItemModel\r\n        const flattenedRelatedUsers = ([] as FirebaseListingItemModel[]).concat(...relatedUsers);\r\n\r\n        // Removes duplicates from the array of FirebaseListingItemModel objects.\r\n        // Also remove the original user (userId)\r\n        const filteredRelatedUsers = flattenedRelatedUsers\r\n        .reduce((accumulatedUsers, user) => {\r\n          if ((accumulatedUsers.findIndex(accumulatedUser => accumulatedUser.id === user.id) < 0) && (user.id !== userId)) {\r\n            return [...accumulatedUsers, user];\r\n          } else {\r\n            // If the user doesn't pass the test, then don't add it to the filtered users array\r\n            return accumulatedUsers;\r\n          }\r\n        }, ([] as FirebaseListingItemModel[]));\r\n\r\n        return filteredRelatedUsers;\r\n      })\r\n    );\r\n  }\r\n\r\n  private calcUserAge(dateOfBirth: number): number {\r\n    return dayjs(Date.now()).diff(dayjs.unix(dateOfBirth), 'year');\r\n  }\r\n}\r\n","import { Component, OnInit, HostBinding } from '@angular/core';\r\nimport { ModalController } from '@ionic/angular';\r\n\r\nimport { UserImageModel } from './user-image.model';\r\nimport { ShellModel } from '../../../../shell/data-store';\r\nimport { FirebaseCrudService } from '../../firebase-crud.service';\r\n\r\n@Component({\r\n  selector: 'app-select-user-image',\r\n  templateUrl: './select-user-image.modal.html',\r\n  styleUrls: [\r\n    './styles/select-user-image.modal.scss',\r\n    './styles/select-user-image.shell.scss'\r\n  ]\r\n})\r\nexport class SelectUserImageModal implements OnInit {\r\n  // Use Typescript intersection types to enable docorating the Array of firebase models with a shell model\r\n  // (ref: https://www.typescriptlang.org/docs/handbook/advanced-types.html#intersection-types)\r\n  avatars: Array<UserImageModel> & ShellModel;\r\n\r\n  @HostBinding('class.is-shell') get isShell() {\r\n    return (this.avatars && this.avatars.isShell) ? true : false;\r\n  }\r\n\r\n  constructor(\r\n    private modalController: ModalController,\r\n    public firebaseCrudService: FirebaseCrudService\r\n  ) { }\r\n\r\n  ngOnInit() {\r\n    const dataSource = this.firebaseCrudService.getAvatarsDataSource();\r\n    const dataStore = this.firebaseCrudService.getAvatarsStore(dataSource);\r\n\r\n    dataStore.state.subscribe(\r\n      (state) => {\r\n        this.avatars = state;\r\n      },\r\n      (error) => {}\r\n    );\r\n  }\r\n\r\n  dismissModal(avatar?: UserImageModel) {\r\n    this.modalController.dismiss(avatar);\r\n  }\r\n}\r\n","<ion-header>\r\n  <ion-toolbar color=\"primary\">\r\n    <ion-buttons slot=\"end\">\r\n      <ion-button (click)=\"dismissModal()\">\r\n        <ion-icon slot=\"icon-only\" name=\"close\"></ion-icon>\r\n      </ion-button>\r\n    </ion-buttons>\r\n    <ion-title>Select an Avatar</ion-title>\r\n  </ion-toolbar>\r\n</ion-header>\r\n\r\n<ion-content class=\"select-image-content\">\r\n  <ion-row class=\"images-wrapper\">\r\n    <ion-col size=\"4\" class=\"image-item\" *ngFor=\"let avatar of avatars\">\r\n      <app-image-shell [display]=\"'cover'\" class=\"user-image\" animation=\"spinner\" [src]=\"avatar.link\" [alt]=\"'avatar image'\" (click)=\"dismissModal(avatar)\">\r\n        <app-aspect-ratio [ratio]=\"{w: 1, h: 1}\">\r\n        </app-aspect-ratio>\r\n      </app-image-shell>\r\n    </ion-col>\r\n  </ion-row>\r\n</ion-content>\r\n","import { IonicModule } from '@ionic/angular';\r\nimport { NgModule } from '@angular/core';\r\nimport { CommonModule } from '@angular/common';\r\n\r\nimport { ComponentsModule } from '../../components/components.module';\r\nimport { FirebaseCreateUserModal } from './user/create/firebase-create-user.modal';\r\nimport { SelectUserImageModal } from './user/select-image/select-user-image.modal';\r\nimport { FormsModule, ReactiveFormsModule } from '@angular/forms';\r\n\r\n\r\n@NgModule({\r\n  imports: [\r\n    IonicModule,\r\n    CommonModule,\r\n    ComponentsModule,\r\n    FormsModule,\r\n    ReactiveFormsModule\r\n  ],\r\n  declarations: [\r\n    FirebaseCreateUserModal,\r\n    SelectUserImageModal\r\n  ],\r\n  exports: [\r\n    SelectUserImageModal,\r\n    FirebaseCreateUserModal\r\n  ]\r\n})\r\nexport class FirebaseCrudSharedModule {}\r\n","import { ShellModel } from '../../../shell/data-store';\r\n\r\nexport class FirebaseSkillModel extends ShellModel {\r\n  id: string;\r\n  name: string;\r\n\r\n  constructor() {\r\n    super();\r\n  }\r\n}\r\n\r\nexport class FirebaseUserModel extends ShellModel {\r\n  id: string;\r\n  avatar: string;\r\n  name: string;\r\n  lastname: string;\r\n  email: string;\r\n  phone: number;\r\n  age?: number;\r\n  birthdate: number; // timestamp\r\n  skills: Array<any> = [\r\n    '',\r\n    '',\r\n    ''\r\n  ];\r\n  languages: {\r\n    spanish: number,\r\n    english: number,\r\n    french: number\r\n  } = {\r\n    spanish: 0,\r\n    english: 0,\r\n    french: 0\r\n  };\r\n\r\n  constructor() {\r\n    super();\r\n  }\r\n}\r\nexport class FirebaseCombinedUserModel extends FirebaseUserModel {\r\n  skills: Array<FirebaseSkillModel> = [\r\n    new FirebaseSkillModel(),\r\n    new FirebaseSkillModel(),\r\n    new FirebaseSkillModel()\r\n  ];\r\n\r\n  constructor() {\r\n    super();\r\n  }\r\n}\r\n","import { ValidatorFn, FormArray } from '@angular/forms';\r\n\r\nexport class CheckboxCheckedValidator {\r\n\r\n  static minSelectedCheckboxes(min) {\r\n    const validator: ValidatorFn = (formArray: FormArray) => {\r\n      const totalSelected = formArray.controls\r\n        // get a list of checkbox values (boolean)\r\n        .map(control => control.value)\r\n        // total up the number of checked checkboxes\r\n        .reduce((prev, next) => next ? prev + next : prev, 0);\r\n\r\n      // if the total is not greater than the minimum, return the error message\r\n      return totalSelected >= min ? null : { required: true };\r\n    };\r\n\r\n    return validator;\r\n  }\r\n}\r\n"],"sourceRoot":"webpack:///"}