{"version":3,"sources":["./node_modules/@ionic/core/dist/esm/haptic-7b8ba70a.js","./src/app/showcase/showcase.service.ts","./node_modules/@ionic/core/dist/esm/spinner-configs-c78e170e.js","./node_modules/@angular/fire/__ivy_ngcc__/fesm2015/angular-fire-auth-guard.js","./node_modules/@ionic/core/dist/esm/framework-delegate-d1eb6504.js","./src/app/deals/listing/deals-listing.model.ts","./node_modules/@ionic/core/dist/esm/button-active-5da929d4.js","./src/app/deals/details/deals-details.model.ts","./node_modules/@ionic/core/dist/esm/theme-5641d27f.js","./src/app/validators/password.validator.ts","./src/app/showcase/showcase-shell.model.ts","./src/app/deals/deals.service.ts"],"names":[],"mappings":"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;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,+BAA+B,gBAAgB;AAC/C;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA,wCAAwC,sCAAsC;AAC9E,sCAAsC,4BAA4B;AAClE;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA,wCAAwC,sCAAsC;AAC9E,sCAAsC,4BAA4B;AAClE;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEyB;;;;;;;;;;;;;AC7GzB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAA6G;AACpE;AACG;AACkC;AACmE;;AAEjJ;AACA;AACA;AACA,cAAc,uHAAuH;AACrI;AACwC;AACE;AAC1C;AACA,WAAW,EAAE;AACb,YAAY;AACZ;AACA;AACA,WAAW,EAAE;AACb,iBAAiB,0DAAG;AACpB;AACA;AACA,eAAe,EAAE;AACjB,eAAe,EAAE;AACjB,eAAe,EAAE;AACjB,eAAe,EAAE;AACjB;AACA;AACA;AACA;AACA,mBAAmB,EAAE;AACrB,mBAAmB,EAAE;AACrB,oBAAoB;AACpB;AACA;AACA,uBAAuB,EAAE;AACzB,gDAAgD,EAAE;AAClD,wBAAwB;AACxB;AACA;AACA,uCAAuC,2DAAI,mCAAmC,0DAAG;AACjF,uBAAuB,EAAE;AACzB,wBAAwB;AACxB;AACA,0FAA0F,EAAE;AAC5F,SAAS;AACT,mBAAmB,EAAE;AACrB,+BAA+B,oEAAsB;AACrD,mBAAmB,EAAE;AACrB,uCAAuC,oFAA8B;AACrE,mBAAmB,EAAE;AACrB,qBAAqB,+CAAE,iBAAiB,gEAAS,KAAK,oEAAsB,wBAAwB,gEAAS;AAC7G,oBAAoB;AACpB;AACA;AACA,oBAAoB;AACp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","file":"common-es2015.js","sourcesContent":["const HapticEngine = {\r\n    getEngine() {\r\n        const win = window;\r\n        return (win.TapticEngine) || (win.Capacitor && win.Capacitor.isPluginAvailable('Haptics') && win.Capacitor.Plugins.Haptics);\r\n    },\r\n    available() {\r\n        return !!this.getEngine();\r\n    },\r\n    isCordova() {\r\n        return !!window.TapticEngine;\r\n    },\r\n    isCapacitor() {\r\n        const win = window;\r\n        return !!win.Capacitor;\r\n    },\r\n    impact(options) {\r\n        const engine = this.getEngine();\r\n        if (!engine) {\r\n            return;\r\n        }\r\n        const style = this.isCapacitor() ? options.style.toUpperCase() : options.style;\r\n        engine.impact({ style });\r\n    },\r\n    notification(options) {\r\n        const engine = this.getEngine();\r\n        if (!engine) {\r\n            return;\r\n        }\r\n        const style = this.isCapacitor() ? options.style.toUpperCase() : options.style;\r\n        engine.notification({ style });\r\n    },\r\n    selection() {\r\n        this.impact({ style: 'light' });\r\n    },\r\n    selectionStart() {\r\n        const engine = this.getEngine();\r\n        if (!engine) {\r\n            return;\r\n        }\r\n        if (this.isCapacitor()) {\r\n            engine.selectionStart();\r\n        }\r\n        else {\r\n            engine.gestureSelectionStart();\r\n        }\r\n    },\r\n    selectionChanged() {\r\n        const engine = this.getEngine();\r\n        if (!engine) {\r\n            return;\r\n        }\r\n        if (this.isCapacitor()) {\r\n            engine.selectionChanged();\r\n        }\r\n        else {\r\n            engine.gestureSelectionChanged();\r\n        }\r\n    },\r\n    selectionEnd() {\r\n        const engine = this.getEngine();\r\n        if (!engine) {\r\n            return;\r\n        }\r\n        if (this.isCapacitor()) {\r\n            engine.selectionEnd();\r\n        }\r\n        else {\r\n            engine.gestureSelectionEnd();\r\n        }\r\n    }\r\n};\r\n/**\r\n * Trigger a selection changed haptic event. Good for one-time events\r\n * (not for gestures)\r\n */\r\nconst hapticSelection = () => {\r\n    HapticEngine.selection();\r\n};\r\n/**\r\n * Tell the haptic engine that a gesture for a selection change is starting.\r\n */\r\nconst hapticSelectionStart = () => {\r\n    HapticEngine.selectionStart();\r\n};\r\n/**\r\n * Tell the haptic engine that a selection changed during a gesture.\r\n */\r\nconst hapticSelectionChanged = () => {\r\n    HapticEngine.selectionChanged();\r\n};\r\n/**\r\n * Tell the haptic engine we are done with a gesture. This needs to be\r\n * called lest resources are not properly recycled.\r\n */\r\nconst hapticSelectionEnd = () => {\r\n    HapticEngine.selectionEnd();\r\n};\r\n/**\r\n * Use this to indicate success/failure/warning to the user.\r\n * options should be of the type `{ style: 'light' }` (or `medium`/`heavy`)\r\n */\r\nconst hapticImpact = (options) => {\r\n    HapticEngine.impact(options);\r\n};\r\n\r\nexport { hapticSelectionStart as a, hapticSelectionChanged as b, hapticSelection as c, hapticImpact as d, hapticSelectionEnd as h };\r\n","import { Injectable } from '@angular/core';\r\nimport { HttpClient } from '@angular/common/http';\r\n\r\nimport { Observable, combineLatest, of, forkJoin, ReplaySubject, merge } from 'rxjs';\r\nimport { delay, finalize, tap, map, filter, concatMap } from 'rxjs/operators';\r\n// tslint:disable-next-line:max-line-length\r\nimport { ShowcaseShellModel, ShowcasePostModel, ShowcaseCommentModel, ShowcaseCombinedTaskUserModel, ShowcaseUser2Model, ShowcaseTaskModel, ShowcaseShellUserModel, ShowcaseCompanyModel } from './showcase-shell.model';\r\nimport { DataStore, ShellModel } from '../shell/data-store';\r\nimport { TravelListingModel } from '../travel/listing/travel-listing.model';\r\nimport { FashionListingModel } from '../fashion/listing/fashion-listing.model';\r\n\r\n@Injectable()\r\nexport class ShowcaseService {\r\n  private showcaseDataStore: DataStore<ShowcaseShellModel>;\r\n  private openDataStream: ReplaySubject<Array<ShowcaseShellUserModel>> = new ReplaySubject<Array<ShowcaseShellUserModel>>();\r\n\r\n  constructor(private http: HttpClient) { }\r\n\r\n  public getDataSourceWithDelay(): Observable<ShowcaseShellModel> {\r\n    return this.http.get<ShowcaseShellModel>('./assets/sample-data/showcase/shell.json').pipe(\r\n      tap(val => {\r\n        console.log('getData STARTED');\r\n        // tslint:disable-next-line:no-console\r\n        console.time('getData Roundtrip');\r\n      }),\r\n      delay(5000),\r\n      finalize(() => {\r\n        console.log('getData COMPLETED');\r\n        // tslint:disable-next-line:no-console\r\n        console.timeEnd('getData Roundtrip');\r\n      }));\r\n  }\r\n\r\n  public getSimpleDataSource(): Observable<ShowcaseShellModel> {\r\n    return this.http.get<ShowcaseShellModel>('./assets/sample-data/showcase/shell.json');\r\n  }\r\n\r\n  public getSimpleDataStore(dataSource: Observable<ShowcaseShellModel>): DataStore<ShowcaseShellModel> {\r\n    // Use cache if available\r\n    if (!this.showcaseDataStore) {\r\n      // Initialize the model specifying that it is a shell model\r\n      const shellModel: ShowcaseShellModel = new ShowcaseShellModel();\r\n      this.showcaseDataStore = new DataStore(shellModel);\r\n      // Trigger the loading mechanism (with shell) in the dataStore\r\n      this.showcaseDataStore.load(dataSource);\r\n    }\r\n    return this.showcaseDataStore;\r\n  }\r\n\r\n  public getListDataSource(): Observable<any> {\r\n    return this.http.get('https://reqres.in/api/users').pipe(map(result => result['data']));\r\n  }\r\n\r\n  public getPaginationDataSource(page: number): Observable<any> {\r\n    return this.http.get('https://reqres.in/api/users?page=' + page).pipe(\r\n      map(result => result['data']),\r\n      filter(results => results.length > 0)\r\n    );\r\n  }\r\n\r\n  public getMultipleDataSourceA(): Observable<TravelListingModel> {\r\n    return this.http.get<TravelListingModel>('./assets/sample-data/travel/listing.json');\r\n  }\r\n\r\n  public getMultipleDataSourceB(): Observable<FashionListingModel> {\r\n      return this.http.get<FashionListingModel>('./assets/sample-data/fashion/listing.json');\r\n  }\r\n\r\n  public getDependantDataSourcePost(): Observable<ShowcasePostModel> {\r\n    return this.http.get<any>('https://jsonplaceholder.typicode.com/posts/1');\r\n  }\r\n\r\n  // tslint:disable-next-line:max-line-length\r\n  public getDependantDataSourcePostComments(dependantDataSource: Observable<ShowcasePostModel & ShellModel>): Observable<Array<ShowcaseCommentModel>> {\r\n    return dependantDataSource.pipe(\r\n      // Filter user values that are not shells. We need to add this filter if using the combinedUserDataStore timeline\r\n      filter(post => !post.isShell),\r\n      concatMap(post => {\r\n        return this.http.get<any>('https://jsonplaceholder.typicode.com/comments?postId=' + post.id);\r\n      })\r\n    );\r\n  }\r\n\r\n  getUser(userId: number): Observable<ShowcaseUser2Model> {\r\n    return this.http.get<ShowcaseUser2Model>('https://jsonplaceholder.typicode.com/users/' + userId);\r\n  }\r\n\r\n  // get the company details, a subset of the user data\r\n  getUserSubsetData(userId: number): Observable<ShowcaseCompanyModel> {\r\n    const dataObservable = this.http.get<ShowcaseUser2Model>('https://jsonplaceholder.typicode.com/users/' + userId);\r\n\r\n    return dataObservable.pipe(\r\n      map((jsonResponse) => {\r\n        const filteredData: ShowcaseCompanyModel = {\r\n          ...jsonResponse.company\r\n        };\r\n        return filteredData;\r\n      })\r\n    );\r\n  }\r\n\r\n  getTasks(): Observable<Array<ShowcaseTaskModel>> {\r\n    return this.http.get<Array<ShowcaseTaskModel>>('https://jsonplaceholder.typicode.com/todos');\r\n  }\r\n\r\n  // Concat the task with the details of the user\r\n  public getCombinedTasksUserDataSource(): Observable<Array<ShowcaseCombinedTaskUserModel>> {\r\n    return this.getTasks().pipe(\r\n      concatMap(tasks => {\r\n        const completeTaskData = tasks.map(task => {\r\n          // for each task retrun a new observable with the ShowcaseCombinedTaskUserModel\r\n          const taskUser: Observable<ShowcaseUser2Model> = this.getUser(task.userId);\r\n\r\n          return combineLatest([\r\n            of(task),\r\n            taskUser\r\n          ]).pipe(\r\n            map(([taskData, user]: [ShowcaseTaskModel, ShowcaseUser2Model]) => {\r\n              return {\r\n                ...taskData,\r\n                user: user\r\n              } as ShowcaseCombinedTaskUserModel;\r\n            })\r\n          );\r\n        });\r\n        return forkJoin(completeTaskData);\r\n      })\r\n    );\r\n  }\r\n\r\n  public getOpenDataStream(): Observable<Array<ShowcaseShellUserModel>> {\r\n    const firstLoadData = this.getPaginationDataSource(1);\r\n\r\n    return merge(\r\n      this.openDataStream.asObservable(),\r\n      firstLoadData\r\n    );\r\n  }\r\n\r\n  public pushValuesToOpenStream(): void {\r\n    const stackedValues = this.getStackedValues();\r\n\r\n    this.openDataStream.next(stackedValues);\r\n  }\r\n\r\n  public getStackedValuesDataSource(): Observable<Array<ShowcaseShellUserModel>> {\r\n    const stackedValues = this.getStackedValues();\r\n\r\n    return of(stackedValues).pipe(delay(3000));\r\n  }\r\n\r\n  public getStackedValues(): Array<ShowcaseShellUserModel> {\r\n    const newUser = {\r\n      first_name: 'Agustin',\r\n      last_name: 'Nitsuga',\r\n      avatar: './assets/sample-images/user/person_1.jpg'\r\n    } as ShowcaseShellUserModel;\r\n\r\n    // Get a random integer between 1 (and only 1) and 'max'\r\n    const getRand: (max: number, min?: number) => number = (max, min = 1) => {\r\n      return Math.floor(Math.random() * max) + min;\r\n    };\r\n\r\n    // Randomly send one, two or three users\r\n    return Array(getRand(3)).fill(newUser);\r\n  }\r\n}\r\n","const spinners = {\r\n    'bubbles': {\r\n        dur: 1000,\r\n        circles: 9,\r\n        fn: (dur, index, total) => {\r\n            const animationDelay = `${(dur * index / total) - dur}ms`;\r\n            const angle = 2 * Math.PI * index / total;\r\n            return {\r\n                r: 5,\r\n                style: {\r\n                    'top': `${9 * Math.sin(angle)}px`,\r\n                    'left': `${9 * Math.cos(angle)}px`,\r\n                    'animation-delay': animationDelay,\r\n                }\r\n            };\r\n        }\r\n    },\r\n    'circles': {\r\n        dur: 1000,\r\n        circles: 8,\r\n        fn: (dur, index, total) => {\r\n            const step = index / total;\r\n            const animationDelay = `${(dur * step) - dur}ms`;\r\n            const angle = 2 * Math.PI * step;\r\n            return {\r\n                r: 5,\r\n                style: {\r\n                    'top': `${9 * Math.sin(angle)}px`,\r\n                    'left': `${9 * Math.cos(angle)}px`,\r\n                    'animation-delay': animationDelay,\r\n                }\r\n            };\r\n        }\r\n    },\r\n    'circular': {\r\n        dur: 1400,\r\n        elmDuration: true,\r\n        circles: 1,\r\n        fn: () => {\r\n            return {\r\n                r: 20,\r\n                cx: 48,\r\n                cy: 48,\r\n                fill: 'none',\r\n                viewBox: '24 24 48 48',\r\n                transform: 'translate(0,0)',\r\n                style: {}\r\n            };\r\n        }\r\n    },\r\n    'crescent': {\r\n        dur: 750,\r\n        circles: 1,\r\n        fn: () => {\r\n            return {\r\n                r: 26,\r\n                style: {}\r\n            };\r\n        }\r\n    },\r\n    'dots': {\r\n        dur: 750,\r\n        circles: 3,\r\n        fn: (_, index) => {\r\n            const animationDelay = -(110 * index) + 'ms';\r\n            return {\r\n                r: 6,\r\n                style: {\r\n                    'left': `${9 - (9 * index)}px`,\r\n                    'animation-delay': animationDelay,\r\n                }\r\n            };\r\n        }\r\n    },\r\n    'lines': {\r\n        dur: 1000,\r\n        lines: 12,\r\n        fn: (dur, index, total) => {\r\n            const transform = `rotate(${30 * index + (index < 6 ? 180 : -180)}deg)`;\r\n            const animationDelay = `${(dur * index / total) - dur}ms`;\r\n            return {\r\n                y1: 17,\r\n                y2: 29,\r\n                style: {\r\n                    'transform': transform,\r\n                    'animation-delay': animationDelay,\r\n                }\r\n            };\r\n        }\r\n    },\r\n    'lines-small': {\r\n        dur: 1000,\r\n        lines: 12,\r\n        fn: (dur, index, total) => {\r\n            const transform = `rotate(${30 * index + (index < 6 ? 180 : -180)}deg)`;\r\n            const animationDelay = `${(dur * index / total) - dur}ms`;\r\n            return {\r\n                y1: 12,\r\n                y2: 20,\r\n                style: {\r\n                    'transform': transform,\r\n                    'animation-delay': animationDelay,\r\n                }\r\n            };\r\n        }\r\n    }\r\n};\r\nconst SPINNERS = spinners;\r\n\r\nexport { SPINNERS as S };\r\n","import { Injectable, Inject, Optional, NgZone, ɵɵdefineInjectable, ɵɵinject, NgModule } from '@angular/core';\r\nimport { Router } from '@angular/router';\r\nimport { of, Observable, pipe } from 'rxjs';\r\nimport { map, take, observeOn, switchMap, shareReplay } from 'rxjs/operators';\r\nimport { ɵAngularFireSchedulers, ɵkeepUnstableUntilFirstFactory, ɵfirebaseAppFactory, FIREBASE_OPTIONS, FIREBASE_APP_NAME } from '@angular/fire';\r\n\r\n/**\r\n * @fileoverview added by tsickle\r\n * Generated from: auth-guard.ts\r\n * @suppress {checkTypes,constantProperty,extraRequire,missingOverride,missingRequire,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\r\n */\r\nimport * as ɵngcc0 from '@angular/core';\r\nimport * as ɵngcc1 from '@angular/router';\r\nconst ɵ0 = /**\r\n * @param {?} user\r\n * @return {?}\r\n */\r\nuser => !!user;\r\n/** @type {?} */\r\nconst loggedIn = map((ɵ0));\r\nclass AngularFireAuthGuard {\r\n    /**\r\n     * @param {?} options\r\n     * @param {?} nameOrConfig\r\n     * @param {?} zone\r\n     * @param {?} router\r\n     */\r\n    constructor(options, nameOrConfig, zone, router) {\r\n        this.router = router;\r\n        this.canActivate = (/**\r\n         * @param {?} next\r\n         * @param {?} state\r\n         * @return {?}\r\n         */\r\n        (next, state) => {\r\n            /** @type {?} */\r\n            const authPipeFactory = (/** @type {?} */ (next.data.authGuardPipe)) || ((/**\r\n             * @return {?}\r\n             */\r\n            () => loggedIn));\r\n            return this.authState.pipe(take(1), authPipeFactory(next, state), map((/**\r\n             * @param {?} can\r\n             * @return {?}\r\n             */\r\n            can => typeof can === 'boolean' ? can : this.router.createUrlTree((/** @type {?} */ (can))))));\r\n        });\r\n        /** @type {?} */\r\n        const schedulers = new ɵAngularFireSchedulers(zone);\r\n        /** @type {?} */\r\n        const keepUnstableUntilFirst = ɵkeepUnstableUntilFirstFactory(schedulers);\r\n        /** @type {?} */\r\n        const auth = of(undefined).pipe(observeOn(new ɵAngularFireSchedulers(zone).outsideAngular), switchMap((/**\r\n         * @return {?}\r\n         */\r\n        () => zone.runOutsideAngular((/**\r\n         * @return {?}\r\n         */\r\n        () => import('firebase/auth'))))), map((/**\r\n         * @return {?}\r\n         */\r\n        () => ɵfirebaseAppFactory(options, zone, nameOrConfig))), map((/**\r\n         * @param {?} app\r\n         * @return {?}\r\n         */\r\n        app => zone.runOutsideAngular((/**\r\n         * @return {?}\r\n         */\r\n        () => app.auth())))), shareReplay({ bufferSize: 1, refCount: false }));\r\n        this.authState = auth.pipe(switchMap((/**\r\n         * @param {?} auth\r\n         * @return {?}\r\n         */\r\n        auth => new Observable(auth.onAuthStateChanged.bind(auth)))), keepUnstableUntilFirst);\r\n    }\r\n}\r\nAngularFireAuthGuard.ɵfac = function AngularFireAuthGuard_Factory(t) { return new (t || AngularFireAuthGuard)(ɵngcc0.ɵɵinject(FIREBASE_OPTIONS), ɵngcc0.ɵɵinject(FIREBASE_APP_NAME, 8), ɵngcc0.ɵɵinject(ɵngcc0.NgZone), ɵngcc0.ɵɵinject(ɵngcc1.Router)); };\r\n/** @nocollapse */\r\nAngularFireAuthGuard.ctorParameters = () => [\r\n    { type: undefined, decorators: [{ type: Inject, args: [FIREBASE_OPTIONS,] }] },\r\n    { type: undefined, decorators: [{ type: Optional }, { type: Inject, args: [FIREBASE_APP_NAME,] }] },\r\n    { type: NgZone },\r\n    { type: Router }\r\n];\r\n/** @nocollapse */ AngularFireAuthGuard.ɵprov = ɵɵdefineInjectable({ factory: function AngularFireAuthGuard_Factory() { return new AngularFireAuthGuard(ɵɵinject(FIREBASE_OPTIONS), ɵɵinject(FIREBASE_APP_NAME, 8), ɵɵinject(NgZone), ɵɵinject(Router)); }, token: AngularFireAuthGuard, providedIn: \"any\" });\r\n/*@__PURE__*/ (function () { ɵngcc0.ɵsetClassMetadata(AngularFireAuthGuard, [{\r\n        type: Injectable,\r\n        args: [{\r\n                providedIn: 'any'\r\n            }]\r\n    }], function () { return [{ type: undefined, decorators: [{\r\n                type: Inject,\r\n                args: [FIREBASE_OPTIONS]\r\n            }] }, { type: undefined, decorators: [{\r\n                type: Optional\r\n            }, {\r\n                type: Inject,\r\n                args: [FIREBASE_APP_NAME]\r\n            }] }, { type: ɵngcc0.NgZone }, { type: ɵngcc1.Router }]; }, null); })();\r\nif (false) {\r\n    /** @type {?} */\r\n    AngularFireAuthGuard.prototype.authState;\r\n    /** @type {?} */\r\n    AngularFireAuthGuard.prototype.canActivate;\r\n    /**\r\n     * @type {?}\r\n     * @private\r\n     */\r\n    AngularFireAuthGuard.prototype.router;\r\n}\r\n/** @type {?} */\r\nconst canActivate = (/**\r\n * @param {?} pipe\r\n * @return {?}\r\n */\r\n(pipe) => ({\r\n    canActivate: [AngularFireAuthGuard], data: { authGuardPipe: pipe }\r\n}));\r\nconst ɵ1 = /**\r\n * @param {?} user\r\n * @return {?}\r\n */\r\nuser => !!user && !user.isAnonymous;\r\n/** @type {?} */\r\nconst isNotAnonymous = map((ɵ1));\r\nconst ɵ2 = /**\r\n * @param {?} user\r\n * @return {?}\r\n */\r\n(user) => user ? user.getIdTokenResult() : of(null);\r\n/** @type {?} */\r\nconst idTokenResult = switchMap((ɵ2));\r\nconst ɵ3 = /**\r\n * @param {?} user\r\n * @return {?}\r\n */\r\nuser => !!user && user.emailVerified;\r\n/** @type {?} */\r\nconst emailVerified = map((ɵ3));\r\nconst ɵ4 = /**\r\n * @param {?} idTokenResult\r\n * @return {?}\r\n */\r\nidTokenResult => idTokenResult ? idTokenResult.claims : [];\r\n/** @type {?} */\r\nconst customClaims = pipe(idTokenResult, map((ɵ4)));\r\n/** @type {?} */\r\nconst hasCustomClaim = (/**\r\n * @param {?} claim\r\n * @return {?}\r\n */\r\n(claim) => pipe(customClaims, map((/**\r\n * @param {?} claims\r\n * @return {?}\r\n */\r\nclaims => claims.hasOwnProperty(claim)))));\r\n/** @type {?} */\r\nconst redirectUnauthorizedTo = (/**\r\n * @param {?} redirect\r\n * @return {?}\r\n */\r\n(redirect) => pipe(loggedIn, map((/**\r\n * @param {?} loggedIn\r\n * @return {?}\r\n */\r\nloggedIn => loggedIn || redirect))));\r\n/** @type {?} */\r\nconst redirectLoggedInTo = (/**\r\n * @param {?} redirect\r\n * @return {?}\r\n */\r\n(redirect) => pipe(loggedIn, map((/**\r\n * @param {?} loggedIn\r\n * @return {?}\r\n */\r\nloggedIn => loggedIn && redirect || true))));\r\n\r\n/**\r\n * @fileoverview added by tsickle\r\n * Generated from: auth-guard.module.ts\r\n * @suppress {checkTypes,constantProperty,extraRequire,missingOverride,missingRequire,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\r\n */\r\nclass AngularFireAuthGuardModule {\r\n}\r\nAngularFireAuthGuardModule.ɵmod = ɵngcc0.ɵɵdefineNgModule({ type: AngularFireAuthGuardModule });\r\nAngularFireAuthGuardModule.ɵinj = ɵngcc0.ɵɵdefineInjector({ factory: function AngularFireAuthGuardModule_Factory(t) { return new (t || AngularFireAuthGuardModule)(); }, providers: [AngularFireAuthGuard] });\r\n/*@__PURE__*/ (function () { ɵngcc0.ɵsetClassMetadata(AngularFireAuthGuardModule, [{\r\n        type: NgModule,\r\n        args: [{\r\n                providers: [AngularFireAuthGuard]\r\n            }]\r\n    }], null, null); })();\r\n\r\n/**\r\n * @fileoverview added by tsickle\r\n * Generated from: public_api.ts\r\n * @suppress {checkTypes,constantProperty,extraRequire,missingOverride,missingRequire,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\r\n */\r\n\r\n/**\r\n * @fileoverview added by tsickle\r\n * Generated from: angular-fire-auth-guard.ts\r\n * @suppress {checkTypes,constantProperty,extraRequire,missingOverride,missingRequire,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\r\n */\r\n\r\nexport { AngularFireAuthGuard, AngularFireAuthGuardModule, canActivate, customClaims, emailVerified, hasCustomClaim, idTokenResult, isNotAnonymous, loggedIn, redirectLoggedInTo, redirectUnauthorizedTo };\r\n\r\n//# sourceMappingURL=angular-fire-auth-guard.js.map","const attachComponent = async (delegate, container, component, cssClasses, componentProps) => {\r\n    if (delegate) {\r\n        return delegate.attachViewToDom(container, component, componentProps, cssClasses);\r\n    }\r\n    if (typeof component !== 'string' && !(component instanceof HTMLElement)) {\r\n        throw new Error('framework delegate is missing');\r\n    }\r\n    const el = (typeof component === 'string')\r\n        ? container.ownerDocument && container.ownerDocument.createElement(component)\r\n        : component;\r\n    if (cssClasses) {\r\n        cssClasses.forEach(c => el.classList.add(c));\r\n    }\r\n    if (componentProps) {\r\n        Object.assign(el, componentProps);\r\n    }\r\n    container.appendChild(el);\r\n    if (el.componentOnReady) {\r\n        await el.componentOnReady();\r\n    }\r\n    return el;\r\n};\r\nconst detachComponent = (delegate, element) => {\r\n    if (element) {\r\n        if (delegate) {\r\n            const container = element.parentElement;\r\n            return delegate.removeViewFromDom(container, element);\r\n        }\r\n        element.remove();\r\n    }\r\n    return Promise.resolve();\r\n};\r\n\r\nexport { attachComponent as a, detachComponent as d };\r\n","import * as dayjs from 'dayjs';\r\n\r\nimport { ShellModel } from '../../shell/data-store';\r\n\r\nexport class DealsItemModel {\r\n  slug: string;\r\n  logo: string;\r\n  name: string;\r\n  code: string;\r\n  description: string;\r\n  // Default mock value\r\n  // expirationDate = '12/01/2018';\r\n  expirationDate: string = dayjs().add(5, 'day').format('MM/DD/YYYY HH:mm:ss') as string;\r\n}\r\n\r\nexport class DealsListingModel extends ShellModel {\r\n  items: Array<DealsItemModel> = [\r\n    new DealsItemModel(),\r\n    new DealsItemModel(),\r\n    new DealsItemModel(),\r\n    new DealsItemModel()\r\n  ];\r\n\r\n  constructor() {\r\n    super();\r\n  }\r\n}\r\n","import { c as writeTask } from './index-92848855.js';\r\nimport { createGesture } from './index-eea61379.js';\r\nimport { h as hapticSelectionEnd, a as hapticSelectionStart, b as hapticSelectionChanged } from './haptic-7b8ba70a.js';\r\n\r\nconst createButtonActiveGesture = (el, isButton) => {\r\n    let currentTouchedButton;\r\n    let initialTouchedButton;\r\n    const activateButtonAtPoint = (x, y, hapticFeedbackFn) => {\r\n        if (typeof document === 'undefined') {\r\n            return;\r\n        }\r\n        const target = document.elementFromPoint(x, y);\r\n        if (!target || !isButton(target)) {\r\n            clearActiveButton();\r\n            return;\r\n        }\r\n        if (target !== currentTouchedButton) {\r\n            clearActiveButton();\r\n            setActiveButton(target, hapticFeedbackFn);\r\n        }\r\n    };\r\n    const setActiveButton = (button, hapticFeedbackFn) => {\r\n        currentTouchedButton = button;\r\n        if (!initialTouchedButton) {\r\n            initialTouchedButton = currentTouchedButton;\r\n        }\r\n        const buttonToModify = currentTouchedButton;\r\n        writeTask(() => buttonToModify.classList.add('ion-activated'));\r\n        hapticFeedbackFn();\r\n    };\r\n    const clearActiveButton = (dispatchClick = false) => {\r\n        if (!currentTouchedButton) {\r\n            return;\r\n        }\r\n        const buttonToModify = currentTouchedButton;\r\n        writeTask(() => buttonToModify.classList.remove('ion-activated'));\r\n        /**\r\n         * Clicking on one button, but releasing on another button\r\n         * does not dispatch a click event in browsers, so we\r\n         * need to do it manually here. Some browsers will\r\n         * dispatch a click if clicking on one button, dragging over\r\n         * another button, and releasing on the original button. In that\r\n         * case, we need to make sure we do not cause a double click there.\r\n         */\r\n        if (dispatchClick && initialTouchedButton !== currentTouchedButton) {\r\n            currentTouchedButton.click();\r\n        }\r\n        currentTouchedButton = undefined;\r\n    };\r\n    return createGesture({\r\n        el,\r\n        gestureName: 'buttonActiveDrag',\r\n        threshold: 0,\r\n        onStart: ev => activateButtonAtPoint(ev.currentX, ev.currentY, hapticSelectionStart),\r\n        onMove: ev => activateButtonAtPoint(ev.currentX, ev.currentY, hapticSelectionChanged),\r\n        onEnd: () => {\r\n            clearActiveButton(true);\r\n            hapticSelectionEnd();\r\n            initialTouchedButton = undefined;\r\n        }\r\n    });\r\n};\r\n\r\nexport { createButtonActiveGesture as c };\r\n","import * as dayjs from 'dayjs';\r\n\r\nimport { ShellModel } from '../../shell/data-store';\r\n\r\nexport class DealsDetailsModel extends ShellModel {\r\n  showcaseImages: Array<string> = [\r\n    '',\r\n    '',\r\n    ''\r\n  ];\r\n  previewImage: string;\r\n  logo: string;\r\n  name: string;\r\n  code: string;\r\n  description: string;\r\n  // Default mock value\r\n  // expirationDate = '03/03/2019';\r\n  expirationDate: string = dayjs().add(5, 'day').format('MM/DD/YYYY HH:mm:ss') as string;\r\n  relatedDeals: Array<{logo: string, name: string, description: string}> = [\r\n    {\r\n      logo: '',\r\n      name: '',\r\n      description: ''\r\n    },\r\n    {\r\n      logo: '',\r\n      name: '',\r\n      description: ''\r\n    },\r\n    {\r\n      logo: '',\r\n      name: '',\r\n      description: ''\r\n    }\r\n  ];\r\n\r\n  constructor() {\r\n    super();\r\n  }\r\n}\r\n","const hostContext = (selector, el) => {\r\n    return el.closest(selector) !== null;\r\n};\r\n/**\r\n * Create the mode and color classes for the component based on the classes passed in\r\n */\r\nconst createColorClasses = (color, cssClassMap) => {\r\n    return (typeof color === 'string' && color.length > 0) ? Object.assign({ 'ion-color': true, [`ion-color-${color}`]: true }, cssClassMap) : cssClassMap;\r\n};\r\nconst getClassList = (classes) => {\r\n    if (classes !== undefined) {\r\n        const array = Array.isArray(classes) ? classes : classes.split(' ');\r\n        return array\r\n            .filter(c => c != null)\r\n            .map(c => c.trim())\r\n            .filter(c => c !== '');\r\n    }\r\n    return [];\r\n};\r\nconst getClassMap = (classes) => {\r\n    const map = {};\r\n    getClassList(classes).forEach(c => map[c] = true);\r\n    return map;\r\n};\r\nconst SCHEME = /^[a-z][a-z0-9+\\-.]*:/;\r\nconst openURL = async (url, ev, direction, animation) => {\r\n    if (url != null && url[0] !== '#' && !SCHEME.test(url)) {\r\n        const router = document.querySelector('ion-router');\r\n        if (router) {\r\n            if (ev != null) {\r\n                ev.preventDefault();\r\n            }\r\n            return router.push(url, direction, animation);\r\n        }\r\n    }\r\n    return false;\r\n};\r\n\r\nexport { createColorClasses as c, getClassMap as g, hostContext as h, openURL as o };\r\n","import { FormControl, FormGroup } from '@angular/forms';\r\n\r\nexport class PasswordValidator {\r\n\r\n  // If our validation fails, we return an object with a key for the error name and a value of true.\r\n  // Otherwise, if the validation passes, we simply return null because there is no error.\r\n\r\n  static areNotEqual(formGroup: FormGroup) {\r\n    let firstControlValue: any;\r\n    let valid = true;\r\n\r\n    for (const key in formGroup.controls) {\r\n      if (formGroup.controls.hasOwnProperty(key)) {\r\n        const control: FormControl = <FormControl>formGroup.controls[key];\r\n\r\n        if (firstControlValue === undefined) {\r\n          firstControlValue = control.value;\r\n        } else {\r\n          // check if the value of the first control is equal to the value of the second control\r\n          if (firstControlValue !== control.value) {\r\n            valid = false;\r\n            break;\r\n          }\r\n        }\r\n      }\r\n    }\r\n\r\n    if (valid) {\r\n      return null;\r\n    }\r\n\r\n    return {\r\n      areNotEqual: true\r\n    };\r\n  }\r\n}\r\n","import { ShellModel } from '../shell/data-store';\r\n\r\nexport class ShowcaseShellModel extends ShellModel {\r\n  cover: string;\r\n  image: string;\r\n  title: string;\r\n  description: string;\r\n\r\n  constructor() {\r\n    super();\r\n  }\r\n}\r\n\r\nexport class ShowcaseShellUserModel extends ShellModel {\r\n  email: string;\r\n  first_name: string;\r\n  last_name: string;\r\n  avatar: string;\r\n\r\n  constructor() {\r\n    super();\r\n  }\r\n}\r\n\r\nexport class ShowcaseCommentModel extends ShellModel {\r\n  postId: number;\r\n  name: string;\r\n  email: string;\r\n  body: string;\r\n\r\n  constructor() {\r\n    super();\r\n  }\r\n}\r\n\r\nexport class ShowcasePostModel extends ShellModel {\r\n  id: number;\r\n  title: string;\r\n  body: string;\r\n\r\n  constructor() {\r\n    super();\r\n  }\r\n}\r\n\r\nexport class ShowcaseTaskModel extends ShellModel {\r\n  id: number;\r\n  userId: number;\r\n  title: string;\r\n  completed: boolean;\r\n\r\n  constructor() {\r\n    super();\r\n  }\r\n}\r\n\r\nexport class ShowcaseUser2Model extends ShellModel {\r\n  id: number;\r\n  name: string;\r\n  email: string;\r\n  username: string;\r\n  company?: ShowcaseCompanyModel;\r\n\r\n  constructor() {\r\n    super();\r\n  }\r\n}\r\n\r\nexport class ShowcaseCompanyModel extends ShellModel {\r\n  catchPhrase: string;\r\n  name: string;\r\n  bs: string;\r\n\r\n  constructor() {\r\n    super();\r\n  }\r\n}\r\n\r\nexport class ShowcaseCombinedTaskUserModel extends ShowcaseTaskModel {\r\n  user: ShowcaseUser2Model;\r\n\r\n  constructor() {\r\n    super();\r\n  }\r\n}\r\n","import { Inject, Injectable, PLATFORM_ID } from '@angular/core';\r\nimport { HttpClient } from '@angular/common/http';\r\n\r\nimport { Observable } from 'rxjs';\r\nimport { map } from 'rxjs/operators';\r\n\r\nimport * as dayjs from 'dayjs';\r\n\r\nimport { DataStore } from '../shell/data-store';\r\nimport { DealsListingModel } from './listing/deals-listing.model';\r\nimport { DealsDetailsModel } from './details/deals-details.model';\r\nimport { TransferStateHelper } from '../utils/transfer-state-helper';\r\nimport { isPlatformServer } from '@angular/common';\r\n\r\n@Injectable()\r\nexport class DealsService {\r\n  private listingDataStore: DataStore<DealsListingModel>;\r\n  private detailsDataStore: DataStore<DealsDetailsModel>;\r\n\r\n  constructor(\r\n    @Inject(PLATFORM_ID) private platformId: object,\r\n    private transferStateHelper: TransferStateHelper,\r\n    private http: HttpClient\r\n  ) { }\r\n\r\n  get relativeDates(): Array<string> {\r\n    return [\r\n      dayjs().add(1, 'day').add(8, 'hour').add(10, 'second').format('MM/DD/YYYY HH:mm:ss') as string,\r\n      dayjs().add(7, 'day').format('MM/DD/YYYY') as string,\r\n      dayjs().subtract(1, 'month').format('MM/DD/YYYY') as string,\r\n      dayjs().add(2, 'month').format('MM/DD/YYYY') as string\r\n    ];\r\n  }\r\n\r\n  public getListingDataSource(): Observable<DealsListingModel> {\r\n    const rawDataSource = this.http.get<DealsListingModel>('./assets/sample-data/deals/listing.json')\r\n    .pipe(\r\n      map(\r\n        (data: DealsListingModel) => {\r\n          // Using rest operator to divide the data (see: https://dev.to/napoleon039/how-to-use-the-spread-and-rest-operator-4jbb)\r\n          const {items, ...otherData} = data;\r\n\r\n          const itemsWithRelativeDates = items.map((dealItem, index) => {\r\n            // Relative date (better to showcase UI micro-interactions)\r\n            return {...dealItem, expirationDate: this.relativeDates[index]};\r\n          });\r\n\r\n          // Using spread operator to concat the data (see: https://dev.to/napoleon039/how-to-use-the-spread-and-rest-operator-4jbb)\r\n          const updatedListingData = {...otherData, items: itemsWithRelativeDates};\r\n\r\n          // Note: HttpClient cannot know how to instantiate a class for the returned data\r\n          // We need to properly cast types from json data\r\n          const listing = new DealsListingModel();\r\n\r\n          // The Object.assign() method copies all enumerable own properties from one or more source objects to a target object.\r\n          // Note: If you have non-enummerable properties, you can try a spread operator instead. listing = {...data};\r\n          // (see: https://scotch.io/bar-talk/copying-objects-in-javascript#toc-using-spread-elements-)\r\n          Object.assign(listing, updatedListingData);\r\n\r\n          return listing;\r\n        }\r\n      )\r\n    );\r\n\r\n    // This method tapps into the raw data source and stores the resolved data in the TransferState, then when\r\n    // transitioning from the server rendered view to the browser, checks if we already loaded the data in the server to prevent\r\n    // duplicate http requests.\r\n    const cachedDataSource = this.transferStateHelper.checkDataSourceState('deals-listing-state', rawDataSource);\r\n\r\n    return cachedDataSource;\r\n  }\r\n\r\n  public getListingStore(dataSource: Observable<DealsListingModel>): DataStore<DealsListingModel> {\r\n    // Use cache if available\r\n    if (!this.listingDataStore) {\r\n      // Initialize the model specifying that it is a shell model\r\n      const shellModel: DealsListingModel = new DealsListingModel();\r\n      this.listingDataStore = new DataStore(shellModel);\r\n\r\n      // If running in the server, then don't add shell to the Data Store\r\n      // If we already loaded the Data Source in the server, then don't show a shell when transitioning back to the broswer from the server\r\n      if (isPlatformServer(this.platformId) || dataSource['ssr_state']) {\r\n        // Trigger loading mechanism with 0 delay (this will prevent the shell to be shown)\r\n        this.listingDataStore.load(dataSource, 0);\r\n      } else { // On browser transitions\r\n        // Trigger the loading mechanism (with shell)\r\n        this.listingDataStore.load(dataSource);\r\n      }\r\n    }\r\n    return this.listingDataStore;\r\n  }\r\n\r\n  public getDetailsDataSource(): Observable<DealsDetailsModel> {\r\n    const rawDataSource = this.http.get<DealsDetailsModel>('./assets/sample-data/deals/details.json')\r\n    .pipe(\r\n      map(\r\n        (data: DealsDetailsModel) => {\r\n          const expirationDate = dayjs().add(1, 'day').add(8, 'hour').add(10, 'second').format('MM/DD/YYYY HH:mm:ss') as string;\r\n          const updatedDetailsData = {...data, expirationDate};\r\n\r\n          // Note: HttpClient cannot know how to instantiate a class for the returned data\r\n          // We need to properly cast types from json data\r\n          const details = new DealsDetailsModel();\r\n\r\n          // The Object.assign() method copies all enumerable own properties from one or more source objects to a target object.\r\n          // Note: If you have non-enummerable properties, you can try a spread operator instead. details = {...data};\r\n          // (see: https://scotch.io/bar-talk/copying-objects-in-javascript#toc-using-spread-elements-)\r\n          Object.assign(details, updatedDetailsData);\r\n\r\n          return details;\r\n        }\r\n      )\r\n    );\r\n\r\n    // This method tapps into the raw data source and stores the resolved data in the TransferState, then when\r\n    // transitioning from the server rendered view to the browser, checks if we already loaded the data in the server to prevent\r\n    // duplicate http requests.\r\n    const cachedDataSource = this.transferStateHelper.checkDataSourceState('deals-details-state', rawDataSource);\r\n\r\n    return cachedDataSource;\r\n  }\r\n\r\n  public getDetailsStore(dataSource: Observable<DealsDetailsModel>): DataStore<DealsDetailsModel> {\r\n    // Initialize the model specifying that it is a shell model\r\n    const shellModel: DealsDetailsModel = new DealsDetailsModel();\r\n    this.detailsDataStore = new DataStore(shellModel);\r\n\r\n    // If running in the server, then don't add shell to the Data Store\r\n    // If we already loaded the Data Source in the server, then don't show a shell when transitioning back to the broswer from the server\r\n    if (isPlatformServer(this.platformId) || dataSource['ssr_state']) {\r\n      // Trigger loading mechanism with 0 delay (this will prevent the shell to be shown)\r\n      this.detailsDataStore.load(dataSource, 0);\r\n    } else { // On browser transitions\r\n      // Trigger the loading mechanism (with shell)\r\n      this.detailsDataStore.load(dataSource);\r\n    }\r\n\r\n    return this.detailsDataStore;\r\n  }\r\n\r\n}\r\n"],"sourceRoot":"webpack:///"}