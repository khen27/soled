{"version":3,"sources":["./node_modules/core-js/modules/_function-to-string.js","./node_modules/core-js/modules/_html.js","./node_modules/core-js/modules/_is-object.js","./node_modules/core-js/modules/_iter-step.js","./node_modules/core-js/modules/_a-function.js","./node_modules/core-js/modules/_redefine-all.js","./node_modules/core-js/modules/es7.reflect.get-metadata.js","./node_modules/core-js/modules/es7.reflect.define-metadata.js","./node_modules/core-js/modules/_collection.js","./node_modules/core-js/modules/_enum-bug-keys.js","./node_modules/core-js/modules/_array-species-constructor.js","./node_modules/core-js/modules/es7.reflect.has-own-metadata.js","./node_modules/core-js/modules/es6.map.js","./node_modules/core-js/modules/_an-instance.js","./node_modules/core-js/modules/_iter-define.js","./node_modules/core-js/modules/es7.reflect.get-own-metadata.js","./node_modules/core-js/modules/_array-methods.js","./node_modules/core-js/modules/_object-keys.js","./node_modules/core-js/modules/es6.weak-map.js","./node_modules/core-js/modules/_is-array.js","./node_modules/core-js/modules/_object-gopd.js","./node_modules/core-js/modules/_object-dps.js","./node_modules/core-js/es7/reflect.js","./node_modules/core-js/modules/_iter-call.js","./node_modules/core-js/modules/_classof.js","./node_modules/core-js/modules/_dom-create.js","./node_modules/core-js/modules/core.get-iterator-method.js","./node_modules/core-js/modules/_object-gops.js","./node_modules/core-js/modules/_wks.js","./node_modules/core-js/modules/_redefine.js","./node_modules/core-js/modules/_object-create.js","./node_modules/core-js/modules/_library.js","./node_modules/core-js/modules/_cof.js","./node_modules/core-js/modules/_is-array-iter.js","./node_modules/core-js/modules/_hide.js","./node_modules/core-js/modules/_metadata.js","./node_modules/core-js/modules/_object-gpo.js","./node_modules/core-js/modules/es7.reflect.metadata.js","./node_modules/core-js/modules/_array-from-iterable.js","./node_modules/core-js/modules/_iter-create.js","./node_modules/core-js/modules/_to-integer.js","./node_modules/core-js/modules/_property-desc.js","./node_modules/core-js/modules/_to-object.js","./node_modules/core-js/modules/_for-of.js","./node_modules/core-js/modules/es6.set.js","./node_modules/core-js/modules/_object-pie.js","./node_modules/core-js/modules/_shared.js","./node_modules/core-js/modules/_export.js","./node_modules/core-js/modules/_iter-detect.js","./node_modules/core-js/modules/_inherit-if-required.js","./node_modules/core-js/modules/_shared-key.js","./node_modules/core-js/modules/_iobject.js","./node_modules/core-js/modules/_meta.js","./node_modules/core-js/modules/_collection-weak.js","./node_modules/core-js/modules/_to-iobject.js","./node_modules/core-js/modules/_has.js","./node_modules/core-js/modules/_to-primitive.js","./node_modules/core-js/modules/_object-assign.js","./node_modules/core-js/modules/_to-absolute-index.js","./node_modules/core-js/modules/_global.js","./node_modules/core-js/modules/_fails.js","./node_modules/core-js/modules/_set-species.js","./node_modules/core-js/modules/es7.reflect.get-own-metadata-keys.js","./node_modules/core-js/modules/_set-to-string-tag.js","./node_modules/core-js/modules/_core.js","./src/polyfills.ts","./node_modules/core-js/modules/_iterators.js","./node_modules/core-js/modules/_object-dp.js","./node_modules/core-js/modules/_set-proto.js","./node_modules/core-js/modules/es7.reflect.has-metadata.js","./node_modules/core-js/modules/_ctx.js","./node_modules/core-js/modules/_to-length.js","./node_modules/core-js/modules/_descriptors.js","./node_modules/zone.js/dist/zone-evergreen.js","./node_modules/core-js/modules/_validate-collection.js","./node_modules/core-js/modules/es7.reflect.get-metadata-keys.js","./node_modules/@webcomponents/webcomponentsjs/custom-elements-es5-adapter.js","./node_modules/core-js/modules/_defined.js","./node_modules/core-js/modules/_array-includes.js","./node_modules/core-js/modules/_collection-strong.js","./node_modules/core-js/modules/_ie8-dom-define.js","./node_modules/core-js/modules/_an-object.js","./node_modules/core-js/modules/_uid.js","./node_modules/core-js/modules/_array-species-create.js","./node_modules/core-js/modules/_object-keys-internal.js","./node_modules/core-js/modules/es7.reflect.delete-metadata.js"],"names":[],"mappings":";;;;;;;;;AAAA,iBAAiB,mBAAO,CAAC,uBAAW;;;;;;;;;;;;ACApC,eAAe,mBAAO,CAAC,uBAAW;AAClC;;;;;;;;;;;;ACDA;AACA;AACA;;;;;;;;;;;;ACFA;AACA,UAAU;AACV;;;;;;;;;;;;;;;;;;;;;;;;ACFA;AACA;AACA;AACA;;;;;;;;;;;;ACHA,eAAe,mBAAO,CAAC,yBAAa;AACpC;AACA;AACA;AACA;;;;;;;;;;;;ACJA,eAAe,mBAAO,CAAC,yBAAa;AACpC,eAAe,mBAAO,CAAC,0BAAc;AACrC,qBAAqB,mBAAO,CAAC,2BAAe;AAC5C;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA,cAAc;AACd;AACA,CAAC,EAAE;;;;;;;;;;;;AChBH,eAAe,mBAAO,CAAC,yBAAa;AACpC,eAAe,mBAAO,CAAC,0BAAc;AACrC;AACA;;AAEA,cAAc;AACd;AACA,CAAC,EAAE;;;;;;;;;;;;;ACPU;AACb,aAAa,mBAAO,CAAC,uBAAW;AAChC,cAAc,mBAAO,CAAC,uBAAW;AACjC,eAAe,mBAAO,CAAC,yBAAa;AACpC,kBAAkB,mBAAO,CAAC,6BAAiB;AAC3C,WAAW,mBAAO,CAAC,qBAAS;AAC5B,YAAY,mBAAO,CAAC,uBAAW;AAC/B,iBAAiB,mBAAO,CAAC,4BAAgB;AACzC,eAAe,mBAAO,CAAC,0BAAc;AACrC,YAAY,mBAAO,CAAC,sBAAU;AAC9B,kBAAkB,mBAAO,CAAC,4BAAgB;AAC1C,qBAAqB,mBAAO,CAAC,kCAAsB;AACnD,wBAAwB,mBAAO,CAAC,oCAAwB;;AAExD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,OAAO;AACP;AACA,OAAO;AACP;AACA,OAAO,mCAAmC,gCAAgC,aAAa;AACvF,8BAA8B,mCAAmC,aAAa;AAC9E;AACA;AACA;AACA;AACA,GAAG;AACH;AACA;AACA;AACA;AACA,GAAG;AACH;AACA;AACA,qDAAqD;AACrD;AACA,kDAAkD,iBAAiB,EAAE;AACrE;AACA,wDAAwD,aAAa,EAAE,EAAE;AACzE;AACA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA,OAAO;AACP;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;;AAEA;;AAEA;AACA;;;;;;;;;;;;ACpFA;AACA;AACA;AACA;;;;;;;;;;;;ACHA,eAAe,mBAAO,CAAC,0BAAc;AACrC,cAAc,mBAAO,CAAC,yBAAa;AACnC,cAAc,mBAAO,CAAC,oBAAQ;;AAE9B;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,GAAG;AACH;;;;;;;;;;;;ACfA,eAAe,mBAAO,CAAC,yBAAa;AACpC,eAAe,mBAAO,CAAC,0BAAc;AACrC;AACA;;AAEA,cAAc;AACd;AACA;AACA,CAAC,EAAE;;;;;;;;;;;;;ACRU;AACb,aAAa,mBAAO,CAAC,kCAAsB;AAC3C,eAAe,mBAAO,CAAC,oCAAwB;AAC/C;;AAEA;AACA,iBAAiB,mBAAO,CAAC,2BAAe;AACxC,yBAAyB,mEAAmE;AAC5F,CAAC;AACD;AACA;AACA;AACA;AACA,GAAG;AACH;AACA;AACA;AACA;AACA,CAAC;;;;;;;;;;;;AClBD;AACA;AACA;AACA,GAAG;AACH;;;;;;;;;;;;;ACJa;AACb,cAAc,mBAAO,CAAC,wBAAY;AAClC,cAAc,mBAAO,CAAC,uBAAW;AACjC,eAAe,mBAAO,CAAC,yBAAa;AACpC,WAAW,mBAAO,CAAC,qBAAS;AAC5B,gBAAgB,mBAAO,CAAC,0BAAc;AACtC,kBAAkB,mBAAO,CAAC,4BAAgB;AAC1C,qBAAqB,mBAAO,CAAC,kCAAsB;AACnD,qBAAqB,mBAAO,CAAC,2BAAe;AAC5C,eAAe,mBAAO,CAAC,oBAAQ;AAC/B,8CAA8C;AAC9C;AACA;AACA;;AAEA,8BAA8B,aAAa;;AAE3C;AACA;AACA;AACA;AACA;AACA,yCAAyC,oCAAoC;AAC7E,6CAA6C,oCAAoC;AACjF,KAAK,4BAA4B,oCAAoC;AACrE;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,gBAAgB,mBAAmB;AACnC;AACA;AACA,kCAAkC,2BAA2B;AAC7D;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;;;;;;;;;;;;ACpEA,eAAe,mBAAO,CAAC,yBAAa;AACpC,eAAe,mBAAO,CAAC,0BAAc;AACrC;AACA;;AAEA,cAAc;AACd;AACA;AACA,CAAC,EAAE;;;;;;;;;;;;ACRH;AACA;AACA;AACA;AACA;AACA;AACA;AACA,UAAU,mBAAO,CAAC,oBAAQ;AAC1B,cAAc,mBAAO,CAAC,wBAAY;AAClC,eAAe,mBAAO,CAAC,0BAAc;AACrC,eAAe,mBAAO,CAAC,0BAAc;AACrC,UAAU,mBAAO,CAAC,qCAAyB;AAC3C;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,UAAU,eAAe;AACzB;AACA;AACA;AACA,wCAAwC;AACxC;AACA,8BAA8B;AAC9B,6BAA6B;AAC7B,+BAA+B;AAC/B,mCAAmC;AACnC,SAAS,iCAAiC;AAC1C;AACA;AACA;AACA;AACA;;;;;;;;;;;;AC3CA;AACA,YAAY,mBAAO,CAAC,qCAAyB;AAC7C,kBAAkB,mBAAO,CAAC,8BAAkB;;AAE5C;AACA;AACA;;;;;;;;;;;;;ACNa;AACb,aAAa,mBAAO,CAAC,uBAAW;AAChC,WAAW,mBAAO,CAAC,8BAAkB;AACrC,eAAe,mBAAO,CAAC,yBAAa;AACpC,WAAW,mBAAO,CAAC,qBAAS;AAC5B,aAAa,mBAAO,CAAC,8BAAkB;AACvC,WAAW,mBAAO,CAAC,gCAAoB;AACvC,eAAe,mBAAO,CAAC,0BAAc;AACrC,eAAe,mBAAO,CAAC,oCAAwB;AAC/C,sBAAsB,mBAAO,CAAC,oCAAwB;AACtD;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,GAAG;AACH;AACA;AACA;AACA;AACA;;AAEA;AACA,gCAAgC,mBAAO,CAAC,2BAAe;;AAEvD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,OAAO;AACP,KAAK;AACL,GAAG;AACH;;;;;;;;;;;;AC3DA;AACA,UAAU,mBAAO,CAAC,oBAAQ;AAC1B;AACA;AACA;;;;;;;;;;;;ACJA,UAAU,mBAAO,CAAC,2BAAe;AACjC,iBAAiB,mBAAO,CAAC,8BAAkB;AAC3C,gBAAgB,mBAAO,CAAC,2BAAe;AACvC,kBAAkB,mBAAO,CAAC,6BAAiB;AAC3C,UAAU,mBAAO,CAAC,oBAAQ;AAC1B,qBAAqB,mBAAO,CAAC,+BAAmB;AAChD;;AAEA,YAAY,mBAAO,CAAC,4BAAgB;AACpC;AACA;AACA;AACA;AACA,GAAG,YAAY;AACf;AACA;;;;;;;;;;;;ACfA,SAAS,mBAAO,CAAC,0BAAc;AAC/B,eAAe,mBAAO,CAAC,0BAAc;AACrC,cAAc,mBAAO,CAAC,4BAAgB;;AAEtC,iBAAiB,mBAAO,CAAC,4BAAgB;AACzC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;;;;;;ACZA,mBAAO,CAAC,oDAAwC;AAChD,mBAAO,CAAC,oDAAwC;AAChD,mBAAO,CAAC,iDAAqC;AAC7C,mBAAO,CAAC,sDAA0C;AAClD,mBAAO,CAAC,qDAAyC;AACjD,mBAAO,CAAC,0DAA8C;AACtD,mBAAO,CAAC,iDAAqC;AAC7C,mBAAO,CAAC,qDAAyC;AACjD,mBAAO,CAAC,6CAAiC;AACzC,iBAAiB,mBAAO,CAAC,8BAAkB;;;;;;;;;;;;ACT3C;AACA,eAAe,mBAAO,CAAC,0BAAc;AACrC;AACA;AACA;AACA;AACA,GAAG;AACH;AACA;AACA;AACA;AACA;;;;;;;;;;;;ACXA;AACA,UAAU,mBAAO,CAAC,oBAAQ;AAC1B,UAAU,mBAAO,CAAC,oBAAQ;AAC1B;AACA,2BAA2B,kBAAkB,EAAE;;AAE/C;AACA;AACA;AACA;AACA,GAAG,YAAY;AACf;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;;;;;;ACtBA,eAAe,mBAAO,CAAC,0BAAc;AACrC,eAAe,mBAAO,CAAC,uBAAW;AAClC;AACA;AACA;AACA;AACA;;;;;;;;;;;;ACNA,cAAc,mBAAO,CAAC,wBAAY;AAClC,eAAe,mBAAO,CAAC,oBAAQ;AAC/B,gBAAgB,mBAAO,CAAC,0BAAc;AACtC,iBAAiB,mBAAO,CAAC,qBAAS;AAClC;AACA;AACA;AACA;;;;;;;;;;;;ACPA;;;;;;;;;;;;ACAA,YAAY,mBAAO,CAAC,uBAAW;AAC/B,UAAU,mBAAO,CAAC,oBAAQ;AAC1B,aAAa,mBAAO,CAAC,uBAAW;AAChC;;AAEA;AACA;AACA;AACA;;AAEA;;;;;;;;;;;;ACVA,aAAa,mBAAO,CAAC,uBAAW;AAChC,WAAW,mBAAO,CAAC,qBAAS;AAC5B,UAAU,mBAAO,CAAC,oBAAQ;AAC1B,UAAU,mBAAO,CAAC,oBAAQ;AAC1B,gBAAgB,mBAAO,CAAC,mCAAuB;AAC/C;AACA;;AAEA,mBAAO,CAAC,qBAAS;AACjB;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,GAAG;AACH;AACA;AACA,GAAG;AACH;AACA,GAAG;AACH;AACA;AACA;AACA,CAAC;AACD;AACA,CAAC;;;;;;;;;;;;AC9BD;AACA,eAAe,mBAAO,CAAC,0BAAc;AACrC,UAAU,mBAAO,CAAC,2BAAe;AACjC,kBAAkB,mBAAO,CAAC,8BAAkB;AAC5C,eAAe,mBAAO,CAAC,2BAAe;AACtC,yBAAyB;AACzB;;AAEA;AACA;AACA;AACA,eAAe,mBAAO,CAAC,2BAAe;AACtC;AACA;AACA;AACA;AACA;AACA,EAAE,mBAAO,CAAC,qBAAS;AACnB,6BAA6B;AAC7B;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,GAAG;AACH;AACA;;;;;;;;;;;;ACxCA;;;;;;;;;;;;ACAA,iBAAiB;;AAEjB;AACA;AACA;;;;;;;;;;;;ACJA;AACA,gBAAgB,mBAAO,CAAC,0BAAc;AACtC,eAAe,mBAAO,CAAC,oBAAQ;AAC/B;;AAEA;AACA;AACA;;;;;;;;;;;;ACPA,SAAS,mBAAO,CAAC,0BAAc;AAC/B,iBAAiB,mBAAO,CAAC,8BAAkB;AAC3C,iBAAiB,mBAAO,CAAC,4BAAgB;AACzC;AACA,CAAC;AACD;AACA;AACA;;;;;;;;;;;;ACPA,UAAU,mBAAO,CAAC,uBAAW;AAC7B,cAAc,mBAAO,CAAC,uBAAW;AACjC,aAAa,mBAAO,CAAC,uBAAW;AAChC,iDAAiD,mBAAO,CAAC,4BAAgB;;AAEzE;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,GAAG;AACH;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,0DAA0D,gBAAgB,EAAE;AAC5E;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;;;;;;AClDA;AACA,UAAU,mBAAO,CAAC,oBAAQ;AAC1B,eAAe,mBAAO,CAAC,0BAAc;AACrC,eAAe,mBAAO,CAAC,2BAAe;AACtC;;AAEA;AACA;AACA;AACA;AACA;AACA,GAAG;AACH;;;;;;;;;;;;ACZA,gBAAgB,mBAAO,CAAC,yBAAa;AACrC,eAAe,mBAAO,CAAC,0BAAc;AACrC,gBAAgB,mBAAO,CAAC,2BAAe;AACvC;AACA;;AAEA,eAAe;AACf;AACA;AACA;AACA;AACA;AACA;AACA;AACA,CAAC,EAAE;;;;;;;;;;;;ACdH,YAAY,mBAAO,CAAC,uBAAW;;AAE/B;AACA;AACA;AACA;AACA;;;;;;;;;;;;;ACNa;AACb,aAAa,mBAAO,CAAC,8BAAkB;AACvC,iBAAiB,mBAAO,CAAC,8BAAkB;AAC3C,qBAAqB,mBAAO,CAAC,kCAAsB;AACnD;;AAEA;AACA,mBAAO,CAAC,qBAAS,qBAAqB,mBAAO,CAAC,oBAAQ,4BAA4B,aAAa,EAAE;;AAEjG;AACA,qDAAqD,4BAA4B;AACjF;AACA;;;;;;;;;;;;ACZA;AACA;AACA;AACA;AACA;AACA;;;;;;;;;;;;ACLA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;;;;;;ACPA;AACA,cAAc,mBAAO,CAAC,wBAAY;AAClC;AACA;AACA;;;;;;;;;;;;ACJA,UAAU,mBAAO,CAAC,oBAAQ;AAC1B,WAAW,mBAAO,CAAC,0BAAc;AACjC,kBAAkB,mBAAO,CAAC,8BAAkB;AAC5C,eAAe,mBAAO,CAAC,0BAAc;AACrC,eAAe,mBAAO,CAAC,0BAAc;AACrC,gBAAgB,mBAAO,CAAC,wCAA4B;AACpD;AACA;AACA;AACA,uCAAuC,iBAAiB,EAAE;AAC1D;AACA;AACA;AACA;AACA;AACA,mEAAmE,gBAAgB;AACnF;AACA;AACA,GAAG,4CAA4C,gCAAgC;AAC/E;AACA;AACA;AACA;AACA;AACA;;;;;;;;;;;;;ACxBa;AACb,aAAa,mBAAO,CAAC,kCAAsB;AAC3C,eAAe,mBAAO,CAAC,oCAAwB;AAC/C;;AAEA;AACA,iBAAiB,mBAAO,CAAC,2BAAe;AACxC,yBAAyB,mEAAmE;AAC5F,CAAC;AACD;AACA;AACA;AACA;AACA,CAAC;;;;;;;;;;;;ACbD,cAAc;;;;;;;;;;;;ACAd,WAAW,mBAAO,CAAC,qBAAS;AAC5B,aAAa,mBAAO,CAAC,uBAAW;AAChC;AACA,kDAAkD;;AAElD;AACA,qEAAqE;AACrE,CAAC;AACD;AACA,QAAQ,mBAAO,CAAC,wBAAY;AAC5B;AACA,CAAC;;;;;;;;;;;;ACXD,aAAa,mBAAO,CAAC,uBAAW;AAChC,WAAW,mBAAO,CAAC,qBAAS;AAC5B,WAAW,mBAAO,CAAC,qBAAS;AAC5B,eAAe,mBAAO,CAAC,yBAAa;AACpC,UAAU,mBAAO,CAAC,oBAAQ;AAC1B;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA,kFAAkF,uBAAuB;AACzG,iEAAiE;AACjE,+DAA+D;AAC/D;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,cAAc;AACd,cAAc;AACd,cAAc;AACd,cAAc;AACd,eAAe;AACf,eAAe;AACf,eAAe;AACf,gBAAgB;AAChB;;;;;;;;;;;;AC1CA,eAAe,mBAAO,CAAC,oBAAQ;AAC/B;;AAEA;AACA;AACA,iCAAiC,qBAAqB;AACtD;AACA,iCAAiC,SAAS,EAAE;AAC5C,CAAC,YAAY;;AAEb;AACA;AACA;AACA;AACA;AACA;AACA,6BAA6B,SAAS,qBAAqB;AAC3D,iCAAiC,aAAa;AAC9C;AACA,GAAG,YAAY;AACf;AACA;;;;;;;;;;;;ACrBA,eAAe,mBAAO,CAAC,0BAAc;AACrC,qBAAqB,mBAAO,CAAC,0BAAc;AAC3C;AACA;AACA;AACA;AACA;AACA,GAAG;AACH;;;;;;;;;;;;ACRA,aAAa,mBAAO,CAAC,uBAAW;AAChC,UAAU,mBAAO,CAAC,oBAAQ;AAC1B;AACA;AACA;;;;;;;;;;;;ACJA;AACA,UAAU,mBAAO,CAAC,oBAAQ;AAC1B;AACA;AACA;AACA;;;;;;;;;;;;ACLA,WAAW,mBAAO,CAAC,oBAAQ;AAC3B,eAAe,mBAAO,CAAC,0BAAc;AACrC,UAAU,mBAAO,CAAC,oBAAQ;AAC1B,cAAc,mBAAO,CAAC,0BAAc;AACpC;AACA;AACA;AACA;AACA,cAAc,mBAAO,CAAC,sBAAU;AAChC,iDAAiD;AACjD,CAAC;AACD;AACA,qBAAqB;AACrB;AACA,SAAS;AACT,GAAG,EAAE;AACL;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,GAAG;AACH;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,GAAG;AACH;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;;;;;;;ACpDa;AACb,kBAAkB,mBAAO,CAAC,6BAAiB;AAC3C,cAAc,mBAAO,CAAC,qBAAS;AAC/B,eAAe,mBAAO,CAAC,0BAAc;AACrC,eAAe,mBAAO,CAAC,0BAAc;AACrC,iBAAiB,mBAAO,CAAC,4BAAgB;AACzC,YAAY,mBAAO,CAAC,uBAAW;AAC/B,wBAAwB,mBAAO,CAAC,8BAAkB;AAClD,WAAW,mBAAO,CAAC,oBAAQ;AAC3B,eAAe,mBAAO,CAAC,oCAAwB;AAC/C;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,GAAG;AACH;AACA;AACA;AACA;AACA;AACA,GAAG;AACH;AACA;AACA,GAAG;AACH;AACA;AACA;AACA;AACA,GAAG;AACH;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA,qBAAqB;AACrB,qBAAqB;AACrB,0BAA0B;AAC1B;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,OAAO;AACP;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA,GAAG;AACH;AACA;AACA;AACA;AACA;AACA,GAAG;AACH;AACA;;;;;;;;;;;;ACpFA;AACA,cAAc,mBAAO,CAAC,wBAAY;AAClC,cAAc,mBAAO,CAAC,wBAAY;AAClC;AACA;AACA;;;;;;;;;;;;ACLA,uBAAuB;AACvB;AACA;AACA;;;;;;;;;;;;ACHA;AACA,eAAe,mBAAO,CAAC,0BAAc;AACrC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;;;;;;;ACXa;AACb;AACA,kBAAkB,mBAAO,CAAC,4BAAgB;AAC1C,cAAc,mBAAO,CAAC,4BAAgB;AACtC,WAAW,mBAAO,CAAC,4BAAgB;AACnC,UAAU,mBAAO,CAAC,2BAAe;AACjC,eAAe,mBAAO,CAAC,0BAAc;AACrC,cAAc,mBAAO,CAAC,wBAAY;AAClC;;AAEA;AACA,6BAA6B,mBAAO,CAAC,sBAAU;AAC/C;AACA;AACA;AACA;AACA;AACA;AACA,oCAAoC,UAAU,EAAE;AAChD,mBAAmB,sCAAsC;AACzD,CAAC,qCAAqC;AACtC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,GAAG;AACH,CAAC;;;;;;;;;;;;ACrCD,gBAAgB,mBAAO,CAAC,2BAAe;AACvC;AACA;AACA;AACA;AACA;AACA;;;;;;;;;;;;ACNA;AACA;AACA;AACA;AACA;AACA,yCAAyC;;;;;;;;;;;;ACLzC;AACA;AACA;AACA,GAAG;AACH;AACA;AACA;;;;;;;;;;;;;ACNa;AACb,aAAa,mBAAO,CAAC,uBAAW;AAChC,SAAS,mBAAO,CAAC,0BAAc;AAC/B,kBAAkB,mBAAO,CAAC,4BAAgB;AAC1C,cAAc,mBAAO,CAAC,oBAAQ;;AAE9B;AACA;AACA;AACA;AACA,sBAAsB,aAAa;AACnC,GAAG;AACH;;;;;;;;;;;;ACZA,eAAe,mBAAO,CAAC,yBAAa;AACpC,eAAe,mBAAO,CAAC,0BAAc;AACrC;AACA;;AAEA,cAAc;AACd;AACA,CAAC,EAAE;;;;;;;;;;;;ACPH,UAAU,mBAAO,CAAC,0BAAc;AAChC,UAAU,mBAAO,CAAC,oBAAQ;AAC1B,UAAU,mBAAO,CAAC,oBAAQ;;AAE1B;AACA,oEAAoE,iCAAiC;AACrG;;;;;;;;;;;;ACNA,6BAA6B;AAC7B,uCAAuC;;;;;;;;;;;;;ACDvC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;;;;;;;;;;;;;;GAcG;AAEH;;GAEG;AAEH,mEAAmE;AACnE,+BAA+B;AAC/B,+BAA+B;AAC/B,iCAAiC;AACjC,kCAAkC;AAClC,oCAAoC;AACpC,+BAA+B;AAC/B,6BAA6B;AAC7B,+BAA+B;AAC/B,6BAA6B;AAC7B,8BAA8B;AAC9B,+BAA+B;AAC/B,4BAA4B;AAC5B,iCAAiC;AACjC,4BAA4B;AAE5B,+EAA+E;AAC/E,oEAAoE;AAEpE,gEAAgE;AAChE,gCAAgC;AAGhC,yCAAyC;AACzC,kGAAkG;AACrE;AAG7B;;;IAGI;AACJ,8EAA8E;AAI9E;;GAEG;AACwB,CAAE,6BAA6B;AAI1D;;GAEG;AAEH;;;GAGG;AACH,oDAAoD;AACpD;;GAEG;AACH,sCAAsC;AACiC;;;;;;;;;;;;AC5EvE;;;;;;;;;;;;ACAA,eAAe,mBAAO,CAAC,0BAAc;AACrC,qBAAqB,mBAAO,CAAC,+BAAmB;AAChD,kBAAkB,mBAAO,CAAC,6BAAiB;AAC3C;;AAEA,YAAY,mBAAO,CAAC,4BAAgB;AACpC;AACA;AACA;AACA;AACA;AACA,GAAG,YAAY;AACf;AACA;AACA;AACA;;;;;;;;;;;;ACfA;AACA;AACA,eAAe,mBAAO,CAAC,0BAAc;AACrC,eAAe,mBAAO,CAAC,0BAAc;AACrC;AACA;AACA;AACA;AACA;AACA,kDAAkD;AAClD;AACA;AACA,cAAc,mBAAO,CAAC,oBAAQ,iBAAiB,mBAAO,CAAC,4BAAgB;AACvE;AACA;AACA,OAAO,YAAY,cAAc;AACjC;AACA;AACA;AACA;AACA;AACA;AACA,KAAK,GAAG;AACR;AACA;;;;;;;;;;;;ACxBA,eAAe,mBAAO,CAAC,yBAAa;AACpC,eAAe,mBAAO,CAAC,0BAAc;AACrC,qBAAqB,mBAAO,CAAC,2BAAe;AAC5C;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA,cAAc;AACd;AACA,CAAC,EAAE;;;;;;;;;;;;ACfH;AACA,gBAAgB,mBAAO,CAAC,2BAAe;AACvC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;;;;;;ACnBA;AACA,gBAAgB,mBAAO,CAAC,2BAAe;AACvC;AACA;AACA,2DAA2D;AAC3D;;;;;;;;;;;;ACLA;AACA,kBAAkB,mBAAO,CAAC,sBAAU;AACpC,iCAAiC,QAAQ,mBAAmB,UAAU,EAAE,EAAE;AAC1E,CAAC;;;;;;;;;;;;ACHD;AACA;AACA;AACA;AACA;AACA;AACA,IAAI,KAA0C,GAAG,oCAAO,OAAO;AAAA;AAAA;AAAA;AAAA,oGAAC;AAChE,IAAI,SAAS;AACb,CAAC,eAAe;;AAEhB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,6BAA6B,iEAAiE;AAC9F;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,mCAAmC,4BAA4B;AAC/D;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,kCAAkC,+BAA+B;AACjE,sCAAsC,qBAAqB;AAC3D;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,0BAA0B,qBAAqB;AAC/C,wBAAwB,mBAAmB;AAC3C;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,qCAAqC;AACrC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,qCAAqC;AACrC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,wDAAwD;AACxD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,qCAAqC;AACrC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,sEAAsE,UAAU,6CAA6C,eAAe;AAC5I;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,wDAAwD;AACxD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,+BAA+B,0BAA0B;AACzD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,oCAAoC;AACpwBAAwB,mBAAmB;AAC3C,yBAAyB,oBAAoB;AAC7C,qCAAqC,8CAA8C;AACnF;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,uCAAuC,UAAU,IAAI,YAAY,4BAA4B,QAAQ,sBAAsB,WAAW,GAAG,+CAA+C,SAAS,YAAY;AAC7M;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,mCAAmC,kBAAkB;AACrD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,yBAAyB;AACzB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,iCAAiC;AACjC;AACA;AACA,yBAAyB;AACzB;AACA;AACA,KAAK;;AAEL;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,gIAAgI,wBAAwB,oCAAoC;AAC5L;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,gEAAgE,4BAA4B,EAAE;AAC9F;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,oCAAoC,4BAA4B;AAChE,2CAA2C,cAAc;AACzD,8CAA8C,2CAA2C;AACzF;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,uCAAuC,qCAAqC,EAAE;AAC9E;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,2CAA2C,qCAAqC,EAAE;AAClF;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,oFAAoF,sEAAsE;AAC1J;AACA;AACA,mCAAmC,kBAAkB;AACrD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,gDAAgD;AAChD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,4CAA4C,oDAAoD;AAChG;AACA;AACA;AACA;AACA;AACA,+BAA+B,mCAAmC;AAClE;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,aAAa;AACb;AACA,2EAA2E,gBAAgB;AAC3F,kCAAkC;AAClC;AACA,+BAA+B,qCAAqC;AACpE;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,iBAAiB;AACjB,2CAA2C,gBAAgB;AAC3D,0CAA0C,eAAe;AACzD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,gCAAgC,iDAAiD;AACjF;AACA;AACA;AACA,+CAA+C,6BAA6B;AAC5E,8CAA8C,kCAAkC;AAChF,iBAAiB;AACjB;AACA;AACA;AACA;AACA;AACA;AACA;AACA,iBAAiB;AACjB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,yBAAyB;AACzB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,yBAAyB;AACzB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,0CAA0C;AAC1C;AACA;AACA;AACA;AACA;AACA;AACA;AACA,wCAAwC,kBAAkB;AAC1D,oCAAoC,yBAAyB;AAC7D;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,wBAAwB;AACxB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,2EAA2E,0CAA0C,EAAE;AACvH;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;;AAEL;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,kBAAkB;AAClB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,qCAAqC,QAAQ;AAC7C;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,uBAAuB,oBAAoB;AAC3C;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,iBAAiB;AACjB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,UAAU;AACV;AACA;AACA;AACA;AACA;AACA,UAAU;AACV;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,wBAAwB;AACxB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,mDAAmD;AACnD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,2BAA2B,uBAAuB;AAClD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,2BAA2B,yBAAyB;AACpD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,wDAAwD,EAAE;AAC1D;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,yBAAyB;AACzB,0CAA0C,wCAAwC;AAClF,qBAAqB;AACrB;AACA,aAAa;AACb;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,kCAAkC,oBAAoB,EAAE;AACxD;AACA;AACA;AACA;AACA;AACA;AACA,iBAAiB;AACjB;AACA;AACA,aAAa;AACb,SAAS;AACT;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,2CAA2C,uCAAuC;AAClF;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,iDAAiD,oCAAoC;AACroDAAoD,cAAc,mBAAmB,yBAAyB,EAAE,EAAE;AAClH;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,mCAAmC,sBAAsB;AACzD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,mCAAmC,sBAAsB;AACzD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,4BAA4B;AAC5B;AACA;AACA,4BAA4B;AAC5B;AACA;AACA,yDAAyD,aAAa,gBAAgB;AACtF;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,uCAAuC,0BAA0B;AACjE;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,uCAAuC,8BAA8B;AACrE;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,2CAA2C,0BAA0B;AACrmCAAmC,0BAA0B;AAC7D;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,yEAAyE;AACzE;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,+BAA+B,kBAAkB;AACjD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,mCAAmC,iBAAiB;AACpD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,2CAA2C,wBAAwB;AACnE;AACA;AACA;AACA;AACA;AACA;AACA;AACA,2CAA2C,wBAAwB;AACnE;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,uBAAuB,iBAAiB;AACxC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,uCAAuC,kBAAkB;AACzD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,aAAa;AACb;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,sCAAsC,WAAW,GAAG,OAAO;AAC3D;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,iBAAiB;AACjmDAAmD,sDAAsD;AACzG;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,uCAAuC;AACvC,8FAA8F;AAC9F,KAAK;;AAEL;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,kCAAkC,wCAAwC;AAC1E;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,aAAa;AACb;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,eAAe,mBAAmB;AAClC;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,eAAe,4EAA4E;AAC3F;AACA,uBAAuB,uBAAuB;AAC9C;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA,uBAAuB,4BAA4B;AACnD;AACA;AACA;AACA;AACA;AACA,aAAa;AACb;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA,KAAK;AACL;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,8CAA8C,yBAAyB;AACvE;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,mDAAmD,sBAAsB;AACzE;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,4CAA4C;AAC5C;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,qCAAqC;AACrC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,aAAa;AACb;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,wEAAwE,0CAA0C;AAClH;AACA;AACA,iBAAiB;AACjB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;;AAEL,CAAC;;;;;;;;;;;;AC33FD,eAAe,mBAAO,CAAC,0BAAc;AACrC;AACA;AACA;AACA;;;;;;;;;;;;ACJA,UAAU,mBAAO,CAAC,uBAAW;AAC7B,WAAW,mBAAO,CAAC,oCAAwB;AAC3C,eAAe,mBAAO,CAAC,yBAAa;AACpC,eAAe,mBAAO,CAAC,0BAAc;AACrC,qBAAqB,mBAAO,CAAC,2BAAe;AAC5C;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA,cAAc;AACd;AACA,CAAC,EAAE;;;;;;;;;;;;AClBH;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA,gBAAgB,mHAAmH,oBAAoB,oBAAoB,mCAAmC,iDAAiD,mIAAmI;;AAElY,CAAC;;;;;;;;;;;;ACdD;AACA;AACA;AACA;AACA;;;;;;;;;;;;ACJA;AACA;AACA,gBAAgB,mBAAO,CAAC,2BAAe;AACvC,eAAe,mBAAO,CAAC,0BAAc;AACrC,sBAAsB,mBAAO,CAAC,kCAAsB;AACpD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK,YAAY,eAAe;AAChC;AACA,KAAK;AACL;AACA;;;;;;;;;;;;;ACtBa;AACb,SAAS,mBAAO,CAAC,0BAAc;AAC/B,aAAa,mBAAO,CAAC,8BAAkB;AACvC,kBAAkB,mBAAO,CAAC,6BAAiB;AAC3C,UAAU,mBAAO,CAAC,oBAAQ;AAC1B,iBAAiB,mBAAO,CAAC,4BAAgB;AACzC,YAAY,mBAAO,CAAC,uBAAW;AAC/B,kBAAkB,mBAAO,CAAC,4BAAgB;AAC1C,WAAW,mBAAO,CAAC,0BAAc;AACjC,iBAAiB,mBAAO,CAAC,4BAAgB;AACzC,kBAAkB,mBAAO,CAAC,4BAAgB;AAC1C,cAAc,mBAAO,CAAC,qBAAS;AAC/B,eAAe,mBAAO,CAAC,oCAAwB;AAC/C;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA,uBAAuB,OAAO;AAC9B;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA,qBAAqB;AACrB,6BAA6B;AAC7B,0BAA0B;AAC1B,0BAA0B;AAC1B,qBAAqB;AACrB;AACA,KAAK;AACL;AACA;AACA;AACA;AACA,8EAA8E,OAAO;AACrF;AACA;AACA;AACA;AACA;AACA;AACA,OAAO;AACP;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT,OAAO;AACP;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,OAAO;AACP;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA,KAAK;AACL;AACA,GAAG;AACH;AACA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL,GAAG;AACH;AACA;AACA;AACA;AACA;AACA,yCAAyC;AACzC,qBAAqB;AACrB,0BAA0B;AAC1B,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;;AAEL;AACA;AACA;AACA;;;;;;;;;;;;AC/IA,kBAAkB,mBAAO,CAAC,4BAAgB,MAAM,mBAAO,CAAC,sBAAU;AAClE,+BAA+B,mBAAO,CAAC,2BAAe,gBAAgB,mBAAmB,UAAU,EAAE,EAAE;AACvG,CAAC;;;;;;;;;;;;ACFD,eAAe,mBAAO,CAAC,0BAAc;AACrC;AACA;AACA;AACA;;;;;;;;;;;;ACJA;AACA;AACA;AACA;AACA;;;;;;;;;;;;ACJA;AACA,yBAAyB,mBAAO,CAAC,0CAA8B;;AAE/D;AACA;AACA;;;;;;;;;;;;ACLA,UAAU,mBAAO,CAAC,oBAAQ;AAC1B,gBAAgB,mBAAO,CAAC,2BAAe;AACvC,mBAAmB,mBAAO,CAAC,+BAAmB;AAC9C,eAAe,mBAAO,CAAC,2BAAe;;AAEtC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;;;;;;AChBA,eAAe,mBAAO,CAAC,yBAAa;AACpC,eAAe,mBAAO,CAAC,0BAAc;AACrC;AACA;AACA;;AAEA,cAAc;AACd;AACA;AACA;AACA;AACA;AACA;AACA;AACA,CAAC,EAAE","file":"polyfills-es2015.js","sourcesContent":["module.exports = require('./_shared')('native-function-to-string', Function.toString);\r\n","var document = require('./_global').document;\r\nmodule.exports = document && document.documentElement;\r\n","module.exports = function (it) {\r\n  return typeof it === 'object' ? it !== null : typeof it === 'function';\r\n};\r\n","module.exports = function (done, value) {\r\n  return { value: value, done: !!done };\r\n};\r\n","module.exports = function (it) {\r\n  if (typeof it != 'function') throw TypeError(it + ' is not a function!');\r\n  return it;\r\n};\r\n","var redefine = require('./_redefine');\r\nmodule.exports = function (target, src, safe) {\r\n  for (var key in src) redefine(target, key, src[key], safe);\r\n  return target;\r\n};\r\n","var metadata = require('./_metadata');\r\nvar anObject = require('./_an-object');\r\nvar getPrototypeOf = require('./_object-gpo');\r\nvar ordinaryHasOwnMetadata = metadata.has;\r\nvar ordinaryGetOwnMetadata = metadata.get;\r\nvar toMetaKey = metadata.key;\r\n\r\nvar ordinaryGetMetadata = function (MetadataKey, O, P) {\r\n  var hasOwn = ordinaryHasOwnMetadata(MetadataKey, O, P);\r\n  if (hasOwn) return ordinaryGetOwnMetadata(MetadataKey, O, P);\r\n  var parent = getPrototypeOf(O);\r\n  return parent !== null ? ordinaryGetMetadata(MetadataKey, parent, P) : undefined;\r\n};\r\n\r\nmetadata.exp({ getMetadata: function getMetadata(metadataKey, target /* , targetKey */) {\r\n  return ordinaryGetMetadata(metadataKey, anObject(target), arguments.length < 3 ? undefined : toMetaKey(arguments[2]));\r\n} });\r\n","var metadata = require('./_metadata');\r\nvar anObject = require('./_an-object');\r\nvar toMetaKey = metadata.key;\r\nvar ordinaryDefineOwnMetadata = metadata.set;\r\n\r\nmetadata.exp({ defineMetadata: function defineMetadata(metadataKey, metadataValue, target, targetKey) {\r\n  ordinaryDefineOwnMetadata(metadataKey, metadataValue, anObject(target), toMetaKey(targetKey));\r\n} });\r\n","'use strict';\r\nvar global = require('./_global');\r\nvar $export = require('./_export');\r\nvar redefine = require('./_redefine');\r\nvar redefineAll = require('./_redefine-all');\r\nvar meta = require('./_meta');\r\nvar forOf = require('./_for-of');\r\nvar anInstance = require('./_an-instance');\r\nvar isObject = require('./_is-object');\r\nvar fails = require('./_fails');\r\nvar $iterDetect = require('./_iter-detect');\r\nvar setToStringTag = require('./_set-to-string-tag');\r\nvar inheritIfRequired = require('./_inherit-if-required');\r\n\r\nmodule.exports = function (NAME, wrapper, methods, common, IS_MAP, IS_WEAK) {\r\n  var Base = global[NAME];\r\n  var C = Base;\r\n  var ADDER = IS_MAP ? 'set' : 'add';\r\n  var proto = C && C.prototype;\r\n  var O = {};\r\n  var fixMethod = function (KEY) {\r\n    var fn = proto[KEY];\r\n    redefine(proto, KEY,\r\n      KEY == 'delete' ? function (a) {\r\n        return IS_WEAK && !isObject(a) ? false : fn.call(this, a === 0 ? 0 : a);\r\n      } : KEY == 'has' ? function has(a) {\r\n        return IS_WEAK && !isObject(a) ? false : fn.call(this, a === 0 ? 0 : a);\r\n      } : KEY == 'get' ? function get(a) {\r\n        return IS_WEAK && !isObject(a) ? undefined : fn.call(this, a === 0 ? 0 : a);\r\n      } : KEY == 'add' ? function add(a) { fn.call(this, a === 0 ? 0 : a); return this; }\r\n        : function set(a, b) { fn.call(this, a === 0 ? 0 : a, b); return this; }\r\n    );\r\n  };\r\n  if (typeof C != 'function' || !(IS_WEAK || proto.forEach && !fails(function () {\r\n    new C().entries().next();\r\n  }))) {\r\n    // create collection constructor\r\n    C = common.getConstructor(wrapper, NAME, IS_MAP, ADDER);\r\n    redefineAll(C.prototype, methods);\r\n    meta.NEED = true;\r\n  } else {\r\n    var instance = new C();\r\n    // early implementations not supports chaining\r\n    var HASNT_CHAINING = instance[ADDER](IS_WEAK ? {} : -0, 1) != instance;\r\n    // V8 ~  Chromium 40- weak-collections throws on primitives, but should return false\r\n    var THROWS_ON_PRIMITIVES = fails(function () { instance.has(1); });\r\n    // most early implementations doesn't supports iterables, most modern - not close it correctly\r\n    var ACCEPT_ITERABLES = $iterDetect(function (iter) { new C(iter); }); // eslint-disable-line no-new\r\n    // for early implementations -0 and +0 not the same\r\n    var BUGGY_ZERO = !IS_WEAK && fails(function () {\r\n      // V8 ~ Chromium 42- fails only with 5+ elements\r\n      var $instance = new C();\r\n      var index = 5;\r\n      while (index--) $instance[ADDER](index, index);\r\n      return !$instance.has(-0);\r\n    });\r\n    if (!ACCEPT_ITERABLES) {\r\n      C = wrapper(function (target, iterable) {\r\n        anInstance(target, C, NAME);\r\n        var that = inheritIfRequired(new Base(), target, C);\r\n        if (iterable != undefined) forOf(iterable, IS_MAP, that[ADDER], that);\r\n        return that;\r\n      });\r\n      C.prototype = proto;\r\n      proto.constructor = C;\r\n    }\r\n    if (THROWS_ON_PRIMITIVES || BUGGY_ZERO) {\r\n      fixMethod('delete');\r\n      fixMethod('has');\r\n      IS_MAP && fixMethod('get');\r\n    }\r\n    if (BUGGY_ZERO || HASNT_CHAINING) fixMethod(ADDER);\r\n    // weak collections should not contains .clear method\r\n    if (IS_WEAK && proto.clear) delete proto.clear;\r\n  }\r\n\r\n  setToStringTag(C, NAME);\r\n\r\n  O[NAME] = C;\r\n  $export($export.G + $export.W + $export.F * (C != Base), O);\r\n\r\n  if (!IS_WEAK) common.setStrong(C, NAME, IS_MAP);\r\n\r\n  return C;\r\n};\r\n","// IE 8- don't enum bug keys\r\nmodule.exports = (\r\n  'constructor,hasOwnProperty,isPrototypeOf,propertyIsEnumerable,toLocaleString,toString,valueOf'\r\n).split(',');\r\n","var isObject = require('./_is-object');\r\nvar isArray = require('./_is-array');\r\nvar SPECIES = require('./_wks')('species');\r\n\r\nmodule.exports = function (original) {\r\n  var C;\r\n  if (isArray(original)) {\r\n    C = original.constructor;\r\n    // cross-realm fallback\r\n    if (typeof C == 'function' && (C === Array || isArray(C.prototype))) C = undefined;\r\n    if (isObject(C)) {\r\n      C = C[SPECIES];\r\n      if (C === null) C = undefined;\r\n    }\r\n  } return C === undefined ? Array : C;\r\n};\r\n","var metadata = require('./_metadata');\r\nvar anObject = require('./_an-object');\r\nvar ordinaryHasOwnMetadata = metadata.has;\r\nvar toMetaKey = metadata.key;\r\n\r\nmetadata.exp({ hasOwnMetadata: function hasOwnMetadata(metadataKey, target /* , targetKey */) {\r\n  return ordinaryHasOwnMetadata(metadataKey, anObject(target)\r\n    , arguments.length < 3 ? undefined : toMetaKey(arguments[2]));\r\n} });\r\n","'use strict';\r\nvar strong = require('./_collection-strong');\r\nvar validate = require('./_validate-collection');\r\nvar MAP = 'Map';\r\n\r\n// 23.1 Map Objects\r\nmodule.exports = require('./_collection')(MAP, function (get) {\r\n  return function Map() { return get(this, arguments.length > 0 ? arguments[0] : undefined); };\r\n}, {\r\n  // 23.1.3.6 Map.prototype.get(key)\r\n  get: function get(key) {\r\n    var entry = strong.getEntry(validate(this, MAP), key);\r\n    return entry && entry.v;\r\n  },\r\n  // 23.1.3.9 Map.prototype.set(key, value)\r\n  set: function set(key, value) {\r\n    return strong.def(validate(this, MAP), key === 0 ? 0 : key, value);\r\n  }\r\n}, strong, true);\r\n","module.exports = function (it, Constructor, name, forbiddenField) {\r\n  if (!(it instanceof Constructor) || (forbiddenField !== undefined && forbiddenField in it)) {\r\n    throw TypeError(name + ': incorrect invocation!');\r\n  } return it;\r\n};\r\n","'use strict';\r\nvar LIBRARY = require('./_library');\r\nvar $export = require('./_export');\r\nvar redefine = require('./_redefine');\r\nvar hide = require('./_hide');\r\nvar Iterators = require('./_iterators');\r\nvar $iterCreate = require('./_iter-create');\r\nvar setToStringTag = require('./_set-to-string-tag');\r\nvar getPrototypeOf = require('./_object-gpo');\r\nvar ITERATOR = require('./_wks')('iterator');\r\nvar BUGGY = !([].keys && 'next' in [].keys()); // Safari has buggy iterators w/o `next`\r\nvar FF_ITERATOR = '@@iterator';\r\nvar KEYS = 'keys';\r\nvar VALUES = 'values';\r\n\r\nvar returnThis = function () { return this; };\r\n\r\nmodule.exports = function (Base, NAME, Constructor, next, DEFAULT, IS_SET, FORCED) {\r\n  $iterCreate(Constructor, NAME, next);\r\n  var getMethod = function (kind) {\r\n    if (!BUGGY && kind in proto) return proto[kind];\r\n    switch (kind) {\r\n      case KEYS: return function keys() { return new Constructor(this, kind); };\r\n      case VALUES: return function values() { return new Constructor(this, kind); };\r\n    } return function entries() { return new Constructor(this, kind); };\r\n  };\r\n  var TAG = NAME + ' Iterator';\r\n  var DEF_VALUES = DEFAULT == VALUES;\r\n  var VALUES_BUG = false;\r\n  var proto = Base.prototype;\r\n  var $native = proto[ITERATOR] || proto[FF_ITERATOR] || DEFAULT && proto[DEFAULT];\r\n  var $default = $native || getMethod(DEFAULT);\r\n  var $entries = DEFAULT ? !DEF_VALUES ? $default : getMethod('entries') : undefined;\r\n  var $anyNative = NAME == 'Array' ? proto.entries || $native : $native;\r\n  var methods, key, IteratorPrototype;\r\n  // Fix native\r\n  if ($anyNative) {\r\n    IteratorPrototype = getPrototypeOf($anyNative.call(new Base()));\r\n    if (IteratorPrototype !== Object.prototype && IteratorPrototype.next) {\r\n      // Set @@toStringTag to native iterators\r\n      setToStringTag(IteratorPrototype, TAG, true);\r\n      // fix for some old engines\r\n      if (!LIBRARY && typeof IteratorPrototype[ITERATOR] != 'function') hide(IteratorPrototype, ITERATOR, returnThis);\r\n    }\r\n  }\r\n  // fix Array#{values, @@iterator}.name in V8 / FF\r\n  if (DEF_VALUES && $native && $native.name !== VALUES) {\r\n    VALUES_BUG = true;\r\n    $default = function values() { return $native.call(this); };\r\n  }\r\n  // Define iterator\r\n  if ((!LIBRARY || FORCED) && (BUGGY || VALUES_BUG || !proto[ITERATOR])) {\r\n    hide(proto, ITERATOR, $default);\r\n  }\r\n  // Plug for library\r\n  Iterators[NAME] = $default;\r\n  Iterators[TAG] = returnThis;\r\n  if (DEFAULT) {\r\n    methods = {\r\n      values: DEF_VALUES ? $default : getMethod(VALUES),\r\n      keys: IS_SET ? $default : getMethod(KEYS),\r\n      entries: $entries\r\n    };\r\n    if (FORCED) for (key in methods) {\r\n      if (!(key in proto)) redefine(proto, key, methods[key]);\r\n    } else $export($export.P + $export.F * (BUGGY || VALUES_BUG), NAME, methods);\r\n  }\r\n  return methods;\r\n};\r\n","var metadata = require('./_metadata');\r\nvar anObject = require('./_an-object');\r\nvar ordinaryGetOwnMetadata = metadata.get;\r\nvar toMetaKey = metadata.key;\r\n\r\nmetadata.exp({ getOwnMetadata: function getOwnMetadata(metadataKey, target /* , targetKey */) {\r\n  return ordinaryGetOwnMetadata(metadataKey, anObject(target)\r\n    , arguments.length < 3 ? undefined : toMetaKey(arguments[2]));\r\n} });\r\n","// 0 -> Array#forEach\r\n// 1 -> Array#map\r\n// 2 -> Array#filter\r\n// 3 -> Array#some\r\n// 4 -> Array#every\r\n// 5 -> Array#find\r\n// 6 -> Array#findIndex\r\nvar ctx = require('./_ctx');\r\nvar IObject = require('./_iobject');\r\nvar toObject = require('./_to-object');\r\nvar toLength = require('./_to-length');\r\nvar asc = require('./_array-species-create');\r\nmodule.exports = function (TYPE, $create) {\r\n  var IS_MAP = TYPE == 1;\r\n  var IS_FILTER = TYPE == 2;\r\n  var IS_SOME = TYPE == 3;\r\n  var IS_EVERY = TYPE == 4;\r\n  var IS_FIND_INDEX = TYPE == 6;\r\n  var NO_HOLES = TYPE == 5 || IS_FIND_INDEX;\r\n  var create = $create || asc;\r\n  return function ($this, callbackfn, that) {\r\n    var O = toObject($this);\r\n    var self = IObject(O);\r\n    var f = ctx(callbackfn, that, 3);\r\n    var length = toLength(self.length);\r\n    var index = 0;\r\n    var result = IS_MAP ? create($this, length) : IS_FILTER ? create($this, 0) : undefined;\r\n    var val, res;\r\n    for (;length > index; index++) if (NO_HOLES || index in self) {\r\n      val = self[index];\r\n      res = f(val, index, O);\r\n      if (TYPE) {\r\n        if (IS_MAP) result[index] = res;   // map\r\n        else if (res) switch (TYPE) {\r\n          case 3: return true;             // some\r\n          case 5: return val;              // find\r\n          case 6: return index;            // findIndex\r\n          case 2: result.push(val);        // filter\r\n        } else if (IS_EVERY) return false; // every\r\n      }\r\n    }\r\n    return IS_FIND_INDEX ? -1 : IS_SOME || IS_EVERY ? IS_EVERY : result;\r\n  };\r\n};\r\n","// 19.1.2.14 / 15.2.3.14 Object.keys(O)\r\nvar $keys = require('./_object-keys-internal');\r\nvar enumBugKeys = require('./_enum-bug-keys');\r\n\r\nmodule.exports = Object.keys || function keys(O) {\r\n  return $keys(O, enumBugKeys);\r\n};\r\n","'use strict';\r\nvar global = require('./_global');\r\nvar each = require('./_array-methods')(0);\r\nvar redefine = require('./_redefine');\r\nvar meta = require('./_meta');\r\nvar assign = require('./_object-assign');\r\nvar weak = require('./_collection-weak');\r\nvar isObject = require('./_is-object');\r\nvar validate = require('./_validate-collection');\r\nvar NATIVE_WEAK_MAP = require('./_validate-collection');\r\nvar IS_IE11 = !global.ActiveXObject && 'ActiveXObject' in global;\r\nvar WEAK_MAP = 'WeakMap';\r\nvar getWeak = meta.getWeak;\r\nvar isExtensible = Object.isExtensible;\r\nvar uncaughtFrozenStore = weak.ufstore;\r\nvar InternalMap;\r\n\r\nvar wrapper = function (get) {\r\n  return function WeakMap() {\r\n    return get(this, arguments.length > 0 ? arguments[0] : undefined);\r\n  };\r\n};\r\n\r\nvar methods = {\r\n  // 23.3.3.3 WeakMap.prototype.get(key)\r\n  get: function get(key) {\r\n    if (isObject(key)) {\r\n      var data = getWeak(key);\r\n      if (data === true) return uncaughtFrozenStore(validate(this, WEAK_MAP)).get(key);\r\n      return data ? data[this._i] : undefined;\r\n    }\r\n  },\r\n  // 23.3.3.5 WeakMap.prototype.set(key, value)\r\n  set: function set(key, value) {\r\n    return weak.def(validate(this, WEAK_MAP), key, value);\r\n  }\r\n};\r\n\r\n// 23.3 WeakMap Objects\r\nvar $WeakMap = module.exports = require('./_collection')(WEAK_MAP, wrapper, methods, weak, true, true);\r\n\r\n// IE11 WeakMap frozen keys fix\r\nif (NATIVE_WEAK_MAP && IS_IE11) {\r\n  InternalMap = weak.getConstructor(wrapper, WEAK_MAP);\r\n  assign(InternalMap.prototype, methods);\r\n  meta.NEED = true;\r\n  each(['delete', 'has', 'get', 'set'], function (key) {\r\n    var proto = $WeakMap.prototype;\r\n    var method = proto[key];\r\n    redefine(proto, key, function (a, b) {\r\n      // store frozen objects on internal weakmap shim\r\n      if (isObject(a) && !isExtensible(a)) {\r\n        if (!this._f) this._f = new InternalMap();\r\n        var result = this._f[key](a, b);\r\n        return key == 'set' ? this : result;\r\n      // store all the rest on native weakmap\r\n      } return method.call(this, a, b);\r\n    });\r\n  });\r\n}\r\n","// 7.2.2 IsArray(argument)\r\nvar cof = require('./_cof');\r\nmodule.exports = Array.isArray || function isArray(arg) {\r\n  return cof(arg) == 'Array';\r\n};\r\n","var pIE = require('./_object-pie');\r\nvar createDesc = require('./_property-desc');\r\nvar toIObject = require('./_to-iobject');\r\nvar toPrimitive = require('./_to-primitive');\r\nvar has = require('./_has');\r\nvar IE8_DOM_DEFINE = require('./_ie8-dom-define');\r\nvar gOPD = Object.getOwnPropertyDescriptor;\r\n\r\nexports.f = require('./_descriptors') ? gOPD : function getOwnPropertyDescriptor(O, P) {\r\n  O = toIObject(O);\r\n  P = toPrimitive(P, true);\r\n  if (IE8_DOM_DEFINE) try {\r\n    return gOPD(O, P);\r\n  } catch (e) { /* empty */ }\r\n  if (has(O, P)) return createDesc(!pIE.f.call(O, P), O[P]);\r\n};\r\n","var dP = require('./_object-dp');\r\nvar anObject = require('./_an-object');\r\nvar getKeys = require('./_object-keys');\r\n\r\nmodule.exports = require('./_descriptors') ? Object.defineProperties : function defineProperties(O, Properties) {\r\n  anObject(O);\r\n  var keys = getKeys(Properties);\r\n  var length = keys.length;\r\n  var i = 0;\r\n  var P;\r\n  while (length > i) dP.f(O, P = keys[i++], Properties[P]);\r\n  return O;\r\n};\r\n","require('../modules/es7.reflect.define-metadata');\r\nrequire('../modules/es7.reflect.delete-metadata');\r\nrequire('../modules/es7.reflect.get-metadata');\r\nrequire('../modules/es7.reflect.get-metadata-keys');\r\nrequire('../modules/es7.reflect.get-own-metadata');\r\nrequire('../modules/es7.reflect.get-own-metadata-keys');\r\nrequire('../modules/es7.reflect.has-metadata');\r\nrequire('../modules/es7.reflect.has-own-metadata');\r\nrequire('../modules/es7.reflect.metadata');\r\nmodule.exports = require('../modules/_core').Reflect;\r\n","// call something on iterator step with safe closing on error\r\nvar anObject = require('./_an-object');\r\nmodule.exports = function (iterator, fn, value, entries) {\r\n  try {\r\n    return entries ? fn(anObject(value)[0], value[1]) : fn(value);\r\n  // 7.4.6 IteratorClose(iterator, completion)\r\n  } catch (e) {\r\n    var ret = iterator['return'];\r\n    if (ret !== undefined) anObject(ret.call(iterator));\r\n    throw e;\r\n  }\r\n};\r\n","// getting tag from 19.1.3.6 Object.prototype.toString()\r\nvar cof = require('./_cof');\r\nvar TAG = require('./_wks')('toStringTag');\r\n// ES3 wrong here\r\nvar ARG = cof(function () { return arguments; }()) == 'Arguments';\r\n\r\n// fallback for IE11 Script Access Denied error\r\nvar tryGet = function (it, key) {\r\n  try {\r\n    return it[key];\r\n  } catch (e) { /* empty */ }\r\n};\r\n\r\nmodule.exports = function (it) {\r\n  var O, T, B;\r\n  return it === undefined ? 'Undefined' : it === null ? 'Null'\r\n    // @@toStringTag case\r\n    : typeof (T = tryGet(O = Object(it), TAG)) == 'string' ? T\r\n    // builtinTag case\r\n    : ARG ? cof(O)\r\n    // ES3 arguments fallback\r\n    : (B = cof(O)) == 'Object' && typeof O.callee == 'function' ? 'Arguments' : B;\r\n};\r\n","var isObject = require('./_is-object');\r\nvar document = require('./_global').document;\r\n// typeof document.createElement is 'object' in old IE\r\nvar is = isObject(document) && isObject(document.createElement);\r\nmodule.exports = function (it) {\r\n  return is ? document.createElement(it) : {};\r\n};\r\n","var classof = require('./_classof');\r\nvar ITERATOR = require('./_wks')('iterator');\r\nvar Iterators = require('./_iterators');\r\nmodule.exports = require('./_core').getIteratorMethod = function (it) {\r\n  if (it != undefined) return it[ITERATOR]\r\n    || it['@@iterator']\r\n    || Iterators[classof(it)];\r\n};\r\n","exports.f = Object.getOwnPropertySymbols;\r\n","var store = require('./_shared')('wks');\r\nvar uid = require('./_uid');\r\nvar Symbol = require('./_global').Symbol;\r\nvar USE_SYMBOL = typeof Symbol == 'function';\r\n\r\nvar $exports = module.exports = function (name) {\r\n  return store[name] || (store[name] =\r\n    USE_SYMBOL && Symbol[name] || (USE_SYMBOL ? Symbol : uid)('Symbol.' + name));\r\n};\r\n\r\n$exports.store = store;\r\n","var global = require('./_global');\r\nvar hide = require('./_hide');\r\nvar has = require('./_has');\r\nvar SRC = require('./_uid')('src');\r\nvar $toString = require('./_function-to-string');\r\nvar TO_STRING = 'toString';\r\nvar TPL = ('' + $toString).split(TO_STRING);\r\n\r\nrequire('./_core').inspectSource = function (it) {\r\n  return $toString.call(it);\r\n};\r\n\r\n(module.exports = function (O, key, val, safe) {\r\n  var isFunction = typeof val == 'function';\r\n  if (isFunction) has(val, 'name') || hide(val, 'name', key);\r\n  if (O[key] === val) return;\r\n  if (isFunction) has(val, SRC) || hide(val, SRC, O[key] ? '' + O[key] : TPL.join(String(key)));\r\n  if (O === global) {\r\n    O[key] = val;\r\n  } else if (!safe) {\r\n    delete O[key];\r\n    hide(O, key, val);\r\n  } else if (O[key]) {\r\n    O[key] = val;\r\n  } else {\r\n    hide(O, key, val);\r\n  }\r\n// add fake Function#toString for correct work wrapped methods / constructors with methods like LoDash isNative\r\n})(Function.prototype, TO_STRING, function toString() {\r\n  return typeof this == 'function' && this[SRC] || $toString.call(this);\r\n});\r\n","// 19.1.2.2 / 15.2.3.5 Object.create(O [, Properties])\r\nvar anObject = require('./_an-object');\r\nvar dPs = require('./_object-dps');\r\nvar enumBugKeys = require('./_enum-bug-keys');\r\nvar IE_PROTO = require('./_shared-key')('IE_PROTO');\r\nvar Empty = function () { /* empty */ };\r\nvar PROTOTYPE = 'prototype';\r\n\r\n// Create object with fake `null` prototype: use iframe Object with cleared prototype\r\nvar createDict = function () {\r\n  // Thrash, waste and sodomy: IE GC bug\r\n  var iframe = require('./_dom-create')('iframe');\r\n  var i = enumBugKeys.length;\r\n  var lt = '<';\r\n  var gt = '>';\r\n  var iframeDocument;\r\n  iframe.style.display = 'none';\r\n  require('./_html').appendChild(iframe);\r\n  iframe.src = 'javascript:'; // eslint-disable-line no-script-url\r\n  // createDict = iframe.contentWindow.Object;\r\n  // html.removeChild(iframe);\r\n  iframeDocument = iframe.contentWindow.document;\r\n  iframeDocument.open();\r\n  iframeDocument.write(lt + 'script' + gt + 'document.F=Object' + lt + '/script' + gt);\r\n  iframeDocument.close();\r\n  createDict = iframeDocument.F;\r\n  while (i--) delete createDict[PROTOTYPE][enumBugKeys[i]];\r\n  return createDict();\r\n};\r\n\r\nmodule.exports = Object.create || function create(O, Properties) {\r\n  var result;\r\n  if (O !== null) {\r\n    Empty[PROTOTYPE] = anObject(O);\r\n    result = new Empty();\r\n    Empty[PROTOTYPE] = null;\r\n    // add \"__proto__\" for Object.getPrototypeOf polyfill\r\n    result[IE_PROTO] = O;\r\n  } else result = createDict();\r\n  return Properties === undefined ? result : dPs(result, Properties);\r\n};\r\n","module.exports = false;\r\n","var toString = {}.toString;\r\n\r\nmodule.exports = function (it) {\r\n  return toString.call(it).slice(8, -1);\r\n};\r\n","// check on default Array iterator\r\nvar Iterators = require('./_iterators');\r\nvar ITERATOR = require('./_wks')('iterator');\r\nvar ArrayProto = Array.prototype;\r\n\r\nmodule.exports = function (it) {\r\n  return it !== undefined && (Iterators.Array === it || ArrayProto[ITERATOR] === it);\r\n};\r\n","var dP = require('./_object-dp');\r\nvar createDesc = require('./_property-desc');\r\nmodule.exports = require('./_descriptors') ? function (object, key, value) {\r\n  return dP.f(object, key, createDesc(1, value));\r\n} : function (object, key, value) {\r\n  object[key] = value;\r\n  return object;\r\n};\r\n","var Map = require('./es6.map');\r\nvar $export = require('./_export');\r\nvar shared = require('./_shared')('metadata');\r\nvar store = shared.store || (shared.store = new (require('./es6.weak-map'))());\r\n\r\nvar getOrCreateMetadataMap = function (target, targetKey, create) {\r\n  var targetMetadata = store.get(target);\r\n  if (!targetMetadata) {\r\n    if (!create) return undefined;\r\n    store.set(target, targetMetadata = new Map());\r\n  }\r\n  var keyMetadata = targetMetadata.get(targetKey);\r\n  if (!keyMetadata) {\r\n    if (!create) return undefined;\r\n    targetMetadata.set(targetKey, keyMetadata = new Map());\r\n  } return keyMetadata;\r\n};\r\nvar ordinaryHasOwnMetadata = function (MetadataKey, O, P) {\r\n  var metadataMap = getOrCreateMetadataMap(O, P, false);\r\n  return metadataMap === undefined ? false : metadataMap.has(MetadataKey);\r\n};\r\nvar ordinaryGetOwnMetadata = function (MetadataKey, O, P) {\r\n  var metadataMap = getOrCreateMetadataMap(O, P, false);\r\n  return metadataMap === undefined ? undefined : metadataMap.get(MetadataKey);\r\n};\r\nvar ordinaryDefineOwnMetadata = function (MetadataKey, MetadataValue, O, P) {\r\n  getOrCreateMetadataMap(O, P, true).set(MetadataKey, MetadataValue);\r\n};\r\nvar ordinaryOwnMetadataKeys = function (target, targetKey) {\r\n  var metadataMap = getOrCreateMetadataMap(target, targetKey, false);\r\n  var keys = [];\r\n  if (metadataMap) metadataMap.forEach(function (_, key) { keys.push(key); });\r\n  return keys;\r\n};\r\nvar toMetaKey = function (it) {\r\n  return it === undefined || typeof it == 'symbol' ? it : String(it);\r\n};\r\nvar exp = function (O) {\r\n  $export($export.S, 'Reflect', O);\r\n};\r\n\r\nmodule.exports = {\r\n  store: store,\r\n  map: getOrCreateMetadataMap,\r\n  has: ordinaryHasOwnMetadata,\r\n  get: ordinaryGetOwnMetadata,\r\n  set: ordinaryDefineOwnMetadata,\r\n  keys: ordinaryOwnMetadataKeys,\r\n  key: toMetaKey,\r\n  exp: exp\r\n};\r\n","// 19.1.2.9 / 15.2.3.2 Object.getPrototypeOf(O)\r\nvar has = require('./_has');\r\nvar toObject = require('./_to-object');\r\nvar IE_PROTO = require('./_shared-key')('IE_PROTO');\r\nvar ObjectProto = Object.prototype;\r\n\r\nmodule.exports = Object.getPrototypeOf || function (O) {\r\n  O = toObject(O);\r\n  if (has(O, IE_PROTO)) return O[IE_PROTO];\r\n  if (typeof O.constructor == 'function' && O instanceof O.constructor) {\r\n    return O.constructor.prototype;\r\n  } return O instanceof Object ? ObjectProto : null;\r\n};\r\n","var $metadata = require('./_metadata');\r\nvar anObject = require('./_an-object');\r\nvar aFunction = require('./_a-function');\r\nvar toMetaKey = $metadata.key;\r\nvar ordinaryDefineOwnMetadata = $metadata.set;\r\n\r\n$metadata.exp({ metadata: function metadata(metadataKey, metadataValue) {\r\n  return function decorator(target, targetKey) {\r\n    ordinaryDefineOwnMetadata(\r\n      metadataKey, metadataValue,\r\n      (targetKey !== undefined ? anObject : aFunction)(target),\r\n      toMetaKey(targetKey)\r\n    );\r\n  };\r\n} });\r\n","var forOf = require('./_for-of');\r\n\r\nmodule.exports = function (iter, ITERATOR) {\r\n  var result = [];\r\n  forOf(iter, false, result.push, result, ITERATOR);\r\n  return result;\r\n};\r\n","'use strict';\r\nvar create = require('./_object-create');\r\nvar descriptor = require('./_property-desc');\r\nvar setToStringTag = require('./_set-to-string-tag');\r\nvar IteratorPrototype = {};\r\n\r\n// 25.1.2.1.1 %IteratorPrototype%[@@iterator]()\r\nrequire('./_hide')(IteratorPrototype, require('./_wks')('iterator'), function () { return this; });\r\n\r\nmodule.exports = function (Constructor, NAME, next) {\r\n  Constructor.prototype = create(IteratorPrototype, { next: descriptor(1, next) });\r\n  setToStringTag(Constructor, NAME + ' Iterator');\r\n};\r\n","// 7.1.4 ToInteger\r\nvar ceil = Math.ceil;\r\nvar floor = Math.floor;\r\nmodule.exports = function (it) {\r\n  return isNaN(it = +it) ? 0 : (it > 0 ? floor : ceil)(it);\r\n};\r\n","module.exports = function (bitmap, value) {\r\n  return {\r\n    enumerable: !(bitmap & 1),\r\n    configurable: !(bitmap & 2),\r\n    writable: !(bitmap & 4),\r\n    value: value\r\n  };\r\n};\r\n","// 7.1.13 ToObject(argument)\r\nvar defined = require('./_defined');\r\nmodule.exports = function (it) {\r\n  return Object(defined(it));\r\n};\r\n","var ctx = require('./_ctx');\r\nvar call = require('./_iter-call');\r\nvar isArrayIter = require('./_is-array-iter');\r\nvar anObject = require('./_an-object');\r\nvar toLength = require('./_to-length');\r\nvar getIterFn = require('./core.get-iterator-method');\r\nvar BREAK = {};\r\nvar RETURN = {};\r\nvar exports = module.exports = function (iterable, entries, fn, that, ITERATOR) {\r\n  var iterFn = ITERATOR ? function () { return iterable; } : getIterFn(iterable);\r\n  var f = ctx(fn, that, entries ? 2 : 1);\r\n  var index = 0;\r\n  var length, step, iterator, result;\r\n  if (typeof iterFn != 'function') throw TypeError(iterable + ' is not iterable!');\r\n  // fast case for arrays with default iterator\r\n  if (isArrayIter(iterFn)) for (length = toLength(iterable.length); length > index; index++) {\r\n    result = entries ? f(anObject(step = iterable[index])[0], step[1]) : f(iterable[index]);\r\n    if (result === BREAK || result === RETURN) return result;\r\n  } else for (iterator = iterFn.call(iterable); !(step = iterator.next()).done;) {\r\n    result = call(iterator, f, step.value, entries);\r\n    if (result === BREAK || result === RETURN) return result;\r\n  }\r\n};\r\nexports.BREAK = BREAK;\r\nexports.RETURN = RETURN;\r\n","'use strict';\r\nvar strong = require('./_collection-strong');\r\nvar validate = require('./_validate-collection');\r\nvar SET = 'Set';\r\n\r\n// 23.2 Set Objects\r\nmodule.exports = require('./_collection')(SET, function (get) {\r\n  return function Set() { return get(this, arguments.length > 0 ? arguments[0] : undefined); };\r\n}, {\r\n  // 23.2.3.1 Set.prototype.add(value)\r\n  add: function add(value) {\r\n    return strong.def(validate(this, SET), value = value === 0 ? 0 : value, value);\r\n  }\r\n}, strong);\r\n","exports.f = {}.propertyIsEnumerable;\r\n","var core = require('./_core');\r\nvar global = require('./_global');\r\nvar SHARED = '__core-js_shared__';\r\nvar store = global[SHARED] || (global[SHARED] = {});\r\n\r\n(module.exports = function (key, value) {\r\n  return store[key] || (store[key] = value !== undefined ? value : {});\r\n})('versions', []).push({\r\n  version: core.version,\r\n  mode: require('./_library') ? 'pure' : 'global',\r\n  copyright: '© 2019 Denis Pushkarev (zloirock.ru)'\r\n});\r\n","var global = require('./_global');\r\nvar core = require('./_core');\r\nvar hide = require('./_hide');\r\nvar redefine = require('./_redefine');\r\nvar ctx = require('./_ctx');\r\nvar PROTOTYPE = 'prototype';\r\n\r\nvar $export = function (type, name, source) {\r\n  var IS_FORCED = type & $export.F;\r\n  var IS_GLOBAL = type & $export.G;\r\n  var IS_STATIC = type & $export.S;\r\n  var IS_PROTO = type & $export.P;\r\n  var IS_BIND = type & $export.B;\r\n  var target = IS_GLOBAL ? global : IS_STATIC ? global[name] || (global[name] = {}) : (global[name] || {})[PROTOTYPE];\r\n  var exports = IS_GLOBAL ? core : core[name] || (core[name] = {});\r\n  var expProto = exports[PROTOTYPE] || (exports[PROTOTYPE] = {});\r\n  var key, own, out, exp;\r\n  if (IS_GLOBAL) source = name;\r\n  for (key in source) {\r\n    // contains in native\r\n    own = !IS_FORCED && target && target[key] !== undefined;\r\n    // export native or passed\r\n    out = (own ? target : source)[key];\r\n    // bind timers to global for call from export context\r\n    exp = IS_BIND && own ? ctx(out, global) : IS_PROTO && typeof out == 'function' ? ctx(Function.call, out) : out;\r\n    // extend global\r\n    if (target) redefine(target, key, out, type & $export.U);\r\n    // export\r\n    if (exports[key] != out) hide(exports, key, exp);\r\n    if (IS_PROTO && expProto[key] != out) expProto[key] = out;\r\n  }\r\n};\r\nglobal.core = core;\r\n// type bitmap\r\n$export.F = 1;   // forced\r\n$export.G = 2;   // global\r\n$export.S = 4;   // static\r\n$export.P = 8;   // proto\r\n$export.B = 16;  // bind\r\n$export.W = 32;  // wrap\r\n$export.U = 64;  // safe\r\n$export.R = 128; // real proto method for `library`\r\nmodule.exports = $export;\r\n","var ITERATOR = require('./_wks')('iterator');\r\nvar SAFE_CLOSING = false;\r\n\r\ntry {\r\n  var riter = [7][ITERATOR]();\r\n  riter['return'] = function () { SAFE_CLOSING = true; };\r\n  // eslint-disable-next-line no-throw-literal\r\n  Array.from(riter, function () { throw 2; });\r\n} catch (e) { /* empty */ }\r\n\r\nmodule.exports = function (exec, skipClosing) {\r\n  if (!skipClosing && !SAFE_CLOSING) return false;\r\n  var safe = false;\r\n  try {\r\n    var arr = [7];\r\n    var iter = arr[ITERATOR]();\r\n    iter.next = function () { return { done: safe = true }; };\r\n    arr[ITERATOR] = function () { return iter; };\r\n    exec(arr);\r\n  } catch (e) { /* empty */ }\r\n  return safe;\r\n};\r\n","var isObject = require('./_is-object');\r\nvar setPrototypeOf = require('./_set-proto').set;\r\nmodule.exports = function (that, target, C) {\r\n  var S = target.constructor;\r\n  var P;\r\n  if (S !== C && typeof S == 'function' && (P = S.prototype) !== C.prototype && isObject(P) && setPrototypeOf) {\r\n    setPrototypeOf(that, P);\r\n  } return that;\r\n};\r\n","var shared = require('./_shared')('keys');\r\nvar uid = require('./_uid');\r\nmodule.exports = function (key) {\r\n  return shared[key] || (shared[key] = uid(key));\r\n};\r\n","// fallback for non-array-like ES3 and non-enumerable old V8 strings\r\nvar cof = require('./_cof');\r\n// eslint-disable-next-line no-prototype-builtins\r\nmodule.exports = Object('z').propertyIsEnumerable(0) ? Object : function (it) {\r\n  return cof(it) == 'String' ? it.split('') : Object(it);\r\n};\r\n","var META = require('./_uid')('meta');\r\nvar isObject = require('./_is-object');\r\nvar has = require('./_has');\r\nvar setDesc = require('./_object-dp').f;\r\nvar id = 0;\r\nvar isExtensible = Object.isExtensible || function () {\r\n  return true;\r\n};\r\nvar FREEZE = !require('./_fails')(function () {\r\n  return isExtensible(Object.preventExtensions({}));\r\n});\r\nvar setMeta = function (it) {\r\n  setDesc(it, META, { value: {\r\n    i: 'O' + ++id, // object ID\r\n    w: {}          // weak collections IDs\r\n  } });\r\n};\r\nvar fastKey = function (it, create) {\r\n  // return primitive with prefix\r\n  if (!isObject(it)) return typeof it == 'symbol' ? it : (typeof it == 'string' ? 'S' : 'P') + it;\r\n  if (!has(it, META)) {\r\n    // can't set metadata to uncaught frozen object\r\n    if (!isExtensible(it)) return 'F';\r\n    // not necessary to add metadata\r\n    if (!create) return 'E';\r\n    // add missing metadata\r\n    setMeta(it);\r\n  // return object ID\r\n  } return it[META].i;\r\n};\r\nvar getWeak = function (it, create) {\r\n  if (!has(it, META)) {\r\n    // can't set metadata to uncaught frozen object\r\n    if (!isExtensible(it)) return true;\r\n    // not necessary to add metadata\r\n    if (!create) return false;\r\n    // add missing metadata\r\n    setMeta(it);\r\n  // return hash weak collections IDs\r\n  } return it[META].w;\r\n};\r\n// add metadata on freeze-family methods calling\r\nvar onFreeze = function (it) {\r\n  if (FREEZE && meta.NEED && isExtensible(it) && !has(it, META)) setMeta(it);\r\n  return it;\r\n};\r\nvar meta = module.exports = {\r\n  KEY: META,\r\n  NEED: false,\r\n  fastKey: fastKey,\r\n  getWeak: getWeak,\r\n  onFreeze: onFreeze\r\n};\r\n","'use strict';\r\nvar redefineAll = require('./_redefine-all');\r\nvar getWeak = require('./_meta').getWeak;\r\nvar anObject = require('./_an-object');\r\nvar isObject = require('./_is-object');\r\nvar anInstance = require('./_an-instance');\r\nvar forOf = require('./_for-of');\r\nvar createArrayMethod = require('./_array-methods');\r\nvar $has = require('./_has');\r\nvar validate = require('./_validate-collection');\r\nvar arrayFind = createArrayMethod(5);\r\nvar arrayFindIndex = createArrayMethod(6);\r\nvar id = 0;\r\n\r\n// fallback for uncaught frozen keys\r\nvar uncaughtFrozenStore = function (that) {\r\n  return that._l || (that._l = new UncaughtFrozenStore());\r\n};\r\nvar UncaughtFrozenStore = function () {\r\n  this.a = [];\r\n};\r\nvar findUncaughtFrozen = function (store, key) {\r\n  return arrayFind(store.a, function (it) {\r\n    return it[0] === key;\r\n  });\r\n};\r\nUncaughtFrozenStore.prototype = {\r\n  get: function (key) {\r\n    var entry = findUncaughtFrozen(this, key);\r\n    if (entry) return entry[1];\r\n  },\r\n  has: function (key) {\r\n    return !!findUncaughtFrozen(this, key);\r\n  },\r\n  set: function (key, value) {\r\n    var entry = findUncaughtFrozen(this, key);\r\n    if (entry) entry[1] = value;\r\n    else this.a.push([key, value]);\r\n  },\r\n  'delete': function (key) {\r\n    var index = arrayFindIndex(this.a, function (it) {\r\n      return it[0] === key;\r\n    });\r\n    if (~index) this.a.splice(index, 1);\r\n    return !!~index;\r\n  }\r\n};\r\n\r\nmodule.exports = {\r\n  getConstructor: function (wrapper, NAME, IS_MAP, ADDER) {\r\n    var C = wrapper(function (that, iterable) {\r\n      anInstance(that, C, NAME, '_i');\r\n      that._t = NAME;      // collection type\r\n      that._i = id++;      // collection id\r\n      that._l = undefined; // leak store for uncaught frozen objects\r\n      if (iterable != undefined) forOf(iterable, IS_MAP, that[ADDER], that);\r\n    });\r\n    redefineAll(C.prototype, {\r\n      // 23.3.3.2 WeakMap.prototype.delete(key)\r\n      // 23.4.3.3 WeakSet.prototype.delete(value)\r\n      'delete': function (key) {\r\n        if (!isObject(key)) return false;\r\n        var data = getWeak(key);\r\n        if (data === true) return uncaughtFrozenStore(validate(this, NAME))['delete'](key);\r\n        return data && $has(data, this._i) && delete data[this._i];\r\n      },\r\n      // 23.3.3.4 WeakMap.prototype.has(key)\r\n      // 23.4.3.4 WeakSet.prototype.has(value)\r\n      has: function has(key) {\r\n        if (!isObject(key)) return false;\r\n        var data = getWeak(key);\r\n        if (data === true) return uncaughtFrozenStore(validate(this, NAME)).has(key);\r\n        return data && $has(data, this._i);\r\n      }\r\n    });\r\n    return C;\r\n  },\r\n  def: function (that, key, value) {\r\n    var data = getWeak(anObject(key), true);\r\n    if (data === true) uncaughtFrozenStore(that).set(key, value);\r\n    else data[that._i] = value;\r\n    return that;\r\n  },\r\n  ufstore: uncaughtFrozenStore\r\n};\r\n","// to indexed object, toObject with fallback for non-array-like ES3 strings\r\nvar IObject = require('./_iobject');\r\nvar defined = require('./_defined');\r\nmodule.exports = function (it) {\r\n  return IObject(defined(it));\r\n};\r\n","var hasOwnProperty = {}.hasOwnProperty;\r\nmodule.exports = function (it, key) {\r\n  return hasOwnProperty.call(it, key);\r\n};\r\n","// 7.1.1 ToPrimitive(input [, PreferredType])\r\nvar isObject = require('./_is-object');\r\n// instead of the ES6 spec version, we didn't implement @@toPrimitive case\r\n// and the second argument - flag - preferred type is a string\r\nmodule.exports = function (it, S) {\r\n  if (!isObject(it)) return it;\r\n  var fn, val;\r\n  if (S && typeof (fn = it.toString) == 'function' && !isObject(val = fn.call(it))) return val;\r\n  if (typeof (fn = it.valueOf) == 'function' && !isObject(val = fn.call(it))) return val;\r\n  if (!S && typeof (fn = it.toString) == 'function' && !isObject(val = fn.call(it))) return val;\r\n  throw TypeError(\"Can't convert object to primitive value\");\r\n};\r\n","'use strict';\r\n// 19.1.2.1 Object.assign(target, source, ...)\r\nvar DESCRIPTORS = require('./_descriptors');\r\nvar getKeys = require('./_object-keys');\r\nvar gOPS = require('./_object-gops');\r\nvar pIE = require('./_object-pie');\r\nvar toObject = require('./_to-object');\r\nvar IObject = require('./_iobject');\r\nvar $assign = Object.assign;\r\n\r\n// should work with symbols and should have deterministic property order (V8 bug)\r\nmodule.exports = !$assign || require('./_fails')(function () {\r\n  var A = {};\r\n  var B = {};\r\n  // eslint-disable-next-line no-undef\r\n  var S = Symbol();\r\n  var K = 'abcdefghijklmnopqrst';\r\n  A[S] = 7;\r\n  K.split('').forEach(function (k) { B[k] = k; });\r\n  return $assign({}, A)[S] != 7 || Object.keys($assign({}, B)).join('') != K;\r\n}) ? function assign(target, source) { // eslint-disable-line no-unused-vars\r\n  var T = toObject(target);\r\n  var aLen = arguments.length;\r\n  var index = 1;\r\n  var getSymbols = gOPS.f;\r\n  var isEnum = pIE.f;\r\n  while (aLen > index) {\r\n    var S = IObject(arguments[index++]);\r\n    var keys = getSymbols ? getKeys(S).concat(getSymbols(S)) : getKeys(S);\r\n    var length = keys.length;\r\n    var j = 0;\r\n    var key;\r\n    while (length > j) {\r\n      key = keys[j++];\r\n      if (!DESCRIPTORS || isEnum.call(S, key)) T[key] = S[key];\r\n    }\r\n  } return T;\r\n} : $assign;\r\n","var toInteger = require('./_to-integer');\r\nvar max = Math.max;\r\nvar min = Math.min;\r\nmodule.exports = function (index, length) {\r\n  index = toInteger(index);\r\n  return index < 0 ? max(index + length, 0) : min(index, length);\r\n};\r\n","// https://github.com/zloirock/core-js/issues/86#issuecomment-115759028\r\nvar global = module.exports = typeof window != 'undefined' && window.Math == Math\r\n  ? window : typeof self != 'undefined' && self.Math == Math ? self\r\n  // eslint-disable-next-line no-new-func\r\n  : Function('return this')();\r\nif (typeof __g == 'number') __g = global; // eslint-disable-line no-undef\r\n","module.exports = function (exec) {\r\n  try {\r\n    return !!exec();\r\n  } catch (e) {\r\n    return true;\r\n  }\r\n};\r\n","'use strict';\r\nvar global = require('./_global');\r\nvar dP = require('./_object-dp');\r\nvar DESCRIPTORS = require('./_descriptors');\r\nvar SPECIES = require('./_wks')('species');\r\n\r\nmodule.exports = function (KEY) {\r\n  var C = global[KEY];\r\n  if (DESCRIPTORS && C && !C[SPECIES]) dP.f(C, SPECIES, {\r\n    configurable: true,\r\n    get: function () { return this; }\r\n  });\r\n};\r\n","var metadata = require('./_metadata');\r\nvar anObject = require('./_an-object');\r\nvar ordinaryOwnMetadataKeys = metadata.keys;\r\nvar toMetaKey = metadata.key;\r\n\r\nmetadata.exp({ getOwnMetadataKeys: function getOwnMetadataKeys(target /* , targetKey */) {\r\n  return ordinaryOwnMetadataKeys(anObject(target), arguments.length < 2 ? undefined : toMetaKey(arguments[1]));\r\n} });\r\n","var def = require('./_object-dp').f;\r\nvar has = require('./_has');\r\nvar TAG = require('./_wks')('toStringTag');\r\n\r\nmodule.exports = function (it, tag, stat) {\r\n  if (it && !has(it = stat ? it : it.prototype, TAG)) def(it, TAG, { configurable: true, value: tag });\r\n};\r\n","var core = module.exports = { version: '2.6.11' };\r\nif (typeof __e == 'number') __e = core; // eslint-disable-line no-undef\r\n","/**\r\n * This file includes polyfills needed by Angular and is loaded before the app.\r\n * You can add your own extra polyfills to this file.\r\n *\r\n * This file is divided into 2 sections:\r\n *   1. Browser polyfills. These are applied before loading ZoneJS and are sorted by browsers.\r\n *   2. Application imports. Files imported after ZoneJS that should be loaded before your main\r\n *      file.\r\n *\r\n * The current setup is for so-called \"evergreen\" browsers; the last versions of browsers that\r\n * automatically update themselves. This includes Safari >= 10, Chrome >= 55 (including Opera),\r\n * Edge >= 13 on the desktop, and iOS 10 and Chrome on mobile.\r\n *\r\n * Learn more in https://angular.io/docs/ts/latest/guide/browser-support.html\r\n */\r\n\r\n/***************************************************************************************************\r\n * BROWSER POLYFILLS\r\n */\r\n\r\n/** IE9, IE10 and IE11 requires all of the following polyfills. **/\r\n// import 'core-js/es6/symbol';\r\n// import 'core-js/es6/object';\r\n// import 'core-js/es6/function';\r\n// import 'core-js/es6/parse-int';\r\n// import 'core-js/es6/parse-float';\r\n// import 'core-js/es6/number';\r\n// import 'core-js/es6/math';\r\n// import 'core-js/es6/string';\r\n// import 'core-js/es6/date';\r\n// import 'core-js/es6/array';\r\n// import 'core-js/es6/regexp';\r\n// import 'core-js/es6/map';\r\n// import 'core-js/es6/weak-map';\r\n// import 'core-js/es6/set';\r\n\r\n/** IE10 and IE11 requires the following for NgClass support on SVG elements */\r\n// import 'classlist.js';  // Run `npm install --save classlist.js`.\r\n\r\n/** IE10 and IE11 requires the following for the Reflect API. */\r\n// import 'core-js/es6/reflect';\r\n\r\n\r\n/** Evergreen browsers require these. **/\r\n// Used for reflect-metadata in JIT. If you use AOT (and only Angular decorators), you can remove.\r\nimport 'core-js/es7/reflect';\r\n\r\n\r\n/**\r\n * Required to support Web Animations `@angular/platform-browser/animations`.\r\n * Needed for: All but Chrome, Firefox and Opera. http://caniuse.com/#feat=web-animation\r\n **/\r\n// import 'web-animations-js';  // Run `npm install --save web-animations-js`.\r\n\r\n\r\n\r\n/***************************************************************************************************\r\n * Zone JS is required by Angular itself.\r\n */\r\nimport 'zone.js/dist/zone';  // Included with Angular CLI.\r\n\r\n\r\n\r\n/***************************************************************************************************\r\n * APPLICATION IMPORTS\r\n */\r\n\r\n/**\r\n * Date, currency, decimal and percent pipes.\r\n * Needed for: All but Chrome, Firefox, Edge, IE11 and Safari 10\r\n */\r\n// import 'intl';  // Run `npm install --save intl`.\r\n/**\r\n * Need to import at least one locale-data with intl.\r\n */\r\n// import 'intl/locale-data/jsonp/en';\r\nimport '@webcomponents/webcomponentsjs/custom-elements-es5-adapter.js';\r\n","module.exports = {};\r\n","var anObject = require('./_an-object');\r\nvar IE8_DOM_DEFINE = require('./_ie8-dom-define');\r\nvar toPrimitive = require('./_to-primitive');\r\nvar dP = Object.defineProperty;\r\n\r\nexports.f = require('./_descriptors') ? Object.defineProperty : function defineProperty(O, P, Attributes) {\r\n  anObject(O);\r\n  P = toPrimitive(P, true);\r\n  anObject(Attributes);\r\n  if (IE8_DOM_DEFINE) try {\r\n    return dP(O, P, Attributes);\r\n  } catch (e) { /* empty */ }\r\n  if ('get' in Attributes || 'set' in Attributes) throw TypeError('Accessors not supported!');\r\n  if ('value' in Attributes) O[P] = Attributes.value;\r\n  return O;\r\n};\r\n","// Works with __proto__ only. Old v8 can't work with null proto objects.\r\n/* eslint-disable no-proto */\r\nvar isObject = require('./_is-object');\r\nvar anObject = require('./_an-object');\r\nvar check = function (O, proto) {\r\n  anObject(O);\r\n  if (!isObject(proto) && proto !== null) throw TypeError(proto + \": can't set as prototype!\");\r\n};\r\nmodule.exports = {\r\n  set: Object.setPrototypeOf || ('__proto__' in {} ? // eslint-disable-line\r\n    function (test, buggy, set) {\r\n      try {\r\n        set = require('./_ctx')(Function.call, require('./_object-gopd').f(Object.prototype, '__proto__').set, 2);\r\n        set(test, []);\r\n        buggy = !(test instanceof Array);\r\n      } catch (e) { buggy = true; }\r\n      return function setPrototypeOf(O, proto) {\r\n        check(O, proto);\r\n        if (buggy) O.__proto__ = proto;\r\n        else set(O, proto);\r\n        return O;\r\n      };\r\n    }({}, false) : undefined),\r\n  check: check\r\n};\r\n","var metadata = require('./_metadata');\r\nvar anObject = require('./_an-object');\r\nvar getPrototypeOf = require('./_object-gpo');\r\nvar ordinaryHasOwnMetadata = metadata.has;\r\nvar toMetaKey = metadata.key;\r\n\r\nvar ordinaryHasMetadata = function (MetadataKey, O, P) {\r\n  var hasOwn = ordinaryHasOwnMetadata(MetadataKey, O, P);\r\n  if (hasOwn) return true;\r\n  var parent = getPrototypeOf(O);\r\n  return parent !== null ? ordinaryHasMetadata(MetadataKey, parent, P) : false;\r\n};\r\n\r\nmetadata.exp({ hasMetadata: function hasMetadata(metadataKey, target /* , targetKey */) {\r\n  return ordinaryHasMetadata(metadataKey, anObject(target), arguments.length < 3 ? undefined : toMetaKey(arguments[2]));\r\n} });\r\n","// optional / simple context binding\r\nvar aFunction = require('./_a-function');\r\nmodule.exports = function (fn, that, length) {\r\n  aFunction(fn);\r\n  if (that === undefined) return fn;\r\n  switch (length) {\r\n    case 1: return function (a) {\r\n      return fn.call(that, a);\r\n    };\r\n    case 2: return function (a, b) {\r\n      return fn.call(that, a, b);\r\n    };\r\n    case 3: return function (a, b, c) {\r\n      return fn.call(that, a, b, c);\r\n    };\r\n  }\r\n  return function (/* ...args */) {\r\n    return fn.apply(that, arguments);\r\n  };\r\n};\r\n","// 7.1.15 ToLength\r\nvar toInteger = require('./_to-integer');\r\nvar min = Math.min;\r\nmodule.exports = function (it) {\r\n  return it > 0 ? min(toInteger(it), 0x1fffffffffffff) : 0; // pow(2, 53) - 1 == 9007199254740991\r\n};\r\n","// Thank's IE8 for his funny defineProperty\r\nmodule.exports = !require('./_fails')(function () {\r\n  return Object.defineProperty({}, 'a', { get: function () { return 7; } }).a != 7;\r\n});\r\n","/**\r\n* @license Angular v9.1.0-next.4+61.sha-e552591.with-local-changes\r\n* (c) 2010-2020 Google LLC. https://angular.io/\r\n* License: MIT\r\n*/\r\n(function (factory) {\r\n    typeof define === 'function' && define.amd ? define(factory) :\r\n    factory();\r\n}((function () { 'use strict';\r\n\r\n    /**\r\n     * @license\r\n     * Copyright Google Inc. All Rights Reserved.\r\n     *\r\n     * Use of this source code is governed by an MIT-style license that can be\r\n     * found in the LICENSE file at https://angular.io/license\r\n     */\r\n    const Zone$1 = (function (global) {\r\n        const performance = global['performance'];\r\n        function mark(name) { performance && performance['mark'] && performance['mark'](name); }\r\n        function performanceMeasure(name, label) {\r\n            performance && performance['measure'] && performance['measure'](name, label);\r\n        }\r\n        mark('Zone');\r\n        // Initialize before it's accessed below.\r\n        // __Zone_symbol_prefix global can be used to override the default zone\r\n        // symbol prefix with a custom one if needed.\r\n        const symbolPrefix = global['__Zone_symbol_prefix'] || '__zone_symbol__';\r\n        function __symbol__(name) { return symbolPrefix + name; }\r\n        const checkDuplicate = global[__symbol__('forceDuplicateZoneCheck')] === true;\r\n        if (global['Zone']) {\r\n            // if global['Zone'] already exists (maybe zone.js was already loaded or\r\n            // some other lib also registered a global object named Zone), we may need\r\n            // to throw an error, but sometimes user may not want this error.\r\n            // For example,\r\n            // we have two web pages, page1 includes zone.js, page2 doesn't.\r\n            // and the 1st time user load page1 and page2, everything work fine,\r\n            // but when user load page2 again, error occurs because global['Zone'] already exists.\r\n            // so we add a flag to let user choose whether to throw this error or not.\r\n            // By default, if existing Zone is from zone.js, we will not throw the error.\r\n            if (checkDuplicate || typeof global['Zone'].__symbol__ !== 'function') {\r\n                throw new Error('Zone already loaded.');\r\n            }\r\n            else {\r\n                return global['Zone'];\r\n            }\r\n        }\r\n        class Zone {\r\n            constructor(parent, zoneSpec) {\r\n                this._parent = parent;\r\n                this._name = zoneSpec ? zoneSpec.name || 'unnamed' : '<root>';\r\n                this._properties = zoneSpec && zoneSpec.properties || {};\r\n                this._zoneDelegate =\r\n                    new ZoneDelegate(this, this._parent && this._parent._zoneDelegate, zoneSpec);\r\n            }\r\n            static assertZonePatched() {\r\n                if (global['Promise'] !== patches['ZoneAwarePromise']) {\r\n                    throw new Error('Zone.js has detected that ZoneAwarePromise `(window|global).Promise` ' +\r\n                        'has been overwritten.\\n' +\r\n                        'Most likely cause is that a Promise polyfill has been loaded ' +\r\n                        'after Zone.js (Polyfilling Promise api is not necessary when zone.js is loaded. ' +\r\n                        'If you must load one, do so before loading zone.js.)');\r\n                }\r\n            }\r\n            static get root() {\r\n                let zone = Zone.current;\r\n                while (zone.parent) {\r\n                    zone = zone.parent;\r\n                }\r\n                return zone;\r\n            }\r\n            static get current() { return _currentZoneFrame.zone; }\r\n            static get currentTask() { return _currentTask; }\r\n            // tslint:disable-next-line:require-internal-with-underscore\r\n            static __load_patch(name, fn) {\r\n                if (patches.hasOwnProperty(name)) {\r\n                    if (checkDuplicate) {\r\n                        throw Error('Already loaded patch: ' + name);\r\n                    }\r\n                }\r\n                else if (!global['__Zone_disable_' + name]) {\r\n                    const perfName = 'Zone:' + name;\r\n                    mark(perfName);\r\n                    patches[name] = fn(global, Zone, _api);\r\n                    performanceMeasure(perfName, perfName);\r\n                }\r\n            }\r\n            get parent() { return this._parent; }\r\n            get name() { return this._name; }\r\n            get(key) {\r\n                const zone = this.getZoneWith(key);\r\n                if (zone)\r\n                    return zone._properties[key];\r\n            }\r\n            getZoneWith(key) {\r\n                let current = this;\r\n                while (current) {\r\n                    if (current._properties.hasOwnProperty(key)) {\r\n                        return current;\r\n                    }\r\n                    current = current._parent;\r\n                }\r\n                return null;\r\n            }\r\n            fork(zoneSpec) {\r\n                if (!zoneSpec)\r\n                    throw new Error('ZoneSpec required!');\r\n                return this._zoneDelegate.fork(this, zoneSpec);\r\n            }\r\n            wrap(callback, source) {\r\n                if (typeof callback !== 'function') {\r\n                    throw new Error('Expecting function got: ' + callback);\r\n                }\r\n                const _callback = this._zoneDelegate.intercept(this, callback, source);\r\n                const zone = this;\r\n                return function () {\r\n                    return zone.runGuarded(_callback, this, arguments, source);\r\n                };\r\n            }\r\n            run(callback, applyThis, applyArgs, source) {\r\n                _currentZoneFrame = { parent: _currentZoneFrame, zone: this };\r\n                try {\r\n                    return this._zoneDelegate.invoke(this, callback, applyThis, applyArgs, source);\r\n                }\r\n                finally {\r\n                    _currentZoneFrame = _currentZoneFrame.parent;\r\n                }\r\n            }\r\n            runGuarded(callback, applyThis = null, applyArgs, source) {\r\n                _currentZoneFrame = { parent: _currentZoneFrame, zone: this };\r\n                try {\r\n                    try {\r\n                        return this._zoneDelegate.invoke(this, callback, applyThis, applyArgs, source);\r\n                    }\r\n                    catch (error) {\r\n                        if (this._zoneDelegate.handleError(this, error)) {\r\n                            throw error;\r\n                        }\r\n                    }\r\n                }\r\n                finally {\r\n                    _currentZoneFrame = _currentZoneFrame.parent;\r\n                }\r\n            }\r\n            runTask(task, applyThis, applyArgs) {\r\n                if (task.zone != this) {\r\n                    throw new Error('A task can only be run in the zone of creation! (Creation: ' +\r\n                        (task.zone || NO_ZONE).name + '; Execution: ' + this.name + ')');\r\n                }\r\n                // https://github.com/angular/zone.js/issues/778, sometimes eventTask\r\n                // will run in notScheduled(canceled) state, we should not try to\r\n                // run such kind of task but just return\r\n                if (task.state === notScheduled && (task.type === eventTask || task.type === macroTask)) {\r\n                    return;\r\n                }\r\n                const reEntryGuard = task.state != running;\r\n                reEntryGuard && task._transitionTo(running, scheduled);\r\n                task.runCount++;\r\n                const previousTask = _currentTask;\r\n                _currentTask = task;\r\n                _currentZoneFrame = { parent: _currentZoneFrame, zone: this };\r\n                try {\r\n                    if (task.type == macroTask && task.data && !task.data.isPeriodic) {\r\n                        task.cancelFn = undefined;\r\n                    }\r\n                    try {\r\n                        return this._zoneDelegate.invokeTask(this, task, applyThis, applyArgs);\r\n                    }\r\n                    catch (error) {\r\n                        if (this._zoneDelegate.handleError(this, error)) {\r\n                            throw error;\r\n                        }\r\n                    }\r\n                }\r\n                finally {\r\n                    // if the task's state is notScheduled or unknown, then it has already been cancelled\r\n                    // we should not reset the state to scheduled\r\n                    if (task.state !== notScheduled && task.state !== unknown) {\r\n                        if (task.type == eventTask || (task.data && task.data.isPeriodic)) {\r\n                            reEntryGuard && task._transitionTo(scheduled, running);\r\n                        }\r\n                        else {\r\n                            task.runCount = 0;\r\n                            this._updateTaskCount(task, -1);\r\n                            reEntryGuard &&\r\n                                task._transitionTo(notScheduled, running, notScheduled);\r\n                        }\r\n                    }\r\n                    _currentZoneFrame = _currentZoneFrame.parent;\r\n                    _currentTask = previousTask;\r\n                }\r\n            }\r\n            scheduleTask(task) {\r\n                if (task.zone && task.zone !== this) {\r\n                    // check if the task was rescheduled, the newZone\r\n                    // should not be the children of the original zone\r\n                    let newZone = this;\r\n                    while (newZone) {\r\n                        if (newZone === task.zone) {\r\n                            throw Error(`can not reschedule task to ${this.name} which is descendants of the original zone ${task.zone.name}`);\r\n                        }\r\n                        newZone = newZone.parent;\r\n                    }\r\n                }\r\n                task._transitionTo(scheduling, notScheduled);\r\n                const zoneDelegates = [];\r\n                task._zoneDelegates = zoneDelegates;\r\n                task._zone = this;\r\n                try {\r\n                    task = this._zoneDelegate.scheduleTask(this, task);\r\n                }\r\n                catch (err) {\r\n                    // should set task's state to unknown when scheduleTask throw error\r\n                    // because the err may from reschedule, so the fromState maybe notScheduled\r\n                    task._transitionTo(unknown, scheduling, notScheduled);\r\n                    // TODO: @JiaLiPassion, should we check the result from handleError?\r\n                    this._zoneDelegate.handleError(this, err);\r\n                    throw err;\r\n                }\r\n                if (task._zoneDelegates === zoneDelegates) {\r\n                    // we have to check because internally the delegate can reschedule the task.\r\n                    this._updateTaskCount(task, 1);\r\n                }\r\n                if (task.state == scheduling) {\r\n                    task._transitionTo(scheduled, scheduling);\r\n                }\r\n                return task;\r\n            }\r\n            scheduleMicroTask(source, callback, data, customSchedule) {\r\n                return this.scheduleTask(new ZoneTask(microTask, source, callback, data, customSchedule, undefined));\r\n            }\r\n            scheduleMacroTask(source, callback, data, customSchedule, customCancel) {\r\n                return this.scheduleTask(new ZoneTask(macroTask, source, callback, data, customSchedule, customCancel));\r\n            }\r\n            scheduleEventTask(source, callback, data, customSchedule, customCancel) {\r\n                return this.scheduleTask(new ZoneTask(eventTask, source, callback, data, customSchedule, customCancel));\r\n            }\r\n            cancelTask(task) {\r\n                if (task.zone != this)\r\n                    throw new Error('A task can only be cancelled in the zone of creation! (Creation: ' +\r\n                        (task.zone || NO_ZONE).name + '; Execution: ' + this.name + ')');\r\n                task._transitionTo(canceling, scheduled, running);\r\n                try {\r\n                    this._zoneDelegate.cancelTask(this, task);\r\n                }\r\n                catch (err) {\r\n                    // if error occurs when cancelTask, transit the state to unknown\r\n                    task._transitionTo(unknown, canceling);\r\n                    this._zoneDelegate.handleError(this, err);\r\n                    throw err;\r\n                }\r\n                this._updateTaskCount(task, -1);\r\n                task._transitionTo(notScheduled, canceling);\r\n                task.runCount = 0;\r\n                return task;\r\n            }\r\n            _updateTaskCount(task, count) {\r\n                const zoneDelegates = task._zoneDelegates;\r\n                if (count == -1) {\r\n                    task._zoneDelegates = null;\r\n                }\r\n                for (let i = 0; i < zoneDelegates.length; i++) {\r\n                    zoneDelegates[i]._updateTaskCount(task.type, count);\r\n                }\r\n            }\r\n        }\r\n        // tslint:disable-next-line:require-internal-with-underscore\r\n        Zone.__symbol__ = __symbol__;\r\n        const DELEGATE_ZS = {\r\n            name: '',\r\n            onHasTask: (delegate, _, target, hasTaskState) => delegate.hasTask(target, hasTaskState),\r\n            onScheduleTask: (delegate, _, target, task) => delegate.scheduleTask(target, task),\r\n            onInvokeTask: (delegate, _, target, task, applyThis, applyArgs) => delegate.invokeTask(target, task, applyThis, applyArgs),\r\n            onCancelTask: (delegate, _, target, task) => delegate.cancelTask(target, task)\r\n        };\r\n        class ZoneDelegate {\r\n            constructor(zone, parentDelegate, zoneSpec) {\r\n                this._taskCounts = { 'microTask': 0, 'macroTask': 0, 'eventTask': 0 };\r\n                this.zone = zone;\r\n                this._parentDelegate = parentDelegate;\r\n                this._forkZS =\r\n                    zoneSpec && (zoneSpec && zoneSpec.onFork ? zoneSpec : parentDelegate._forkZS);\r\n                this._forkDlgt = zoneSpec && (zoneSpec.onFork ? parentDelegate : parentDelegate._forkDlgt);\r\n                this._forkCurrZone =\r\n                    zoneSpec && (zoneSpec.onFork ? this.zone : parentDelegate._forkCurrZone);\r\n                this._interceptZS =\r\n                    zoneSpec && (zoneSpec.onIntercept ? zoneSpec : parentDelegate._interceptZS);\r\n                this._interceptDlgt =\r\n                    zoneSpec && (zoneSpec.onIntercept ? parentDelegate : parentDelegate._interceptDlgt);\r\n                this._interceptCurrZone =\r\n                    zoneSpec && (zoneSpec.onIntercept ? this.zone : parentDelegate._interceptCurrZone);\r\n                this._invokeZS = zoneSpec && (zoneSpec.onInvoke ? zoneSpec : parentDelegate._invokeZS);\r\n                this._invokeDlgt =\r\n                    zoneSpec && (zoneSpec.onInvoke ? parentDelegate : parentDelegate._invokeDlgt);\r\n                this._invokeCurrZone =\r\n                    zoneSpec && (zoneSpec.onInvoke ? this.zone : parentDelegate._invokeCurrZone);\r\n                this._handleErrorZS =\r\n                    zoneSpec && (zoneSpec.onHandleError ? zoneSpec : parentDelegate._handleErrorZS);\r\n                this._handleErrorDlgt = zoneSpec &&\r\n                    (zoneSpec.onHandleError ? parentDelegate : parentDelegate._handleErrorDlgt);\r\n                this._handleErrorCurrZone =\r\n                    zoneSpec && (zoneSpec.onHandleError ? this.zone : parentDelegate._handleErrorCurrZone);\r\n                this._scheduleTaskZS =\r\n                    zoneSpec && (zoneSpec.onScheduleTask ? zoneSpec : parentDelegate._scheduleTaskZS);\r\n                this._scheduleTaskDlgt = zoneSpec &&\r\n                    (zoneSpec.onScheduleTask ? parentDelegate : parentDelegate._scheduleTaskDlgt);\r\n                this._scheduleTaskCurrZone = zoneSpec &&\r\n                    (zoneSpec.onScheduleTask ? this.zone : parentDelegate._scheduleTaskCurrZone);\r\n                this._invokeTaskZS =\r\n                    zoneSpec && (zoneSpec.onInvokeTask ? zoneSpec : parentDelegate._invokeTaskZS);\r\n                this._invokeTaskDlgt =\r\n                    zoneSpec && (zoneSpec.onInvokeTask ? parentDelegate : parentDelegate._invokeTaskDlgt);\r\n                this._invokeTaskCurrZone =\r\n                    zoneSpec && (zoneSpec.onInvokeTask ? this.zone : parentDelegate._invokeTaskCurrZone);\r\n                this._cancelTaskZS =\r\n                    zoneSpec && (zoneSpec.onCancelTask ? zoneSpec : parentDelegate._cancelTaskZS);\r\n                this._cancelTaskDlgt =\r\n                    zoneSpec && (zoneSpec.onCancelTask ? parentDelegate : parentDelegate._cancelTaskDlgt);\r\n                this._cancelTaskCurrZone =\r\n                    zoneSpec && (zoneSpec.onCancelTask ? this.zone : parentDelegate._cancelTaskCurrZone);\r\n                this._hasTaskZS = null;\r\n                this._hasTaskDlgt = null;\r\n                this._hasTaskDlgtOwner = null;\r\n                this._hasTaskCurrZone = null;\r\n                const zoneSpecHasTask = zoneSpec && zoneSpec.onHasTask;\r\n                const parentHasTask = parentDelegate && parentDelegate._hasTaskZS;\r\n                if (zoneSpecHasTask || parentHasTask) {\r\n                    // If we need to report hasTask, than this ZS needs to do ref counting on tasks. In such\r\n                    // a case all task related interceptors must go through this ZD. We can't short circuit it.\r\n                    this._hasTaskZS = zoneSpecHasTask ? zoneSpec : DELEGATE_ZS;\r\n                    this._hasTaskDlgt = parentDelegate;\r\n                    this._hasTaskDlgtOwner = this;\r\n                    this._hasTaskCurrZone = zone;\r\n                    if (!zoneSpec.onScheduleTask) {\r\n                        this._scheduleTaskZS = DELEGATE_ZS;\r\n                        this._scheduleTaskDlgt = parentDelegate;\r\n                        this._scheduleTaskCurrZone = this.zone;\r\n                    }\r\n                    if (!zoneSpec.onInvokeTask) {\r\n                        this._invokeTaskZS = DELEGATE_ZS;\r\n                        this._invokeTaskDlgt = parentDelegate;\r\n                        this._invokeTaskCurrZone = this.zone;\r\n                    }\r\n                    if (!zoneSpec.onCancelTask) {\r\n                        this._cancelTaskZS = DELEGATE_ZS;\r\n                        this._cancelTaskDlgt = parentDelegate;\r\n                        this._cancelTaskCurrZone = this.zone;\r\n                    }\r\n                }\r\n            }\r\n            fork(targetZone, zoneSpec) {\r\n                return this._forkZS ?\r\n                    this._forkZS.onFork(this._forkDlgt, this.zone, targetZone, zoneSpec) :\r\n                    new Zone(targetZone, zoneSpec);\r\n            }\r\n            intercept(targetZone, callback, source) {\r\n                return this._interceptZS ?\r\n                    this._interceptZS.onIntercept(this._interceptDlgt, this._interceptCurrZone, targetZone, callback, source) :\r\n                    callback;\r\n            }\r\n            invoke(targetZone, callback, applyThis, applyArgs, source) {\r\n                return this._invokeZS ?\r\n                    this._invokeZS.onInvoke(this._invokeDlgt, this._invokeCurrZone, targetZone, callback, applyThis, applyArgs, source) :\r\n                    callback.apply(applyThis, applyArgs);\r\n            }\r\n            handleError(targetZone, error) {\r\n                return this._handleErrorZS ?\r\n                    this._handleErrorZS.onHandleError(this._handleErrorDlgt, this._handleErrorCurrZone, targetZone, error) :\r\n                    true;\r\n            }\r\n            scheduleTask(targetZone, task) {\r\n                let returnTask = task;\r\n                if (this._scheduleTaskZS) {\r\n                    if (this._hasTaskZS) {\r\n                        returnTask._zoneDelegates.push(this._hasTaskDlgtOwner);\r\n                    }\r\n                    // clang-format off\r\n                    returnTask = this._scheduleTaskZS.onScheduleTask(this._scheduleTaskDlgt, this._scheduleTaskCurrZone, targetZone, task);\r\n                    // clang-format on\r\n                    if (!returnTask)\r\n                        returnTask = task;\r\n                }\r\n                else {\r\n                    if (task.scheduleFn) {\r\n                        task.scheduleFn(task);\r\n                    }\r\n                    else if (task.type == microTask) {\r\n                        scheduleMicroTask(task);\r\n                    }\r\n                    else {\r\n                        throw new Error('Task is missing scheduleFn.');\r\n                    }\r\n                }\r\n                return returnTask;\r\n            }\r\n            invokeTask(targetZone, task, applyThis, applyArgs) {\r\n                return this._invokeTaskZS ?\r\n                    this._invokeTaskZS.onInvokeTask(this._invokeTaskDlgt, this._invokeTaskCurrZone, targetZone, task, applyThis, applyArgs) :\r\n                    task.callback.apply(applyThis, applyArgs);\r\n            }\r\n            cancelTask(targetZone, task) {\r\n                let value;\r\n                if (this._cancelTaskZS) {\r\n                    value = this._cancelTaskZS.onCancelTask(this._cancelTaskDlgt, this._cancelTaskCurrZone, targetZone, task);\r\n                }\r\n                else {\r\n                    if (!task.cancelFn) {\r\n                        throw Error('Task is not cancelable');\r\n                    }\r\n                    value = task.cancelFn(task);\r\n                }\r\n                return value;\r\n            }\r\n            hasTask(targetZone, isEmpty) {\r\n                // hasTask should not throw error so other ZoneDelegate\r\n                // can still trigger hasTask callback\r\n                try {\r\n                    this._hasTaskZS &&\r\n                        this._hasTaskZS.onHasTask(this._hasTaskDlgt, this._hasTaskCurrZone, targetZone, isEmpty);\r\n                }\r\n                catch (err) {\r\n                    this.handleError(targetZone, err);\r\n                }\r\n            }\r\n            // tslint:disable-next-line:require-internal-with-underscore\r\n            _updateTaskCount(type, count) {\r\n                const counts = this._taskCounts;\r\n                const prev = counts[type];\r\n                const next = counts[type] = prev + count;\r\n                if (next < 0) {\r\n                    throw new Error('More tasks executed then were scheduled.');\r\n                }\r\n                if (prev == 0 || next == 0) {\r\n                    const isEmpty = {\r\n                        microTask: counts['microTask'] > 0,\r\n                        macroTask: counts['macroTask'] > 0,\r\n                        eventTask: counts['eventTask'] > 0,\r\n                        change: type\r\n                    };\r\n                    this.hasTask(this.zone, isEmpty);\r\n                }\r\n            }\r\n        }\r\n        class ZoneTask {\r\n            constructor(type, source, callback, options, scheduleFn, cancelFn) {\r\n                // tslint:disable-next-line:require-internal-with-underscore\r\n                this._zone = null;\r\n                this.runCount = 0;\r\n                // tslint:disable-next-line:require-internal-with-underscore\r\n                this._zoneDelegates = null;\r\n                // tslint:disable-next-line:require-internal-with-underscore\r\n                this._state = 'notScheduled';\r\n                this.type = type;\r\n                this.source = source;\r\n                this.data = options;\r\n                this.scheduleFn = scheduleFn;\r\n                this.cancelFn = cancelFn;\r\n                if (!callback) {\r\n                    throw new Error('callback is not defined');\r\n                }\r\n                this.callback = callback;\r\n                const self = this;\r\n                // TODO: @JiaLiPassion options should have interface\r\n                if (type === eventTask && options && options.useG) {\r\n                    this.invoke = ZoneTask.invokeTask;\r\n                }\r\n                else {\r\n                    this.invoke = function () {\r\n                        return ZoneTask.invokeTask.call(global, self, this, arguments);\r\n                    };\r\n                }\r\n            }\r\n            static invokeTask(task, target, args) {\r\n                if (!task) {\r\n                    task = this;\r\n                }\r\n                _numberOfNestedTaskFrames++;\r\n                try {\r\n                    task.runCount++;\r\n                    return task.zone.runTask(task, target, args);\r\n                }\r\n                finally {\r\n                    if (_numberOfNestedTaskFrames == 1) {\r\n                        drainMicroTaskQueue();\r\n                    }\r\n                    _numberOfNestedTaskFrames--;\r\n                }\r\n            }\r\n            get zone() { return this._zone; }\r\n            get state() { return this._state; }\r\n            cancelScheduleRequest() { this._transitionTo(notScheduled, scheduling); }\r\n            // tslint:disable-next-line:require-internal-with-underscore\r\n            _transitionTo(toState, fromState1, fromState2) {\r\n                if (this._state === fromState1 || this._state === fromState2) {\r\n                    this._state = toState;\r\n                    if (toState == notScheduled) {\r\n                        this._zoneDelegates = null;\r\n                    }\r\n                }\r\n                else {\r\n                    throw new Error(`${this.type} '${this.source}': can not transition to '${toState}', expecting state '${fromState1}'${fromState2 ? ' or \\'' + fromState2 + '\\'' : ''}, was '${this._state}'.`);\r\n                }\r\n            }\r\n            toString() {\r\n                if (this.data && typeof this.data.handleId !== 'undefined') {\r\n                    return this.data.handleId.toString();\r\n                }\r\n                else {\r\n                    return Object.prototype.toString.call(this);\r\n                }\r\n            }\r\n            // add toJSON method to prevent cyclic error when\r\n            // call JSON.stringify(zoneTask)\r\n            toJSON() {\r\n                return {\r\n                    type: this.type,\r\n                    state: this.state,\r\n                    source: this.source,\r\n                    zone: this.zone.name,\r\n                    runCount: this.runCount\r\n                };\r\n            }\r\n        }\r\n        //////////////////////////////////////////////////////\r\n        //////////////////////////////////////////////////////\r\n        ///  MICROTASK QUEUE\r\n        //////////////////////////////////////////////////////\r\n        //////////////////////////////////////////////////////\r\n        const symbolSetTimeout = __symbol__('setTimeout');\r\n        const symbolPromise = __symbol__('Promise');\r\n        const symbolThen = __symbol__('then');\r\n        let _microTaskQueue = [];\r\n        let _isDrainingMicrotaskQueue = false;\r\n        let nativeMicroTaskQueuePromise;\r\n        function scheduleMicroTask(task) {\r\n            // if we are not running in any task, and there has not been anything scheduled\r\n            // we must bootstrap the initial task creation by manually scheduling the drain\r\n            if (_numberOfNestedTaskFrames === 0 && _microTaskQueue.length === 0) {\r\n                // We are not running in Task, so we need to kickstart the microtask queue.\r\n                if (!nativeMicroTaskQueuePromise) {\r\n                    if (global[symbolPromise]) {\r\n                        nativeMicroTaskQueuePromise = global[symbolPromise].resolve(0);\r\n                    }\r\n                }\r\n                if (nativeMicroTaskQueuePromise) {\r\n                    let nativeThen = nativeMicroTaskQueuePromise[symbolThen];\r\n                    if (!nativeThen) {\r\n                        // native Promise is not patchable, we need to use `then` directly\r\n                        // issue 1078\r\n                        nativeThen = nativeMicroTaskQueuePromise['then'];\r\n                    }\r\n                    nativeThen.call(nativeMicroTaskQueuePromise, drainMicroTaskQueue);\r\n                }\r\n                else {\r\n                    global[symbolSetTimeout](drainMicroTaskQueue, 0);\r\n                }\r\n            }\r\n            task && _microTaskQueue.push(task);\r\n        }\r\n        function drainMicroTaskQueue() {\r\n            if (!_isDrainingMicrotaskQueue) {\r\n                _isDrainingMicrotaskQueue = true;\r\n                while (_microTaskQueue.length) {\r\n                    const queue = _microTaskQueue;\r\n                    _microTaskQueue = [];\r\n                    for (let i = 0; i < queue.length; i++) {\r\n                        const task = queue[i];\r\n                        try {\r\n                            task.zone.runTask(task, null, null);\r\n                        }\r\n                        catch (error) {\r\n                            _api.onUnhandledError(error);\r\n                        }\r\n                    }\r\n                }\r\n                _api.microtaskDrainDone();\r\n                _isDrainingMicrotaskQueue = false;\r\n            }\r\n        }\r\n        //////////////////////////////////////////////////////\r\n        //////////////////////////////////////////////////////\r\n        ///  BOOTSTRAP\r\n        //////////////////////////////////////////////////////\r\n        //////////////////////////////////////////////////////\r\n        const NO_ZONE = { name: 'NO ZONE' };\r\n        const notScheduled = 'notScheduled', scheduling = 'scheduling', scheduled = 'scheduled', running = 'running', canceling = 'canceling', unknown = 'unknown';\r\n        const microTask = 'microTask', macroTask = 'macroTask', eventTask = 'eventTask';\r\n        const patches = {};\r\n        const _api = {\r\n            symbol: __symbol__,\r\n            currentZoneFrame: () => _currentZoneFrame,\r\n            onUnhandledError: noop,\r\n            microtaskDrainDone: noop,\r\n            scheduleMicroTask: scheduleMicroTask,\r\n            showUncaughtError: () => !Zone[__symbol__('ignoreConsoleErrorUncaughtError')],\r\n            patchEventTarget: () => [],\r\n            patchOnProperties: noop,\r\n            patchMethod: () => noop,\r\n            bindArguments: () => [],\r\n            patchThen: () => noop,\r\n            patchMacroTask: () => noop,\r\n            setNativePromise: (NativePromise) => {\r\n                // sometimes NativePromise.resolve static function\r\n                // is not ready yet, (such as core-js/es6.promise)\r\n                // so we need to check here.\r\n                if (NativePromise && typeof NativePromise.resolve === 'function') {\r\n                    nativeMicroTaskQueuePromise = NativePromise.resolve(0);\r\n                }\r\n            },\r\n            patchEventPrototype: () => noop,\r\n            isIEOrEdge: () => false,\r\n            getGlobalObjects: () => undefined,\r\n            ObjectDefineProperty: () => noop,\r\n            ObjectGetOwnPropertyDescriptor: () => undefined,\r\n            ObjectCreate: () => undefined,\r\n            ArraySlice: () => [],\r\n            patchClass: () => noop,\r\n            wrapWithCurrentZone: () => noop,\r\n            filterProperties: () => [],\r\n            attachOriginToPatched: () => noop,\r\n            _redefineProperty: () => noop,\r\n            patchCallbacks: () => noop\r\n        };\r\n        let _currentZoneFrame = { parent: null, zone: new Zone(null, null) };\r\n        let _currentTask = null;\r\n        let _numberOfNestedTaskFrames = 0;\r\n        function noop() { }\r\n        performanceMeasure('Zone', 'Zone');\r\n        return global['Zone'] = Zone;\r\n    })(typeof window !== 'undefined' && window || typeof self !== 'undefined' && self || global);\r\n\r\n    /**\r\n     * @license\r\n     * Copyright Google Inc. All Rights Reserved.\r\n     *\r\n     * Use of this source code is governed by an MIT-style license that can be\r\n     * found in the LICENSE file at https://angular.io/license\r\n     */\r\n    Zone.__load_patch('ZoneAwarePromise', (global, Zone, api) => {\r\n        const ObjectGetOwnPropertyDescriptor = Object.getOwnPropertyDescriptor;\r\n        const ObjectDefineProperty = Object.defineProperty;\r\n        function readableObjectToString(obj) {\r\n            if (obj && obj.toString === Object.prototype.toString) {\r\n                const className = obj.constructor && obj.constructor.name;\r\n                return (className ? className : '') + ': ' + JSON.stringify(obj);\r\n            }\r\n            return obj ? obj.toString() : Object.prototype.toString.call(obj);\r\n        }\r\n        const __symbol__ = api.symbol;\r\n        const _uncaughtPromiseErrors = [];\r\n        const isDisableWrappingUncaughtPromiseRejection = global[__symbol__('DISABLE_WRAPPING_UNCAUGHT_PROMISE_REJECTION')] === true;\r\n        const symbolPromise = __symbol__('Promise');\r\n        const symbolThen = __symbol__('then');\r\n        const creationTrace = '__creationTrace__';\r\n        api.onUnhandledError = (e) => {\r\n            if (api.showUncaughtError()) {\r\n                const rejection = e && e.rejection;\r\n                if (rejection) {\r\n                    console.error('Unhandled Promise rejection:', rejection instanceof Error ? rejection.message : rejection, '; Zone:', e.zone.name, '; Task:', e.task && e.task.source, '; Value:', rejection, rejection instanceof Error ? rejection.stack : undefined);\r\n                }\r\n                else {\r\n                    console.error(e);\r\n                }\r\n            }\r\n        };\r\n        api.microtaskDrainDone = () => {\r\n            while (_uncaughtPromiseErrors.length) {\r\n                const uncaughtPromiseError = _uncaughtPromiseErrors.shift();\r\n                try {\r\n                    uncaughtPromiseError.zone.runGuarded(() => { throw uncaughtPromiseError; });\r\n                }\r\n                catch (error) {\r\n                    handleUnhandledRejection(error);\r\n                }\r\n            }\r\n        };\r\n        const UNHANDLED_PROMISE_REJECTION_HANDLER_SYMBOL = __symbol__('unhandledPromiseRejectionHandler');\r\n        function handleUnhandledRejection(e) {\r\n            api.onUnhandledError(e);\r\n            try {\r\n                const handler = Zone[UNHANDLED_PROMISE_REJECTION_HANDLER_SYMBOL];\r\n                if (typeof handler === 'function') {\r\n                    handler.call(this, e);\r\n                }\r\n            }\r\n            catch (err) {\r\n            }\r\n        }\r\n        function isThenable(value) { return value && value.then; }\r\n        function forwardResolution(value) { return value; }\r\n        function forwardRejection(rejection) { return ZoneAwarePromise.reject(rejection); }\r\n        const symbolState = __symbol__('state');\r\n        const symbolValue = __symbol__('value');\r\n        const symbolFinally = __symbol__('finally');\r\n        const symbolParentPromiseValue = __symbol__('parentPromiseValue');\r\n        const symbolParentPromiseState = __symbol__('parentPromiseState');\r\n        const source = 'Promise.then';\r\n        const UNRESOLVED = null;\r\n        const RESOLVED = true;\r\n        const REJECTED = false;\r\n        const REJECTED_NO_CATCH = 0;\r\n        function makeResolver(promise, state) {\r\n            return (v) => {\r\n                try {\r\n                    resolvePromise(promise, state, v);\r\n                }\r\n                catch (err) {\r\n                    resolvePromise(promise, false, err);\r\n                }\r\n                // Do not return value or you will break the Promise spec.\r\n            };\r\n        }\r\n        const once = function () {\r\n            let wasCalled = false;\r\n            return function wrapper(wrappedFunction) {\r\n                return function () {\r\n                    if (wasCalled) {\r\n                        return;\r\n                    }\r\n                    wasCalled = true;\r\n                    wrappedFunction.apply(null, arguments);\r\n                };\r\n            };\r\n        };\r\n        const TYPE_ERROR = 'Promise resolved with itself';\r\n        const CURRENT_TASK_TRACE_SYMBOL = __symbol__('currentTaskTrace');\r\n        // Promise Resolution\r\n        function resolvePromise(promise, state, value) {\r\n            const onceWrapper = once();\r\n            if (promise === value) {\r\n                throw new TypeError(TYPE_ERROR);\r\n            }\r\n            if (promise[symbolState] === UNRESOLVED) {\r\n                // should only get value.then once based on promise spec.\r\n                let then = null;\r\n                try {\r\n                    if (typeof value === 'object' || typeof value === 'function') {\r\n                        then = value && value.then;\r\n                    }\r\n                }\r\n                catch (err) {\r\n                    onceWrapper(() => { resolvePromise(promise, false, err); })();\r\n                    return promise;\r\n                }\r\n                // if (value instanceof ZoneAwarePromise) {\r\n                if (state !== REJECTED && value instanceof ZoneAwarePromise &&\r\n                    value.hasOwnProperty(symbolState) && value.hasOwnProperty(symbolValue) &&\r\n                    value[symbolState] !== UNRESOLVED) {\r\n                    clearRejectedNoCatch(value);\r\n                    resolvePromise(promise, value[symbolState], value[symbolValue]);\r\n                }\r\n                else if (state !== REJECTED && typeof then === 'function') {\r\n                    try {\r\n                        then.call(value, onceWrapper(makeResolver(promise, state)), onceWrapper(makeResolver(promise, false)));\r\n                    }\r\n                    catch (err) {\r\n                        onceWrapper(() => { resolvePromise(promise, false, err); })();\r\n                    }\r\n                }\r\n                else {\r\n                    promise[symbolState] = state;\r\n                    const queue = promise[symbolValue];\r\n                    promise[symbolValue] = value;\r\n                    if (promise[symbolFinally] === symbolFinally) {\r\n                        // the promise is generated by Promise.prototype.finally\r\n                        if (state === RESOLVED) {\r\n                            // the state is resolved, should ignore the value\r\n                            // and use parent promise value\r\n                            promise[symbolState] = promise[symbolParentPromiseState];\r\n                            promise[symbolValue] = promise[symbolParentPromiseValue];\r\n                        }\r\n                    }\r\n                    // record task information in value when error occurs, so we can\r\n                    // do some additional work such as render longStackTrace\r\n                    if (state === REJECTED && value instanceof Error) {\r\n                        // check if longStackTraceZone is here\r\n                        const trace = Zone.currentTask && Zone.currentTask.data &&\r\n                            Zone.currentTask.data[creationTrace];\r\n                        if (trace) {\r\n                            // only keep the long stack trace into error when in longStackTraceZone\r\n                            ObjectDefineProperty(value, CURRENT_TASK_TRACE_SYMBOL, { configurable: true, enumerable: false, writable: true, value: trace });\r\n                        }\r\n                    }\r\n                    for (let i = 0; i < queue.length;) {\r\n                        scheduleResolveOrReject(promise, queue[i++], queue[i++], queue[i++], queue[i++]);\r\n                    }\r\n                    if (queue.length == 0 && state == REJECTED) {\r\n                        promise[symbolState] = REJECTED_NO_CATCH;\r\n                        let uncaughtPromiseError = value;\r\n                        if (!isDisableWrappingUncaughtPromiseRejection) {\r\n                            // If disable wrapping uncaught promise reject\r\n                            // and the rejected value is an Error object,\r\n                            // use the value instead of wrapping it.\r\n                            try {\r\n                                // Here we throws a new Error to print more readable error log\r\n                                // and if the value is not an error, zone.js builds an `Error`\r\n                                // Object here to attach the stack information.\r\n                                throw new Error('Uncaught (in promise): ' + readableObjectToString(value) +\r\n                                    (value && value.stack ? '\\n' + value.stack : ''));\r\n                            }\r\n                            catch (err) {\r\n                                uncaughtPromiseError = err;\r\n                            }\r\n                        }\r\n                        uncaughtPromiseError.rejection = value;\r\n                        uncaughtPromiseError.promise = promise;\r\n                        uncaughtPromiseError.zone = Zone.current;\r\n                        uncaughtPromiseError.task = Zone.currentTask;\r\n                        _uncaughtPromiseErrors.push(uncaughtPromiseError);\r\n                        api.scheduleMicroTask(); // to make sure that it is running\r\n                    }\r\n                }\r\n            }\r\n            // Resolving an already resolved promise is a noop.\r\n            return promise;\r\n        }\r\n        const REJECTION_HANDLED_HANDLER = __symbol__('rejectionHandledHandler');\r\n        function clearRejectedNoCatch(promise) {\r\n            if (promise[symbolState] === REJECTED_NO_CATCH) {\r\n                // if the promise is rejected no catch status\r\n                // and queue.length > 0, means there is a error handler\r\n                // here to handle the rejected promise, we should trigger\r\n                // windows.rejectionhandled eventHandler or nodejs rejectionHandled\r\n                // eventHandler\r\n                try {\r\n                    const handler = Zone[REJECTION_HANDLED_HANDLER];\r\n                    if (handler && typeof handler === 'function') {\r\n                        handler.call(this, { rejection: promise[symbolValue], promise: promise });\r\n                    }\r\n                }\r\n                catch (err) {\r\n                }\r\n                promise[symbolState] = REJECTED;\r\n                for (let i = 0; i < _uncaughtPromiseErrors.length; i++) {\r\n                    if (promise === _uncaughtPromiseErrors[i].promise) {\r\n                        _uncaughtPromiseErrors.splice(i, 1);\r\n                    }\r\n                }\r\n            }\r\n        }\r\n        function scheduleResolveOrReject(promise, zone, chainPromise, onFulfilled, onRejected) {\r\n            clearRejectedNoCatch(promise);\r\n            const promiseState = promise[symbolState];\r\n            const delegate = promiseState ?\r\n                (typeof onFulfilled === 'function') ? onFulfilled : forwardResolution :\r\n                (typeof onRejected === 'function') ? onRejected : forwardRejection;\r\n            zone.scheduleMicroTask(source, () => {\r\n                try {\r\n                    const parentPromiseValue = promise[symbolValue];\r\n                    const isFinallyPromise = !!chainPromise && symbolFinally === chainPromise[symbolFinally];\r\n                    if (isFinallyPromise) {\r\n                        // if the promise is generated from finally call, keep parent promise's state and value\r\n                        chainPromise[symbolParentPromiseValue] = parentPromiseValue;\r\n                        chainPromise[symbolParentPromiseState] = promiseState;\r\n                    }\r\n                    // should not pass value to finally callback\r\n                    const value = zone.run(delegate, undefined, isFinallyPromise && delegate !== forwardRejection && delegate !== forwardResolution ?\r\n                        [] :\r\n                        [parentPromiseValue]);\r\n                    resolvePromise(chainPromise, true, value);\r\n                }\r\n                catch (error) {\r\n                    // if error occurs, should always return this error\r\n                    resolvePromise(chainPromise, false, error);\r\n                }\r\n            }, chainPromise);\r\n        }\r\n        const ZONE_AWARE_PROMISE_TO_STRING = 'function ZoneAwarePromise() { [native code] }';\r\n        const noop = function () { };\r\n        class ZoneAwarePromise {\r\n            static toString() { return ZONE_AWARE_PROMISE_TO_STRING; }\r\n            static resolve(value) {\r\n                return resolvePromise(new this(null), RESOLVED, value);\r\n            }\r\n            static reject(error) {\r\n                return resolvePromise(new this(null), REJECTED, error);\r\n            }\r\n            static race(values) {\r\n                let resolve;\r\n                let reject;\r\n                let promise = new this((res, rej) => {\r\n                    resolve = res;\r\n                    reject = rej;\r\n                });\r\n                function onResolve(value) { resolve(value); }\r\n                function onReject(error) { reject(error); }\r\n                for (let value of values) {\r\n                    if (!isThenable(value)) {\r\n                        value = this.resolve(value);\r\n                    }\r\n                    value.then(onResolve, onReject);\r\n                }\r\n                return promise;\r\n            }\r\n            static all(values) { return ZoneAwarePromise.allWithCallback(values); }\r\n            static allSettled(values) {\r\n                const P = this && this.prototype instanceof ZoneAwarePromise ? this : ZoneAwarePromise;\r\n                return P.allWithCallback(values, {\r\n                    thenCallback: (value) => ({ status: 'fulfilled', value }),\r\n                    errorCallback: (err) => ({ status: 'rejected', reason: err })\r\n                });\r\n            }\r\n            static allWithCallback(values, callback) {\r\n                let resolve;\r\n                let reject;\r\n                let promise = new this((res, rej) => {\r\n                    resolve = res;\r\n                    reject = rej;\r\n                });\r\n                // Start at 2 to prevent prematurely resolving if .then is called immediately.\r\n                let unresolvedCount = 2;\r\n                let valueIndex = 0;\r\n                const resolvedValues = [];\r\n                for (let value of values) {\r\n                    if (!isThenable(value)) {\r\n                        value = this.resolve(value);\r\n                    }\r\n                    const curValueIndex = valueIndex;\r\n                    try {\r\n                        value.then((value) => {\r\n                            resolvedValues[curValueIndex] = callback ? callback.thenCallback(value) : value;\r\n                            unresolvedCount--;\r\n                            if (unresolvedCount === 0) {\r\n                                resolve(resolvedValues);\r\n                            }\r\n                        }, (err) => {\r\n                            if (!callback) {\r\n                                reject(err);\r\n                            }\r\n                            else {\r\n                                resolvedValues[curValueIndex] = callback.errorCallback(err);\r\n                                unresolvedCount--;\r\n                                if (unresolvedCount === 0) {\r\n                                    resolve(resolvedValues);\r\n                                }\r\n                            }\r\n                        });\r\n                    }\r\n                    catch (thenErr) {\r\n                        reject(thenErr);\r\n                    }\r\n                    unresolvedCount++;\r\n                    valueIndex++;\r\n                }\r\n                // Make the unresolvedCount zero-based again.\r\n                unresolvedCount -= 2;\r\n                if (unresolvedCount === 0) {\r\n                    resolve(resolvedValues);\r\n                }\r\n                return promise;\r\n            }\r\n            constructor(executor) {\r\n                const promise = this;\r\n                if (!(promise instanceof ZoneAwarePromise)) {\r\n                    throw new Error('Must be an instanceof Promise.');\r\n                }\r\n                promise[symbolState] = UNRESOLVED;\r\n                promise[symbolValue] = []; // queue;\r\n                try {\r\n                    executor && executor(makeResolver(promise, RESOLVED), makeResolver(promise, REJECTED));\r\n                }\r\n                catch (error) {\r\n                    resolvePromise(promise, false, error);\r\n                }\r\n            }\r\n            get [Symbol.toStringTag]() { return 'Promise'; }\r\n            get [Symbol.species]() { return ZoneAwarePromise; }\r\n            then(onFulfilled, onRejected) {\r\n                let C = this.constructor[Symbol.species];\r\n                if (!C || typeof C !== 'function') {\r\n                    C = this.constructor || ZoneAwarePromise;\r\n                }\r\n                const chainPromise = new C(noop);\r\n                const zone = Zone.current;\r\n                if (this[symbolState] == UNRESOLVED) {\r\n                    this[symbolValue].push(zone, chainPromise, onFulfilled, onRejected);\r\n                }\r\n                else {\r\n                    scheduleResolveOrReject(this, zone, chainPromise, onFulfilled, onRejected);\r\n                }\r\n                return chainPromise;\r\n            }\r\n            catch(onRejected) {\r\n                return this.then(null, onRejected);\r\n            }\r\n            finally(onFinally) {\r\n                let C = this.constructor[Symbol.species];\r\n                if (!C || typeof C !== 'function') {\r\n                    C = ZoneAwarePromise;\r\n                }\r\n                const chainPromise = new C(noop);\r\n                chainPromise[symbolFinally] = symbolFinally;\r\n                const zone = Zone.current;\r\n                if (this[symbolState] == UNRESOLVED) {\r\n                    this[symbolValue].push(zone, chainPromise, onFinally, onFinally);\r\n                }\r\n                else {\r\n                    scheduleResolveOrReject(this, zone, chainPromise, onFinally, onFinally);\r\n                }\r\n                return chainPromise;\r\n            }\r\n        }\r\n        // Protect against aggressive optimizers dropping seemingly unused properties.\r\n        // E.g. Closure Compiler in advanced mode.\r\n        ZoneAwarePromise['resolve'] = ZoneAwarePromise.resolve;\r\n        ZoneAwarePromise['reject'] = ZoneAwarePromise.reject;\r\n        ZoneAwarePromise['race'] = ZoneAwarePromise.race;\r\n        ZoneAwarePromise['all'] = ZoneAwarePromise.all;\r\n        const NativePromise = global[symbolPromise] = global['Promise'];\r\n        const ZONE_AWARE_PROMISE = Zone.__symbol__('ZoneAwarePromise');\r\n        let desc = ObjectGetOwnPropertyDescriptor(global, 'Promise');\r\n        if (!desc || desc.configurable) {\r\n            desc && delete desc.writable;\r\n            desc && delete desc.value;\r\n            if (!desc) {\r\n                desc = { configurable: true, enumerable: true };\r\n            }\r\n            desc.get = function () {\r\n                // if we already set ZoneAwarePromise, use patched one\r\n                // otherwise return native one.\r\n                return global[ZONE_AWARE_PROMISE] ? global[ZONE_AWARE_PROMISE] : global[symbolPromise];\r\n            };\r\n            desc.set = function (NewNativePromise) {\r\n                if (NewNativePromise === ZoneAwarePromise) {\r\n                    // if the NewNativePromise is ZoneAwarePromise\r\n                    // save to global\r\n                    global[ZONE_AWARE_PROMISE] = NewNativePromise;\r\n                }\r\n                else {\r\n                    // if the NewNativePromise is not ZoneAwarePromise\r\n                    // for example: after load zone.js, some library just\r\n                    // set es6-promise to global, if we set it to global\r\n                    // directly, assertZonePatched will fail and angular\r\n                    // will not loaded, so we just set the NewNativePromise\r\n                    // to global[symbolPromise], so the result is just like\r\n                    // we load ES6 Promise before zone.js\r\n                    global[symbolPromise] = NewNativePromise;\r\n                    if (!NewNativePromise.prototype[symbolThen]) {\r\n                        patchThen(NewNativePromise);\r\n                    }\r\n                    api.setNativePromise(NewNativePromise);\r\n                }\r\n            };\r\n            ObjectDefineProperty(global, 'Promise', desc);\r\n        }\r\n        global['Promise'] = ZoneAwarePromise;\r\n        const symbolThenPatched = __symbol__('thenPatched');\r\n        function patchThen(Ctor) {\r\n            const proto = Ctor.prototype;\r\n            const prop = ObjectGetOwnPropertyDescriptor(proto, 'then');\r\n            if (prop && (prop.writable === false || !prop.configurable)) {\r\n                // check Ctor.prototype.then propertyDescriptor is writable or not\r\n                // in meteor env, writable is false, we should ignore such case\r\n                return;\r\n            }\r\n            const originalThen = proto.then;\r\n            // Keep a reference to the original method.\r\n            proto[symbolThen] = originalThen;\r\n            Ctor.prototype.then = function (onResolve, onReject) {\r\n                const wrapped = new ZoneAwarePromise((resolve, reject) => { originalThen.call(this, resolve, reject); });\r\n                return wrapped.then(onResolve, onReject);\r\n            };\r\n            Ctor[symbolThenPatched] = true;\r\n        }\r\n        api.patchThen = patchThen;\r\n        function zoneify(fn) {\r\n            return function () {\r\n                let resultPromise = fn.apply(this, arguments);\r\n                if (resultPromise instanceof ZoneAwarePromise) {\r\n                    return resultPromise;\r\n                }\r\n                let ctor = resultPromise.constructor;\r\n                if (!ctor[symbolThenPatched]) {\r\n                    patchThen(ctor);\r\n                }\r\n                return resultPromise;\r\n            };\r\n        }\r\n        if (NativePromise) {\r\n            patchThen(NativePromise);\r\n            const fetch = global['fetch'];\r\n            if (typeof fetch == 'function') {\r\n                global[api.symbol('fetch')] = fetch;\r\n                global['fetch'] = zoneify(fetch);\r\n            }\r\n        }\r\n        // This is not part of public API, but it is useful for tests, so we expose it.\r\n        Promise[Zone.__symbol__('uncaughtPromiseErrors')] = _uncaughtPromiseErrors;\r\n        return ZoneAwarePromise;\r\n    });\r\n\r\n    /**\r\n     * @license\r\n     * Copyright Google Inc. All Rights Reserved.\r\n     *\r\n     * Use of this source code is governed by an MIT-style license that can be\r\n     * found in the LICENSE file at https://angular.io/license\r\n     */\r\n    /**\r\n     * Suppress closure compiler errors about unknown 'Zone' variable\r\n     * @fileoverview\r\n     * @suppress {undefinedVars,globalThis,missingRequire}\r\n     */\r\n    /// <reference types=\"node\"/>\r\n    // issue #989, to reduce bundle size, use short name\r\n    /** Object.getOwnPropertyDescriptor */\r\n    const ObjectGetOwnPropertyDescriptor = Object.getOwnPropertyDescriptor;\r\n    /** Object.defineProperty */\r\n    const ObjectDefineProperty = Object.defineProperty;\r\n    /** Object.getPrototypeOf */\r\n    const ObjectGetPrototypeOf = Object.getPrototypeOf;\r\n    /** Object.create */\r\n    const ObjectCreate = Object.create;\r\n    /** Array.prototype.slice */\r\n    const ArraySlice = Array.prototype.slice;\r\n    /** addEventListener string const */\r\n    const ADD_EVENT_LISTENER_STR = 'addEventListener';\r\n    /** removeEventListener string const */\r\n    const REMOVE_EVENT_LISTENER_STR = 'removeEventListener';\r\n    /** zoneSymbol addEventListener */\r\n    const ZONE_SYMBOL_ADD_EVENT_LISTENER = Zone.__symbol__(ADD_EVENT_LISTENER_STR);\r\n    /** zoneSymbol removeEventListener */\r\n    const ZONE_SYMBOL_REMOVE_EVENT_LISTENER = Zone.__symbol__(REMOVE_EVENT_LISTENER_STR);\r\n    /** true string const */\r\n    const TRUE_STR = 'true';\r\n    /** false string const */\r\n    const FALSE_STR = 'false';\r\n    /** Zone symbol prefix string const. */\r\n    const ZONE_SYMBOL_PREFIX = Zone.__symbol__('');\r\n    function wrapWithCurrentZone(callback, source) {\r\n        return Zone.current.wrap(callback, source);\r\n    }\r\n    function scheduleMacroTaskWithCurrentZone(source, callback, data, customSchedule, customCancel) {\r\n        return Zone.current.scheduleMacroTask(source, callback, data, customSchedule, customCancel);\r\n    }\r\n    const zoneSymbol = Zone.__symbol__;\r\n    const isWindowExists = typeof window !== 'undefined';\r\n    const internalWindow = isWindowExists ? window : undefined;\r\n    const _global = isWindowExists && internalWindow || typeof self === 'object' && self || global;\r\n    const REMOVE_ATTRIBUTE = 'removeAttribute';\r\n    const NULL_ON_PROP_VALUE = [null];\r\n    function bindArguments(args, source) {\r\n        for (let i = args.length - 1; i >= 0; i--) {\r\n            if (typeof args[i] === 'function') {\r\n                args[i] = wrapWithCurrentZone(args[i], source + '_' + i);\r\n            }\r\n        }\r\n        return args;\r\n    }\r\n    function patchPrototype(prototype, fnNames) {\r\n        const source = prototype.constructor['name'];\r\n        for (let i = 0; i < fnNames.length; i++) {\r\n            const name = fnNames[i];\r\n            const delegate = prototype[name];\r\n            if (delegate) {\r\n                const prototypeDesc = ObjectGetOwnPropertyDescriptor(prototype, name);\r\n                if (!isPropertyWritable(prototypeDesc)) {\r\n                    continue;\r\n                }\r\n                prototype[name] = ((delegate) => {\r\n                    const patched = function () {\r\n                        return delegate.apply(this, bindArguments(arguments, source + '.' + name));\r\n                    };\r\n                    attachOriginToPatched(patched, delegate);\r\n                    return patched;\r\n                })(delegate);\r\n            }\r\n        }\r\n    }\r\n    function isPropertyWritable(propertyDesc) {\r\n        if (!propertyDesc) {\r\n            return true;\r\n        }\r\n        if (propertyDesc.writable === false) {\r\n            return false;\r\n        }\r\n        return !(typeof propertyDesc.get === 'function' && typeof propertyDesc.set === 'undefined');\r\n    }\r\n    const isWebWorker = (typeof WorkerGlobalScope !== 'undefined' && self instanceof WorkerGlobalScope);\r\n    // Make sure to access `process` through `_global` so that WebPack does not accidentally browserify\r\n    // this code.\r\n    const isNode = (!('nw' in _global) && typeof _global.process !== 'undefined' &&\r\n        {}.toString.call(_global.process) === '[object process]');\r\n    const isBrowser = !isNode && !isWebWorker && !!(isWindowExists && internalWindow['HTMLElement']);\r\n    // we are in electron of nw, so we are both browser and nodejs\r\n    // Make sure to access `process` through `_global` so that WebPack does not accidentally browserify\r\n    // this code.\r\n    const isMix = typeof _global.process !== 'undefined' &&\r\n        {}.toString.call(_global.process) === '[object process]' && !isWebWorker &&\r\n        !!(isWindowExists && internalWindow['HTMLElement']);\r\n    const zoneSymbolEventNames = {};\r\n    const wrapFn = function (event) {\r\n        // https://github.com/angular/zone.js/issues/911, in IE, sometimes\r\n        // event will be undefined, so we need to use window.event\r\n        event = event || _global.event;\r\n        if (!event) {\r\n            return;\r\n        }\r\n        let eventNameSymbol = zoneSymbolEventNames[event.type];\r\n        if (!eventNameSymbol) {\r\n            eventNameSymbol = zoneSymbolEventNames[event.type] = zoneSymbol('ON_PROPERTY' + event.type);\r\n        }\r\n        const target = this || event.target || _global;\r\n        const listener = target[eventNameSymbol];\r\n        let result;\r\n        if (isBrowser && target === internalWindow && event.type === 'error') {\r\n            // window.onerror have different signiture\r\n            // https://developer.mozilla.org/en-US/docs/Web/API/GlobalEventHandlers/onerror#window.onerror\r\n            // and onerror callback will prevent default when callback return true\r\n            const errorEvent = event;\r\n            result = listener &&\r\n                listener.call(this, errorEvent.message, errorEvent.filename, errorEvent.lineno, errorEvent.colno, errorEvent.error);\r\n            if (result === true) {\r\n                event.preventDefault();\r\n            }\r\n        }\r\n        else {\r\n            result = listener && listener.apply(this, arguments);\r\n            if (result != undefined && !result) {\r\n                event.preventDefault();\r\n            }\r\n        }\r\n        return result;\r\n    };\r\n    function patchProperty(obj, prop, prototype) {\r\n        let desc = ObjectGetOwnPropertyDescriptor(obj, prop);\r\n        if (!desc && prototype) {\r\n            // when patch window object, use prototype to check prop exist or not\r\n            const prototypeDesc = ObjectGetOwnPropertyDescriptor(prototype, prop);\r\n            if (prototypeDesc) {\r\n                desc = { enumerable: true, configurable: true };\r\n            }\r\n        }\r\n        // if the descriptor not exists or is not configurable\r\n        // just return\r\n        if (!desc || !desc.configurable) {\r\n            return;\r\n        }\r\n        const onPropPatchedSymbol = zoneSymbol('on' + prop + 'patched');\r\n        if (obj.hasOwnProperty(onPropPatchedSymbol) && obj[onPropPatchedSymbol]) {\r\n            return;\r\n        }\r\n        // A property descriptor cannot have getter/setter and be writable\r\n        // deleting the writable and value properties avoids this error:\r\n        //\r\n        // TypeError: property descriptors must not specify a value or be writable when a\r\n        // getter or setter has been specified\r\n        delete desc.writable;\r\n        delete desc.value;\r\n        const originalDescGet = desc.get;\r\n        const originalDescSet = desc.set;\r\n        // substr(2) cuz 'onclick' -> 'click', etc\r\n        const eventName = prop.substr(2);\r\n        let eventNameSymbol = zoneSymbolEventNames[eventName];\r\n        if (!eventNameSymbol) {\r\n            eventNameSymbol = zoneSymbolEventNames[eventName] = zoneSymbol('ON_PROPERTY' + eventName);\r\n        }\r\n        desc.set = function (newValue) {\r\n            // in some of windows's onproperty callback, this is undefined\r\n            // so we need to check it\r\n            let target = this;\r\n            if (!target && obj === _global) {\r\n                target = _global;\r\n            }\r\n            if (!target) {\r\n                return;\r\n            }\r\n            let previousValue = target[eventNameSymbol];\r\n            if (previousValue) {\r\n                target.removeEventListener(eventName, wrapFn);\r\n            }\r\n            // issue #978, when onload handler was added before loading zone.js\r\n            // we should remove it with originalDescSet\r\n            if (originalDescSet) {\r\n                originalDescSet.apply(target, NULL_ON_PROP_VALUE);\r\n            }\r\n            if (typeof newValue === 'function') {\r\n                target[eventNameSymbol] = newValue;\r\n                target.addEventListener(eventName, wrapFn, false);\r\n            }\r\n            else {\r\n                target[eventNameSymbol] = null;\r\n            }\r\n        };\r\n        // The getter would return undefined for unassigned properties but the default value of an\r\n        // unassigned property is null\r\n        desc.get = function () {\r\n            // in some of windows's onproperty callback, this is undefined\r\n            // so we need to check it\r\n            let target = this;\r\n            if (!target && obj === _global) {\r\n                target = _global;\r\n            }\r\n            if (!target) {\r\n                return null;\r\n            }\r\n            const listener = target[eventNameSymbol];\r\n            if (listener) {\r\n                return listener;\r\n            }\r\n            else if (originalDescGet) {\r\n                // result will be null when use inline event attribute,\r\n                // such as <button onclick=\"func();\">OK</button>\r\n                // because the onclick function is internal raw uncompiled handler\r\n                // the onclick will be evaluated when first time event was triggered or\r\n                // the property is accessed, https://github.com/angular/zone.js/issues/525\r\n                // so we should use original native get to retrieve the handler\r\n                let value = originalDescGet && originalDescGet.call(this);\r\n                if (value) {\r\n                    desc.set.call(this, value);\r\n                    if (typeof target[REMOVE_ATTRIBUTE] === 'function') {\r\n                        target.removeAttribute(prop);\r\n                    }\r\n                    return value;\r\n                }\r\n            }\r\n            return null;\r\n        };\r\n        ObjectDefineProperty(obj, prop, desc);\r\n        obj[onPropPatchedSymbol] = true;\r\n    }\r\n    function patchOnProperties(obj, properties, prototype) {\r\n        if (properties) {\r\n            for (let i = 0; i < properties.length; i++) {\r\n                patchProperty(obj, 'on' + properties[i], prototype);\r\n            }\r\n        }\r\n        else {\r\n            const onProperties = [];\r\n            for (const prop in obj) {\r\n                if (prop.substr(0, 2) == 'on') {\r\n                    onProperties.push(prop);\r\n                }\r\n            }\r\n            for (let j = 0; j < onProperties.length; j++) {\r\n                patchProperty(obj, onProperties[j], prototype);\r\n            }\r\n        }\r\n    }\r\n    const originalInstanceKey = zoneSymbol('originalInstance');\r\n    // wrap some native API on `window`\r\n    function patchClass(className) {\r\n        const OriginalClass = _global[className];\r\n        if (!OriginalClass)\r\n            return;\r\n        // keep original class in global\r\n        _global[zoneSymbol(className)] = OriginalClass;\r\n        _global[className] = function () {\r\n            const a = bindArguments(arguments, className);\r\n            switch (a.length) {\r\n                case 0:\r\n                    this[originalInstanceKey] = new OriginalClass();\r\n                    break;\r\n                case 1:\r\n                    this[originalInstanceKey] = new OriginalClass(a[0]);\r\n                    break;\r\n                case 2:\r\n                    this[originalInstanceKey] = new OriginalClass(a[0], a[1]);\r\n                    break;\r\n                case 3:\r\n                    this[originalInstanceKey] = new OriginalClass(a[0], a[1], a[2]);\r\n                    break;\r\n                case 4:\r\n                    this[originalInstanceKey] = new OriginalClass(a[0], a[1], a[2], a[3]);\r\n                    break;\r\n                default:\r\n                    throw new Error('Arg list too long.');\r\n            }\r\n        };\r\n        // attach original delegate to patched function\r\n        attachOriginToPatched(_global[className], OriginalClass);\r\n        const instance = new OriginalClass(function () { });\r\n        let prop;\r\n        for (prop in instance) {\r\n            // https://bugs.webkit.org/show_bug.cgi?id=44721\r\n            if (className === 'XMLHttpRequest' && prop === 'responseBlob')\r\n                continue;\r\n            (function (prop) {\r\n                if (typeof instance[prop] === 'function') {\r\n                    _global[className].prototype[prop] = function () {\r\n                        return this[originalInstanceKey][prop].apply(this[originalInstanceKey], arguments);\r\n                    };\r\n                }\r\n                else {\r\n                    ObjectDefineProperty(_global[className].prototype, prop, {\r\n                        set: function (fn) {\r\n                            if (typeof fn === 'function') {\r\n                                this[originalInstanceKey][prop] = wrapWithCurrentZone(fn, className + '.' + prop);\r\n                                // keep callback in wrapped function so we can\r\n                                // use it in Function.prototype.toString to return\r\n                                // the native one.\r\n                                attachOriginToPatched(this[originalInstanceKey][prop], fn);\r\n                            }\r\n                            else {\r\n                                this[originalInstanceKey][prop] = fn;\r\n                            }\r\n                        },\r\n                        get: function () { return this[originalInstanceKey][prop]; }\r\n                    });\r\n                }\r\n            }(prop));\r\n        }\r\n        for (prop in OriginalClass) {\r\n            if (prop !== 'prototype' && OriginalClass.hasOwnProperty(prop)) {\r\n                _global[className][prop] = OriginalClass[prop];\r\n            }\r\n        }\r\n    }\r\n    function copySymbolProperties(src, dest) {\r\n        if (typeof Object.getOwnPropertySymbols !== 'function') {\r\n            return;\r\n        }\r\n        const symbols = Object.getOwnPropertySymbols(src);\r\n        symbols.forEach((symbol) => {\r\n            const desc = Object.getOwnPropertyDescriptor(src, symbol);\r\n            Object.defineProperty(dest, symbol, {\r\n                get: function () { return src[symbol]; },\r\n                set: function (value) {\r\n                    if (desc && (!desc.writable || typeof desc.set !== 'function')) {\r\n                        // if src[symbol] is not writable or not have a setter, just return\r\n                        return;\r\n                    }\r\n                    src[symbol] = value;\r\n                },\r\n                enumerable: desc ? desc.enumerable : true,\r\n                configurable: desc ? desc.configurable : true\r\n            });\r\n        });\r\n    }\r\n    let shouldCopySymbolProperties = false;\r\n    function patchMethod(target, name, patchFn) {\r\n        let proto = target;\r\n        while (proto && !proto.hasOwnProperty(name)) {\r\n            proto = ObjectGetPrototypeOf(proto);\r\n        }\r\n        if (!proto && target[name]) {\r\n            // somehow we did not find it, but we can see it. This happens on IE for Window properties.\r\n            proto = target;\r\n        }\r\n        const delegateName = zoneSymbol(name);\r\n        let delegate = null;\r\n        if (proto && !(delegate = proto[delegateName])) {\r\n            delegate = proto[delegateName] = proto[name];\r\n            // check whether proto[name] is writable\r\n            // some property is readonly in safari, such as HtmlCanvasElement.prototype.toBlob\r\n            const desc = proto && ObjectGetOwnPropertyDescriptor(proto, name);\r\n            if (isPropertyWritable(desc)) {\r\n                const patchDelegate = patchFn(delegate, delegateName, name);\r\n                proto[name] = function () { return patchDelegate(this, arguments); };\r\n                attachOriginToPatched(proto[name], delegate);\r\n                if (shouldCopySymbolProperties) {\r\n                    copySymbolProperties(delegate, proto[name]);\r\n                }\r\n            }\r\n        }\r\n        return delegate;\r\n    }\r\n    // TODO: @JiaLiPassion, support cancel task later if necessary\r\n    function patchMacroTask(obj, funcName, metaCreator) {\r\n        let setNative = null;\r\n        function scheduleTask(task) {\r\n            const data = task.data;\r\n            data.args[data.cbIdx] = function () { task.invoke.apply(this, arguments); };\r\n            setNative.apply(data.target, data.args);\r\n            return task;\r\n        }\r\n        setNative = patchMethod(obj, funcName, (delegate) => function (self, args) {\r\n            const meta = metaCreator(self, args);\r\n            if (meta.cbIdx >= 0 && typeof args[meta.cbIdx] === 'function') {\r\n                return scheduleMacroTaskWithCurrentZone(meta.name, args[meta.cbIdx], meta, scheduleTask);\r\n            }\r\n            else {\r\n                // cause an error by calling it directly.\r\n                return delegate.apply(self, args);\r\n            }\r\n        });\r\n    }\r\n    function attachOriginToPatched(patched, original) {\r\n        patched[zoneSymbol('OriginalDelegate')] = original;\r\n    }\r\n    let isDetectedIEOrEdge = false;\r\n    let ieOrEdge = false;\r\n    function isIE() {\r\n        try {\r\n            const ua = internalWindow.navigator.userAgent;\r\n            if (ua.indexOf('MSIE ') !== -1 || ua.indexOf('Trident/') !== -1) {\r\n                return true;\r\n            }\r\n        }\r\n        catch (error) {\r\n        }\r\n        return false;\r\n    }\r\n    function isIEOrEdge() {\r\n        if (isDetectedIEOrEdge) {\r\n            return ieOrEdge;\r\n        }\r\n        isDetectedIEOrEdge = true;\r\n        try {\r\n            const ua = internalWindow.navigator.userAgent;\r\n            if (ua.indexOf('MSIE ') !== -1 || ua.indexOf('Trident/') !== -1 || ua.indexOf('Edge/') !== -1) {\r\n                ieOrEdge = true;\r\n            }\r\n        }\r\n        catch (error) {\r\n        }\r\n        return ieOrEdge;\r\n    }\r\n\r\n    /**\r\n     * @license\r\n     * Copyright Google Inc. All Rights Reserved.\r\n     *\r\n     * Use of this source code is governed by an MIT-style license that can be\r\n     * found in the LICENSE file at https://angular.io/license\r\n     */\r\n    // override Function.prototype.toString to make zone.js patched function\r\n    // look like native function\r\n    Zone.__load_patch('toString', (global) => {\r\n        // patch Func.prototype.toString to let them look like native\r\n        const originalFunctionToString = Function.prototype.toString;\r\n        const ORIGINAL_DELEGATE_SYMBOL = zoneSymbol('OriginalDelegate');\r\n        const PROMISE_SYMBOL = zoneSymbol('Promise');\r\n        const ERROR_SYMBOL = zoneSymbol('Error');\r\n        const newFunctionToString = function toString() {\r\n            if (typeof this === 'function') {\r\n                const originalDelegate = this[ORIGINAL_DELEGATE_SYMBOL];\r\n                if (originalDelegate) {\r\n                    if (typeof originalDelegate === 'function') {\r\n                        return originalFunctionToString.call(originalDelegate);\r\n                    }\r\n                    else {\r\n                        return Object.prototype.toString.call(originalDelegate);\r\n                    }\r\n                }\r\n                if (this === Promise) {\r\n                    const nativePromise = global[PROMISE_SYMBOL];\r\n                    if (nativePromise) {\r\n                        return originalFunctionToString.call(nativePromise);\r\n                    }\r\n                }\r\n                if (this === Error) {\r\n                    const nativeError = global[ERROR_SYMBOL];\r\n                    if (nativeError) {\r\n                        return originalFunctionToString.call(nativeError);\r\n                    }\r\n                }\r\n            }\r\n            return originalFunctionToString.call(this);\r\n        };\r\n        newFunctionToString[ORIGINAL_DELEGATE_SYMBOL] = originalFunctionToString;\r\n        Function.prototype.toString = newFunctionToString;\r\n        // patch Object.prototype.toString to let them look like native\r\n        const originalObjectToString = Object.prototype.toString;\r\n        const PROMISE_OBJECT_TO_STRING = '[object Promise]';\r\n        Object.prototype.toString = function () {\r\n            if (this instanceof Promise) {\r\n                return PROMISE_OBJECT_TO_STRING;\r\n            }\r\n            return originalObjectToString.call(this);\r\n        };\r\n    });\r\n\r\n    /**\r\n     * @license\r\n     * Copyright Google Inc. All Rights Reserved.\r\n     *\r\n     * Use of this source code is governed by an MIT-style license that can be\r\n     * found in the LICENSE file at https://angular.io/license\r\n     */\r\n    let passiveSupported = false;\r\n    if (typeof window !== 'undefined') {\r\n        try {\r\n            const options = Object.defineProperty({}, 'passive', { get: function () { passiveSupported = true; } });\r\n            window.addEventListener('test', options, options);\r\n            window.removeEventListener('test', options, options);\r\n        }\r\n        catch (err) {\r\n            passiveSupported = false;\r\n        }\r\n    }\r\n    // an identifier to tell ZoneTask do not create a new invoke closure\r\n    const OPTIMIZED_ZONE_EVENT_TASK_DATA = {\r\n        useG: true\r\n    };\r\n    const zoneSymbolEventNames$1 = {};\r\n    const globalSources = {};\r\n    const EVENT_NAME_SYMBOL_REGX = new RegExp('^' + ZONE_SYMBOL_PREFIX + '(\\\\w+)(true|false)$');\r\n    const IMMEDIATE_PROPAGATION_SYMBOL = zoneSymbol('propagationStopped');\r\n    function prepareEventNames(eventName, eventNameToString) {\r\n        const falseEventName = (eventNameToString ? eventNameToString(eventName) : eventName) + FALSE_STR;\r\n        const trueEventName = (eventNameToString ? eventNameToString(eventName) : eventName) + TRUE_STR;\r\n        const symbol = ZONE_SYMBOL_PREFIX + falseEventName;\r\n        const symbolCapture = ZONE_SYMBOL_PREFIX + trueEventName;\r\n        zoneSymbolEventNames$1[eventName] = {};\r\n        zoneSymbolEventNames$1[eventName][FALSE_STR] = symbol;\r\n        zoneSymbolEventNames$1[eventName][TRUE_STR] = symbolCapture;\r\n    }\r\n    function patchEventTarget(_global, apis, patchOptions) {\r\n        const ADD_EVENT_LISTENER = (patchOptions && patchOptions.add) || ADD_EVENT_LISTENER_STR;\r\n        const REMOVE_EVENT_LISTENER = (patchOptions && patchOptions.rm) || REMOVE_EVENT_LISTENER_STR;\r\n        const LISTENERS_EVENT_LISTENER = (patchOptions && patchOptions.listeners) || 'eventListeners';\r\n        const REMOVE_ALL_LISTENERS_EVENT_LISTENER = (patchOptions && patchOptions.rmAll) || 'removeAllListeners';\r\n        const zoneSymbolAddEventListener = zoneSymbol(ADD_EVENT_LISTENER);\r\n        const ADD_EVENT_LISTENER_SOURCE = '.' + ADD_EVENT_LISTENER + ':';\r\n        const PREPEND_EVENT_LISTENER = 'prependListener';\r\n        const PREPEND_EVENT_LISTENER_SOURCE = '.' + PREPEND_EVENT_LISTENER + ':';\r\n        const invokeTask = function (task, target, event) {\r\n            // for better performance, check isRemoved which is set\r\n            // by removeEventListener\r\n            if (task.isRemoved) {\r\n                return;\r\n            }\r\n            const delegate = task.callback;\r\n            if (typeof delegate === 'object' && delegate.handleEvent) {\r\n                // create the bind version of handleEvent when invoke\r\n                task.callback = (event) => delegate.handleEvent(event);\r\n                task.originalDelegate = delegate;\r\n            }\r\n            // invoke static task.invoke\r\n            task.invoke(task, target, [event]);\r\n            const options = task.options;\r\n            if (options && typeof options === 'object' && options.once) {\r\n                // if options.once is true, after invoke once remove listener here\r\n                // only browser need to do this, nodejs eventEmitter will cal removeListener\r\n                // inside EventEmitter.once\r\n                const delegate = task.originalDelegate ? task.originalDelegate : task.callback;\r\n                target[REMOVE_EVENT_LISTENER].call(target, event.type, delegate, options);\r\n            }\r\n        };\r\n        // global shared zoneAwareCallback to handle all event callback with capture = false\r\n        const globalZoneAwareCallback = function (event) {\r\n            // https://github.com/angular/zone.js/issues/911, in IE, sometimes\r\n            // event will be undefined, so we need to use window.event\r\n            event = event || _global.event;\r\n            if (!event) {\r\n                return;\r\n            }\r\n            // event.target is needed for Samsung TV and SourceBuffer\r\n            // || global is needed https://github.com/angular/zone.js/issues/190\r\n            const target = this || event.target || _global;\r\n            const tasks = target[zoneSymbolEventNames$1[event.type][FALSE_STR]];\r\n            if (tasks) {\r\n                // invoke all tasks which attached to current target with given event.type and capture = false\r\n                // for performance concern, if task.length === 1, just invoke\r\n                if (tasks.length === 1) {\r\n                    invokeTask(tasks[0], target, event);\r\n                }\r\n                else {\r\n                    // https://github.com/angular/zone.js/issues/836\r\n                    // copy the tasks array before invoke, to avoid\r\n                    // the callback will remove itself or other listener\r\n                    const copyTasks = tasks.slice();\r\n                    for (let i = 0; i < copyTasks.length; i++) {\r\n                        if (event && event[IMMEDIATE_PROPAGATION_SYMBOL] === true) {\r\n                            break;\r\n                        }\r\n                        invokeTask(copyTasks[i], target, event);\r\n                    }\r\n                }\r\n            }\r\n        };\r\n        // global shared zoneAwareCallback to handle all event callback with capture = true\r\n        const globalZoneAwareCaptureCallback = function (event) {\r\n            // https://github.com/angular/zone.js/issues/911, in IE, sometimes\r\n            // event will be undefined, so we need to use window.event\r\n            event = event || _global.event;\r\n            if (!event) {\r\n                return;\r\n            }\r\n            // event.target is needed for Samsung TV and SourceBuffer\r\n            // || global is needed https://github.com/angular/zone.js/issues/190\r\n            const target = this || event.target || _global;\r\n            const tasks = target[zoneSymbolEventNames$1[event.type][TRUE_STR]];\r\n            if (tasks) {\r\n                // invoke all tasks which attached to current target with given event.type and capture = false\r\n                // for performance concern, if task.length === 1, just invoke\r\n                if (tasks.length === 1) {\r\n                    invokeTask(tasks[0], target, event);\r\n                }\r\n                else {\r\n                    // https://github.com/angular/zone.js/issues/836\r\n                    // copy the tasks array before invoke, to avoid\r\n                    // the callback will remove itself or other listener\r\n                    const copyTasks = tasks.slice();\r\n                    for (let i = 0; i < copyTasks.length; i++) {\r\n                        if (event && event[IMMEDIATE_PROPAGATION_SYMBOL] === true) {\r\n                            break;\r\n                        }\r\n                        invokeTask(copyTasks[i], target, event);\r\n                    }\r\n                }\r\n            }\r\n        };\r\n        function patchEventTargetMethods(obj, patchOptions) {\r\n            if (!obj) {\r\n                return false;\r\n            }\r\n            let useGlobalCallback = true;\r\n            if (patchOptions && patchOptions.useG !== undefined) {\r\n                useGlobalCallback = patchOptions.useG;\r\n            }\r\n            const validateHandler = patchOptions && patchOptions.vh;\r\n            let checkDuplicate = true;\r\n            if (patchOptions && patchOptions.chkDup !== undefined) {\r\n                checkDuplicate = patchOptions.chkDup;\r\n            }\r\n            let returnTarget = false;\r\n            if (patchOptions && patchOptions.rt !== undefined) {\r\n                returnTarget = patchOptions.rt;\r\n            }\r\n            let proto = obj;\r\n            while (proto && !proto.hasOwnProperty(ADD_EVENT_LISTENER)) {\r\n                proto = ObjectGetPrototypeOf(proto);\r\n            }\r\n            if (!proto && obj[ADD_EVENT_LISTENER]) {\r\n                // somehow we did not find it, but we can see it. This happens on IE for Window properties.\r\n                proto = obj;\r\n            }\r\n            if (!proto) {\r\n                return false;\r\n            }\r\n            if (proto[zoneSymbolAddEventListener]) {\r\n                return false;\r\n            }\r\n            const eventNameToString = patchOptions && patchOptions.eventNameToString;\r\n            // a shared global taskData to pass data for scheduleEventTask\r\n            // so we do not need to create a new object just for pass some data\r\n            const taskData = {};\r\n            const nativeAddEventListener = proto[zoneSymbolAddEventListener] = proto[ADD_EVENT_LISTENER];\r\n            const nativeRemoveEventListener = proto[zoneSymbol(REMOVE_EVENT_LISTENER)] =\r\n                proto[REMOVE_EVENT_LISTENER];\r\n            const nativeListeners = proto[zoneSymbol(LISTENERS_EVENT_LISTENER)] =\r\n                proto[LISTENERS_EVENT_LISTENER];\r\n            const nativeRemoveAllListeners = proto[zoneSymbol(REMOVE_ALL_LISTENERS_EVENT_LISTENER)] =\r\n                proto[REMOVE_ALL_LISTENERS_EVENT_LISTENER];\r\n            let nativePrependEventListener;\r\n            if (patchOptions && patchOptions.prepend) {\r\n                nativePrependEventListener = proto[zoneSymbol(patchOptions.prepend)] =\r\n                    proto[patchOptions.prepend];\r\n            }\r\n            /**\r\n             * This util function will build an option object with passive option\r\n             * to handle all possible input from the user.\r\n             */\r\n            function buildEventListenerOptions(options, passive) {\r\n                if (!passiveSupported && typeof options === 'object' && options) {\r\n                    // doesn't support passive but user want to pass an object as options.\r\n                    // this will not work on some old browser, so we just pass a boolean\r\n                    // as useCapture parameter\r\n                    return !!options.capture;\r\n                }\r\n                if (!passiveSupported || !passive) {\r\n                    return options;\r\n                }\r\n                if (typeof options === 'boolean') {\r\n                    return { capture: options, passive: true };\r\n                }\r\n                if (!options) {\r\n                    return { passive: true };\r\n                }\r\n                if (typeof options === 'object' && options.passive !== false) {\r\n                    return Object.assign(Object.assign({}, options), { passive: true });\r\n                }\r\n                return options;\r\n            }\r\n            const customScheduleGlobal = function (task) {\r\n                // if there is already a task for the eventName + capture,\r\n                // just return, because we use the shared globalZoneAwareCallback here.\r\n                if (taskData.isExisting) {\r\n                    return;\r\n                }\r\n                return nativeAddEventListener.call(taskData.target, taskData.eventName, taskData.capture ? globalZoneAwareCaptureCallback : globalZoneAwareCallback, taskData.options);\r\n            };\r\n            const customCancelGlobal = function (task) {\r\n                // if task is not marked as isRemoved, this call is directly\r\n                // from Zone.prototype.cancelTask, we should remove the task\r\n                // from tasksList of target first\r\n                if (!task.isRemoved) {\r\n                    const symbolEventNames = zoneSymbolEventNames$1[task.eventName];\r\n                    let symbolEventName;\r\n                    if (symbolEventNames) {\r\n                        symbolEventName = symbolEventNames[task.capture ? TRUE_STR : FALSE_STR];\r\n                    }\r\n                    const existingTasks = symbolEventName && task.target[symbolEventName];\r\n                    if (existingTasks) {\r\n                        for (let i = 0; i < existingTasks.length; i++) {\r\n                            const existingTask = existingTasks[i];\r\n                            if (existingTask === task) {\r\n                                existingTasks.splice(i, 1);\r\n                                // set isRemoved to data for faster invokeTask check\r\n                                task.isRemoved = true;\r\n                                if (existingTasks.length === 0) {\r\n                                    // all tasks for the eventName + capture have gone,\r\n                                    // remove globalZoneAwareCallback and remove the task cache from target\r\n                                    task.allRemoved = true;\r\n                                    task.target[symbolEventName] = null;\r\n                                }\r\n                                break;\r\n                            }\r\n                        }\r\n                    }\r\n                }\r\n                // if all tasks for the eventName + capture have gone,\r\n                // we will really remove the global event callback,\r\n                // if not, return\r\n                if (!task.allRemoved) {\r\n                    return;\r\n                }\r\n                return nativeRemoveEventListener.call(task.target, task.eventName, task.capture ? globalZoneAwareCaptureCallback : globalZoneAwareCallback, task.options);\r\n            };\r\n            const customScheduleNonGlobal = function (task) {\r\n                return nativeAddEventListener.call(taskData.target, taskData.eventName, task.invoke, taskData.options);\r\n            };\r\n            const customSchedulePrepend = function (task) {\r\n                return nativePrependEventListener.call(taskData.target, taskData.eventName, task.invoke, taskData.options);\r\n            };\r\n            const customCancelNonGlobal = function (task) {\r\n                return nativeRemoveEventListener.call(task.target, task.eventName, task.invoke, task.options);\r\n            };\r\n            const customSchedule = useGlobalCallback ? customScheduleGlobal : customScheduleNonGlobal;\r\n            const customCancel = useGlobalCallback ? customCancelGlobal : customCancelNonGlobal;\r\n            const compareTaskCallbackVsDelegate = function (task, delegate) {\r\n                const typeOfDelegate = typeof delegate;\r\n                return (typeOfDelegate === 'function' && task.callback === delegate) ||\r\n                    (typeOfDelegate === 'object' && task.originalDelegate === delegate);\r\n            };\r\n            const compare = (patchOptions && patchOptions.diff) ? patchOptions.diff : compareTaskCallbackVsDelegate;\r\n            const blackListedEvents = Zone[zoneSymbol('BLACK_LISTED_EVENTS')];\r\n            const passiveEvents = _global[zoneSymbol('PASSIVE_EVENTS')];\r\n            const makeAddListener = function (nativeListener, addSource, customScheduleFn, customCancelFn, returnTarget = false, prepend = false) {\r\n                return function () {\r\n                    const target = this || _global;\r\n                    let eventName = arguments[0];\r\n                    if (patchOptions && patchOptions.transferEventName) {\r\n                        eventName = patchOptions.transferEventName(eventName);\r\n                    }\r\n                    let delegate = arguments[1];\r\n                    if (!delegate) {\r\n                        return nativeListener.apply(this, arguments);\r\n                    }\r\n                    if (isNode && eventName === 'uncaughtException') {\r\n                        // don't patch uncaughtException of nodejs to prevent endless loop\r\n                        return nativeListener.apply(this, arguments);\r\n                    }\r\n                    // don't create the bind delegate function for handleEvent\r\n                    // case here to improve addEventListener performance\r\n                    // we will create the bind delegate when invoke\r\n                    let isHandleEvent = false;\r\n                    if (typeof delegate !== 'function') {\r\n                        if (!delegate.handleEvent) {\r\n                            return nativeListener.apply(this, arguments);\r\n                        }\r\n                        isHandleEvent = true;\r\n                    }\r\n                    if (validateHandler && !validateHandler(nativeListener, delegate, target, arguments)) {\r\n                        return;\r\n                    }\r\n                    const passive = passiveSupported && !!passiveEvents && passiveEvents.indexOf(eventName) !== -1;\r\n                    const options = buildEventListenerOptions(arguments[2], passive);\r\n                    if (blackListedEvents) {\r\n                        // check black list\r\n                        for (let i = 0; i < blackListedEvents.length; i++) {\r\n                            if (eventName === blackListedEvents[i]) {\r\n                                if (passive) {\r\n                                    return nativeListener.call(target, eventName, delegate, options);\r\n                                }\r\n                                else {\r\n                                    return nativeListener.apply(this, arguments);\r\n                                }\r\n                            }\r\n                        }\r\n                    }\r\n                    const capture = !options ? false : typeof options === 'boolean' ? true : options.capture;\r\n                    const once = options && typeof options === 'object' ? options.once : false;\r\n                    const zone = Zone.current;\r\n                    let symbolEventNames = zoneSymbolEventNames$1[eventName];\r\n                    if (!symbolEventNames) {\r\n                        prepareEventNames(eventName, eventNameToString);\r\n                        symbolEventNames = zoneSymbolEventNames$1[eventName];\r\n                    }\r\n                    const symbolEventName = symbolEventNames[capture ? TRUE_STR : FALSE_STR];\r\n                    let existingTasks = target[symbolEventName];\r\n                    let isExisting = false;\r\n                    if (existingTasks) {\r\n                        // already have task registered\r\n                        isExisting = true;\r\n                        if (checkDuplicate) {\r\n                            for (let i = 0; i < existingTasks.length; i++) {\r\n                                if (compare(existingTasks[i], delegate)) {\r\n                                    // same callback, same capture, same event name, just return\r\n                                    return;\r\n                                }\r\n                            }\r\n                        }\r\n                    }\r\n                    else {\r\n                        existingTasks = target[symbolEventName] = [];\r\n                    }\r\n                    let source;\r\n                    const constructorName = target.constructor['name'];\r\n                    const targetSource = globalSources[constructorName];\r\n                    if (targetSource) {\r\n                        source = targetSource[eventName];\r\n                    }\r\n                    if (!source) {\r\n                        source = constructorName + addSource +\r\n                            (eventNameToString ? eventNameToString(eventName) : eventName);\r\n                    }\r\n                    // do not create a new object as task.data to pass those things\r\n                    // just use the global shared one\r\n                    taskData.options = options;\r\n                    if (once) {\r\n                        // if addEventListener with once options, we don't pass it to\r\n                        // native addEventListener, instead we keep the once setting\r\n                        // and handle ourselves.\r\n                        taskData.options.once = false;\r\n                    }\r\n                    taskData.target = target;\r\n                    taskData.capture = capture;\r\n                    taskData.eventName = eventName;\r\n                    taskData.isExisting = isExisting;\r\n                    const data = useGlobalCallback ? OPTIMIZED_ZONE_EVENT_TASK_DATA : undefined;\r\n                    // keep taskData into data to allow onScheduleEventTask to access the task information\r\n                    if (data) {\r\n                        data.taskData = taskData;\r\n                    }\r\n                    const task = zone.scheduleEventTask(source, delegate, data, customScheduleFn, customCancelFn);\r\n                    // should clear taskData.target to avoid memory leak\r\n                    // issue, https://github.com/angular/angular/issues/20442\r\n                    taskData.target = null;\r\n                    // need to clear up taskData because it is a global object\r\n                    if (data) {\r\n                        data.taskData = null;\r\n                    }\r\n                    // have to save those information to task in case\r\n                    // application may call task.zone.cancelTask() directly\r\n                    if (once) {\r\n                        options.once = true;\r\n                    }\r\n                    if (!(!passiveSupported && typeof task.options === 'boolean')) {\r\n                        // if not support passive, and we pass an option object\r\n                        // to addEventListener, we should save the options to task\r\n                        task.options = options;\r\n                    }\r\n                    task.target = target;\r\n                    task.capture = capture;\r\n                    task.eventName = eventName;\r\n                    if (isHandleEvent) {\r\n                        // save original delegate for compare to check duplicate\r\n                        task.originalDelegate = delegate;\r\n                    }\r\n                    if (!prepend) {\r\n                        existingTasks.push(task);\r\n                    }\r\n                    else {\r\n                        existingTasks.unshift(task);\r\n                    }\r\n                    if (returnTarget) {\r\n                        return target;\r\n                    }\r\n                };\r\n            };\r\n            proto[ADD_EVENT_LISTENER] = makeAddListener(nativeAddEventListener, ADD_EVENT_LISTENER_SOURCE, customSchedule, customCancel, returnTarget);\r\n            if (nativePrependEventListener) {\r\n                proto[PREPEND_EVENT_LISTENER] = makeAddListener(nativePrependEventListener, PREPEND_EVENT_LISTENER_SOURCE, customSchedulePrepend, customCancel, returnTarget, true);\r\n            }\r\n            proto[REMOVE_EVENT_LISTENER] = function () {\r\n                const target = this || _global;\r\n                let eventName = arguments[0];\r\n                if (patchOptions && patchOptions.transferEventName) {\r\n                    eventName = patchOptions.transferEventName(eventName);\r\n                }\r\n                const options = arguments[2];\r\n                const capture = !options ? false : typeof options === 'boolean' ? true : options.capture;\r\n                const delegate = arguments[1];\r\n                if (!delegate) {\r\n                    return nativeRemoveEventListener.apply(this, arguments);\r\n                }\r\n                if (validateHandler &&\r\n                    !validateHandler(nativeRemoveEventListener, delegate, target, arguments)) {\r\n                    return;\r\n                }\r\n                const symbolEventNames = zoneSymbolEventNames$1[eventName];\r\n                let symbolEventName;\r\n                if (symbolEventNames) {\r\n                    symbolEventName = symbolEventNames[capture ? TRUE_STR : FALSE_STR];\r\n                }\r\n                const existingTasks = symbolEventName && target[symbolEventName];\r\n                if (existingTasks) {\r\n                    for (let i = 0; i < existingTasks.length; i++) {\r\n                        const existingTask = existingTasks[i];\r\n                        if (compare(existingTask, delegate)) {\r\n                            existingTasks.splice(i, 1);\r\n                            // set isRemoved to data for faster invokeTask check\r\n                            existingTask.isRemoved = true;\r\n                            if (existingTasks.length === 0) {\r\n                                // all tasks for the eventName + capture have gone,\r\n                                // remove globalZoneAwareCallback and remove the task cache from target\r\n                                existingTask.allRemoved = true;\r\n                                target[symbolEventName] = null;\r\n                                // in the target, we have an event listener which is added by on_property\r\n                                // such as target.onclick = function() {}, so we need to clear this internal\r\n                                // property too if all delegates all removed\r\n                                if (typeof eventName === 'string') {\r\n                                    const onPropertySymbol = ZONE_SYMBOL_PREFIX + 'ON_PROPERTY' + eventName;\r\n                                    target[onPropertySymbol] = null;\r\n                                }\r\n                            }\r\n                            existingTask.zone.cancelTask(existingTask);\r\n                            if (returnTarget) {\r\n                                return target;\r\n                            }\r\n                            return;\r\n                        }\r\n                    }\r\n                }\r\n                // issue 930, didn't find the event name or callback\r\n                // from zone kept existingTasks, the callback maybe\r\n                // added outside of zone, we need to call native removeEventListener\r\n                // to try to remove it.\r\n                return nativeRemoveEventListener.apply(this, arguments);\r\n            };\r\n            proto[LISTENERS_EVENT_LISTENER] = function () {\r\n                const target = this || _global;\r\n                let eventName = arguments[0];\r\n                if (patchOptions && patchOptions.transferEventName) {\r\n                    eventName = patchOptions.transferEventName(eventName);\r\n                }\r\n                const listeners = [];\r\n                const tasks = findEventTasks(target, eventNameToString ? eventNameToString(eventName) : eventName);\r\n                for (let i = 0; i < tasks.length; i++) {\r\n                    const task = tasks[i];\r\n                    let delegate = task.originalDelegate ? task.originalDelegate : task.callback;\r\n                    listeners.push(delegate);\r\n                }\r\n                return listeners;\r\n            };\r\n            proto[REMOVE_ALL_LISTENERS_EVENT_LISTENER] = function () {\r\n                const target = this || _global;\r\n                let eventName = arguments[0];\r\n                if (!eventName) {\r\n                    const keys = Object.keys(target);\r\n                    for (let i = 0; i < keys.length; i++) {\r\n                        const prop = keys[i];\r\n                        const match = EVENT_NAME_SYMBOL_REGX.exec(prop);\r\n                        let evtName = match && match[1];\r\n                        // in nodejs EventEmitter, removeListener event is\r\n                        // used for monitoring the removeListener call,\r\n                        // so just keep removeListener eventListener until\r\n                        // all other eventListeners are removed\r\n                        if (evtName && evtName !== 'removeListener') {\r\n                            this[REMOVE_ALL_LISTENERS_EVENT_LISTENER].call(this, evtName);\r\n                        }\r\n                    }\r\n                    // remove removeListener listener finally\r\n                    this[REMOVE_ALL_LISTENERS_EVENT_LISTENER].call(this, 'removeListener');\r\n                }\r\n                else {\r\n                    if (patchOptions && patchOptions.transferEventName) {\r\n                        eventName = patchOptions.transferEventName(eventName);\r\n                    }\r\n                    const symbolEventNames = zoneSymbolEventNames$1[eventName];\r\n                    if (symbolEventNames) {\r\n                        const symbolEventName = symbolEventNames[FALSE_STR];\r\n                        const symbolCaptureEventName = symbolEventNames[TRUE_STR];\r\n                        const tasks = target[symbolEventName];\r\n                        const captureTasks = target[symbolCaptureEventName];\r\n                        if (tasks) {\r\n                            const removeTasks = tasks.slice();\r\n                            for (let i = 0; i < removeTasks.length; i++) {\r\n                                const task = removeTasks[i];\r\n                                let delegate = task.originalDelegate ? task.originalDelegate : task.callback;\r\n                                this[REMOVE_EVENT_LISTENER].call(this, eventName, delegate, task.options);\r\n                            }\r\n                        }\r\n                        if (captureTasks) {\r\n                            const removeTasks = captureTasks.slice();\r\n                            for (let i = 0; i < removeTasks.length; i++) {\r\n                                const task = removeTasks[i];\r\n                                let delegate = task.originalDelegate ? task.originalDelegate : task.callback;\r\n                                this[REMOVE_EVENT_LISTENER].call(this, eventName, delegate, task.options);\r\n                            }\r\n                        }\r\n                    }\r\n                }\r\n                if (returnTarget) {\r\n                    return this;\r\n                }\r\n            };\r\n            // for native toString patch\r\n            attachOriginToPatched(proto[ADD_EVENT_LISTENER], nativeAddEventListener);\r\n            attachOriginToPatched(proto[REMOVE_EVENT_LISTENER], nativeRemoveEventListener);\r\n            if (nativeRemoveAllListeners) {\r\n                attachOriginToPatched(proto[REMOVE_ALL_LISTENERS_EVENT_LISTENER], nativeRemoveAllListeners);\r\n            }\r\n            if (nativeListeners) {\r\n                attachOriginToPatched(proto[LISTENERS_EVENT_LISTENER], nativeListeners);\r\n            }\r\n            return true;\r\n        }\r\n        let results = [];\r\n        for (let i = 0; i < apis.length; i++) {\r\n            results[i] = patchEventTargetMethods(apis[i], patchOptions);\r\n        }\r\n        return results;\r\n    }\r\n    function findEventTasks(target, eventName) {\r\n        if (!eventName) {\r\n            const foundTasks = [];\r\n            for (let prop in target) {\r\n                const match = EVENT_NAME_SYMBOL_REGX.exec(prop);\r\n                let evtName = match && match[1];\r\n                if (evtName && (!eventName || evtName === eventName)) {\r\n                    const tasks = target[prop];\r\n                    if (tasks) {\r\n                        for (let i = 0; i < tasks.length; i++) {\r\n                            foundTasks.push(tasks[i]);\r\n                        }\r\n                    }\r\n                }\r\n            }\r\n            return foundTasks;\r\n        }\r\n        let symbolEventName = zoneSymbolEventNames$1[eventName];\r\n        if (!symbolEventName) {\r\n            prepareEventNames(eventName);\r\n            symbolEventName = zoneSymbolEventNames$1[eventName];\r\n        }\r\n        const captureFalseTasks = target[symbolEventName[FALSE_STR]];\r\n        const captureTrueTasks = target[symbolEventName[TRUE_STR]];\r\n        if (!captureFalseTasks) {\r\n            return captureTrueTasks ? captureTrueTasks.slice() : [];\r\n        }\r\n        else {\r\n            return captureTrueTasks ? captureFalseTasks.concat(captureTrueTasks) :\r\n                captureFalseTasks.slice();\r\n        }\r\n    }\r\n    function patchEventPrototype(global, api) {\r\n        const Event = global['Event'];\r\n        if (Event && Event.prototype) {\r\n            api.patchMethod(Event.prototype, 'stopImmediatePropagation', (delegate) => function (self, args) {\r\n                self[IMMEDIATE_PROPAGATION_SYMBOL] = true;\r\n                // we need to call the native stopImmediatePropagation\r\n                // in case in some hybrid application, some part of\r\n                // application will be controlled by zone, some are not\r\n                delegate && delegate.apply(self, args);\r\n            });\r\n        }\r\n    }\r\n\r\n    /**\r\n     * @license\r\n     * Copyright Google Inc. All Rights Reserved.\r\n     *\r\n     * Use of this source code is governed by an MIT-style license that can be\r\n     * found in the LICENSE file at https://angular.io/license\r\n     */\r\n    function patchCallbacks(api, target, targetName, method, callbacks) {\r\n        const symbol = Zone.__symbol__(method);\r\n        if (target[symbol]) {\r\n            return;\r\n        }\r\n        const nativeDelegate = target[symbol] = target[method];\r\n        target[method] = function (name, opts, options) {\r\n            if (opts && opts.prototype) {\r\n                callbacks.forEach(function (callback) {\r\n                    const source = `${targetName}.${method}::` + callback;\r\n                    const prototype = opts.prototype;\r\n                    if (prototype.hasOwnProperty(callback)) {\r\n                        const descriptor = api.ObjectGetOwnPropertyDescriptor(prototype, callback);\r\n                        if (descriptor && descriptor.value) {\r\n                            descriptor.value = api.wrapWithCurrentZone(descriptor.value, source);\r\n                            api._redefineProperty(opts.prototype, callback, descriptor);\r\n                        }\r\n                        else if (prototype[callback]) {\r\n                            prototype[callback] = api.wrapWithCurrentZone(prototype[callback], source);\r\n                        }\r\n                    }\r\n                    else if (prototype[callback]) {\r\n                        prototype[callback] = api.wrapWithCurrentZone(prototype[callback], source);\r\n                    }\r\n                });\r\n            }\r\n            return nativeDelegate.call(target, name, opts, options);\r\n        };\r\n        api.attachOriginToPatched(target[method], nativeDelegate);\r\n    }\r\n\r\n    /**\r\n     * @license\r\n     * Copyright Google Inc. All Rights Reserved.\r\n     *\r\n     * Use of this source code is governed by an MIT-style license that can be\r\n     * found in the LICENSE file at https://angular.io/license\r\n     */\r\n    const globalEventHandlersEventNames = [\r\n        'abort',\r\n        'animationcancel',\r\n        'animationend',\r\n        'animationiteration',\r\n        'auxclick',\r\n        'beforeinput',\r\n        'blur',\r\n        'cancel',\r\n        'canplay',\r\n        'canplaythrough',\r\n        'change',\r\n        'compositionstart',\r\n        'compositionupdate',\r\n        'compositionend',\r\n        'cuechange',\r\n        'click',\r\n        'close',\r\n        'contextmenu',\r\n        'curechange',\r\n        'dblclick',\r\n        'drag',\r\n        'dragend',\r\n        'dragenter',\r\n        'dragexit',\r\n        'dragleave',\r\n        'dragover',\r\n        'drop',\r\n        'durationchange',\r\n        'emptied',\r\n        'ended',\r\n        'error',\r\n        'focus',\r\n        'focusin',\r\n        'focusout',\r\n        'gotpointercapture',\r\n        'input',\r\n        'invalid',\r\n        'keydown',\r\n        'keypress',\r\n        'keyup',\r\n        'load',\r\n        'loadstart',\r\n        'loadeddata',\r\n        'loadedmetadata',\r\n        'lostpointercapture',\r\n        'mousedown',\r\n        'mouseenter',\r\n        'mouseleave',\r\n        'mousemove',\r\n        'mouseout',\r\n        'mouseover',\r\n        'mouseup',\r\n        'mousewheel',\r\n        'orientationchange',\r\n        'pause',\r\n        'play',\r\n        'playing',\r\n        'pointercancel',\r\n        'pointerdown',\r\n        'pointerenter',\r\n        'pointerleave',\r\n        'pointerlockchange',\r\n        'mozpointerlockchange',\r\n        'webkitpointerlockerchange',\r\n        'pointerlockerror',\r\n        'mozpointerlockerror',\r\n        'webkitpointerlockerror',\r\n        'pointermove',\r\n        'pointout',\r\n        'pointerover',\r\n        'pointerup',\r\n        'progress',\r\n        'ratechange',\r\n        'reset',\r\n        'resize',\r\n        'scroll',\r\n        'seeked',\r\n        'seeking',\r\n        'select',\r\n        'selectionchange',\r\n        'selectstart',\r\n        'show',\r\n        'sort',\r\n        'stalled',\r\n        'submit',\r\n        'suspend',\r\n        'timeupdate',\r\n        'volumechange',\r\n        'touchcancel',\r\n        'touchmove',\r\n        'touchstart',\r\n        'touchend',\r\n        'transitioncancel',\r\n        'transitionend',\r\n        'waiting',\r\n        'wheel'\r\n    ];\r\n    const documentEventNames = [\r\n        'afterscriptexecute', 'beforescriptexecute', 'DOMContentLoaded', 'freeze', 'fullscreenchange',\r\n        'mozfullscreenchange', 'webkitfullscreenchange', 'msfullscreenchange', 'fullscreenerror',\r\n        'mozfullscreenerror', 'webkitfullscreenerror', 'msfullscreenerror', 'readystatechange',\r\n        'visibilitychange', 'resume'\r\n    ];\r\n    const windowEventNames = [\r\n        'absolutedeviceorientation',\r\n        'afterinput',\r\n        'afterprint',\r\n        'appinstalled',\r\n        'beforeinstallprompt',\r\n        'beforeprint',\r\n        'beforeunload',\r\n        'devicelight',\r\n        'devicemotion',\r\n        'deviceorientation',\r\n        'deviceorientationabsolute',\r\n        'deviceproximity',\r\n        'hashchange',\r\n        'languagechange',\r\n        'message',\r\n        'mozbeforepaint',\r\n        'offline',\r\n        'online',\r\n        'paint',\r\n        'pageshow',\r\n        'pagehide',\r\n        'popstate',\r\n        'rejectionhandled',\r\n        'storage',\r\n        'unhandledrejection',\r\n        'unload',\r\n        'userproximity',\r\n        'vrdisplayconnected',\r\n        'vrdisplaydisconnected',\r\n        'vrdisplaypresentchange'\r\n    ];\r\n    const htmlElementEventNames = [\r\n        'beforecopy', 'beforecut', 'beforepaste', 'copy', 'cut', 'paste', 'dragstart', 'loadend',\r\n        'animationstart', 'search', 'transitionrun', 'transitionstart', 'webkitanimationend',\r\n        'webkitanimationiteration', 'webkitanimationstart', 'webkittransitionend'\r\n    ];\r\n    const mediaElementEventNames = ['encrypted', 'waitingforkey', 'msneedkey', 'mozinterruptbegin', 'mozinterruptend'];\r\n    const ieElementEventNames = [\r\n        'activate',\r\n        'afterupdate',\r\n        'ariarequest',\r\n        'beforeactivate',\r\n        'beforedeactivate',\r\n        'beforeeditfocus',\r\n        'beforeupdate',\r\n        'cellchange',\r\n        'controlselect',\r\n        'dataavailable',\r\n        'datasetchanged',\r\n        'datasetcomplete',\r\n        'errorupdate',\r\n        'filterchange',\r\n        'layoutcomplete',\r\n        'losecapture',\r\n        'move',\r\n        'moveend',\r\n        'movestart',\r\n        'propertychange',\r\n        'resizeend',\r\n        'resizestart',\r\n        'rowenter',\r\n        'rowexit',\r\n        'rowsdelete',\r\n        'rowsinserted',\r\n        'command',\r\n        'compassneedscalibration',\r\n        'deactivate',\r\n        'help',\r\n        'mscontentzoom',\r\n        'msmanipulationstatechanged',\r\n        'msgesturechange',\r\n        'msgesturedoubletap',\r\n        'msgestureend',\r\n        'msgesturehold',\r\n        'msgesturestart',\r\n        'msgesturetap',\r\n        'msgotpointercapture',\r\n        'msinertiastart',\r\n        'mslostpointercapture',\r\n        'mspointercancel',\r\n        'mspointerdown',\r\n        'mspointerenter',\r\n        'mspointerhover',\r\n        'mspointerleave',\r\n        'mspointermove',\r\n        'mspointerout',\r\n        'mspointerover',\r\n        'mspointerup',\r\n        'pointerout',\r\n        'mssitemodejumplistitemremoved',\r\n        'msthumbnailclick',\r\n        'stop',\r\n        'storagecommit'\r\n    ];\r\n    const webglEventNames = ['webglcontextrestored', 'webglcontextlost', 'webglcontextcreationerror'];\r\n    const formEventNames = ['autocomplete', 'autocompleteerror'];\r\n    const detailEventNames = ['toggle'];\r\n    const frameEventNames = ['load'];\r\n    const frameSetEventNames = ['blur', 'error', 'focus', 'load', 'resize', 'scroll', 'messageerror'];\r\n    const marqueeEventNames = ['bounce', 'finish', 'start'];\r\n    const XMLHttpRequestEventNames = [\r\n        'loadstart', 'progress', 'abort', 'error', 'load', 'progress', 'timeout', 'loadend',\r\n        'readystatechange'\r\n    ];\r\n    const IDBIndexEventNames = ['upgradeneeded', 'complete', 'abort', 'success', 'error', 'blocked', 'versionchange', 'close'];\r\n    const websocketEventNames = ['close', 'error', 'open', 'message'];\r\n    const workerEventNames = ['error', 'message'];\r\n    const eventNames = globalEventHandlersEventNames.concat(webglEventNames, formEventNames, detailEventNames, documentEventNames, windowEventNames, htmlElementEventNames, ieElementEventNames);\r\n    function filterProperties(target, onProperties, ignoreProperties) {\r\n        if (!ignoreProperties || ignoreProperties.length === 0) {\r\n            return onProperties;\r\n        }\r\n        const tip = ignoreProperties.filter(ip => ip.target === target);\r\n        if (!tip || tip.length === 0) {\r\n            return onProperties;\r\n        }\r\n        const targetIgnoreProperties = tip[0].ignoreProperties;\r\n        return onProperties.filter(op => targetIgnoreProperties.indexOf(op) === -1);\r\n    }\r\n    function patchFilteredProperties(target, onProperties, ignoreProperties, prototype) {\r\n        // check whether target is available, sometimes target will be undefined\r\n        // because different browser or some 3rd party plugin.\r\n        if (!target) {\r\n            return;\r\n        }\r\n        const filteredProperties = filterProperties(target, onProperties, ignoreProperties);\r\n        patchOnProperties(target, filteredProperties, prototype);\r\n    }\r\n    function propertyDescriptorPatch(api, _global) {\r\n        if (isNode && !isMix) {\r\n            return;\r\n        }\r\n        if (Zone[api.symbol('patchEvents')]) {\r\n            // events are already been patched by legacy patch.\r\n            return;\r\n        }\r\n        const supportsWebSocket = typeof WebSocket !== 'undefined';\r\n        const ignoreProperties = _global['__Zone_ignore_on_properties'];\r\n        // for browsers that we can patch the descriptor:  Chrome & Firefox\r\n        if (isBrowser) {\r\n            const internalWindow = window;\r\n            const ignoreErrorProperties = isIE ? [{ target: internalWindow, ignoreProperties: ['error'] }] : [];\r\n            // in IE/Edge, onProp not exist in window object, but in WindowPrototype\r\n            // so we need to pass WindowPrototype to check onProp exist or not\r\n            patchFilteredProperties(internalWindow, eventNames.concat(['messageerror']), ignoreProperties ? ignoreProperties.concat(ignoreErrorProperties) : ignoreProperties, ObjectGetPrototypeOf(internalWindow));\r\n            patchFilteredProperties(Document.prototype, eventNames, ignoreProperties);\r\n            if (typeof internalWindow['SVGElement'] !== 'undefined') {\r\n                patchFilteredProperties(internalWindow['SVGElement'].prototype, eventNames, ignoreProperties);\r\n            }\r\n            patchFilteredProperties(Element.prototype, eventNames, ignoreProperties);\r\n            patchFilteredProperties(HTMLElement.prototype, eventNames, ignoreProperties);\r\n            patchFilteredProperties(HTMLMediaElement.prototype, mediaElementEventNames, ignoreProperties);\r\n            patchFilteredProperties(HTMLFrameSetElement.prototype, windowEventNames.concat(frameSetEventNames), ignoreProperties);\r\n            patchFilteredProperties(HTMLBodyElement.prototype, windowEventNames.concat(frameSetEventNames), ignoreProperties);\r\n            patchFilteredProperties(HTMLFrameElement.prototype, frameEventNames, ignoreProperties);\r\n            patchFilteredProperties(HTMLIFrameElement.prototype, frameEventNames, ignoreProperties);\r\n            const HTMLMarqueeElement = internalWindow['HTMLMarqueeElement'];\r\n            if (HTMLMarqueeElement) {\r\n                patchFilteredProperties(HTMLMarqueeElement.prototype, marqueeEventNames, ignoreProperties);\r\n            }\r\n            const Worker = internalWindow['Worker'];\r\n            if (Worker) {\r\n                patchFilteredProperties(Worker.prototype, workerEventNames, ignoreProperties);\r\n            }\r\n        }\r\n        const XMLHttpRequest = _global['XMLHttpRequest'];\r\n        if (XMLHttpRequest) {\r\n            // XMLHttpRequest is not available in ServiceWorker, so we need to check here\r\n            patchFilteredProperties(XMLHttpRequest.prototype, XMLHttpRequestEventNames, ignoreProperties);\r\n        }\r\n        const XMLHttpRequestEventTarget = _global['XMLHttpRequestEventTarget'];\r\n        if (XMLHttpRequestEventTarget) {\r\n            patchFilteredProperties(XMLHttpRequestEventTarget && XMLHttpRequestEventTarget.prototype, XMLHttpRequestEventNames, ignoreProperties);\r\n        }\r\n        if (typeof IDBIndex !== 'undefined') {\r\n            patchFilteredProperties(IDBIndex.prototype, IDBIndexEventNames, ignoreProperties);\r\n            patchFilteredProperties(IDBRequest.prototype, IDBIndexEventNames, ignoreProperties);\r\n            patchFilteredProperties(IDBOpenDBRequest.prototype, IDBIndexEventNames, ignoreProperties);\r\n            patchFilteredProperties(IDBDatabase.prototype, IDBIndexEventNames, ignoreProperties);\r\n            patchFilteredProperties(IDBTransaction.prototype, IDBIndexEventNames, ignoreProperties);\r\n            patchFilteredProperties(IDBCursor.prototype, IDBIndexEventNames, ignoreProperties);\r\n        }\r\n        if (supportsWebSocket) {\r\n            patchFilteredProperties(WebSocket.prototype, websocketEventNames, ignoreProperties);\r\n        }\r\n    }\r\n\r\n    /**\r\n     * @license\r\n     * Copyright Google Inc. All Rights Reserved.\r\n     *\r\n     * Use of this source code is governed by an MIT-style license that can be\r\n     * found in the LICENSE file at https://angular.io/license\r\n     */\r\n    Zone.__load_patch('util', (global, Zone, api) => {\r\n        api.patchOnProperties = patchOnProperties;\r\n        api.patchMethod = patchMethod;\r\n        api.bindArguments = bindArguments;\r\n        api.patchMacroTask = patchMacroTask;\r\n        // In earlier version of zone.js (<0.9.0), we use env name `__zone_symbol__BLACK_LISTED_EVENTS` to\r\n        // define which events will not be patched by `Zone.js`.\r\n        // In newer version (>=0.9.0), we change the env name to `__zone_symbol__UNPATCHED_EVENTS` to keep\r\n        // the name consistent with angular repo.\r\n        // The  `__zone_symbol__BLACK_LISTED_EVENTS` is deprecated, but it is still be supported for\r\n        // backwards compatibility.\r\n        const SYMBOL_BLACK_LISTED_EVENTS = Zone.__symbol__('BLACK_LISTED_EVENTS');\r\n        const SYMBOL_UNPATCHED_EVENTS = Zone.__symbol__('UNPATCHED_EVENTS');\r\n        if (global[SYMBOL_UNPATCHED_EVENTS]) {\r\n            global[SYMBOL_BLACK_LISTED_EVENTS] = global[SYMBOL_UNPATCHED_EVENTS];\r\n        }\r\n        if (global[SYMBOL_BLACK_LISTED_EVENTS]) {\r\n            Zone[SYMBOL_BLACK_LISTED_EVENTS] = Zone[SYMBOL_UNPATCHED_EVENTS] =\r\n                global[SYMBOL_BLACK_LISTED_EVENTS];\r\n        }\r\n        api.patchEventPrototype = patchEventPrototype;\r\n        api.patchEventTarget = patchEventTarget;\r\n        api.isIEOrEdge = isIEOrEdge;\r\n        api.ObjectDefineProperty = ObjectDefineProperty;\r\n        api.ObjectGetOwnPropertyDescriptor = ObjectGetOwnPropertyDescriptor;\r\n        api.ObjectCreate = ObjectCreate;\r\n        api.ArraySlice = ArraySlice;\r\n        api.patchClass = patchClass;\r\n        api.wrapWithCurrentZone = wrapWithCurrentZone;\r\n        api.filterProperties = filterProperties;\r\n        api.attachOriginToPatched = attachOriginToPatched;\r\n        api._redefineProperty = Object.defineProperty;\r\n        api.patchCallbacks = patchCallbacks;\r\n        api.getGlobalObjects = () => ({ globalSources, zoneSymbolEventNames: zoneSymbolEventNames$1, eventNames, isBrowser, isMix, isNode, TRUE_STR,\r\n            FALSE_STR, ZONE_SYMBOL_PREFIX, ADD_EVENT_LISTENER_STR, REMOVE_EVENT_LISTENER_STR });\r\n    });\r\n\r\n    /**\r\n     * @license\r\n     * Copyright Google Inc. All Rights Reserved.\r\n     *\r\n     * Use of this source code is governed by an MIT-style license that can be\r\n     * found in the LICENSE file at https://angular.io/license\r\n     */\r\n    const taskSymbol = zoneSymbol('zoneTask');\r\n    function patchTimer(window, setName, cancelName, nameSuffix) {\r\n        let setNative = null;\r\n        let clearNative = null;\r\n        setName += nameSuffix;\r\n        cancelName += nameSuffix;\r\n        const tasksByHandleId = {};\r\n        function scheduleTask(task) {\r\n            const data = task.data;\r\n            function timer() {\r\n                try {\r\n                    task.invoke.apply(this, arguments);\r\n                }\r\n                finally {\r\n                    // issue-934, task will be cancelled\r\n                    // even it is a periodic task such as\r\n                    // setInterval\r\n                    if (!(task.data && task.data.isPeriodic)) {\r\n                        if (typeof data.handleId === 'number') {\r\n                            // in non-nodejs env, we remove timerId\r\n                            // from local cache\r\n                            delete tasksByHandleId[data.handleId];\r\n                        }\r\n                        else if (data.handleId) {\r\n                            // Node returns complex objects as handleIds\r\n                            // we remove task reference from timer object\r\n                            data.handleId[taskSymbol] = null;\r\n                        }\r\n                    }\r\n                }\r\n            }\r\n            data.args[0] = timer;\r\n            data.handleId = setNative.apply(window, data.args);\r\n            return task;\r\n        }\r\n        function clearTask(task) { return clearNative(task.data.handleId); }\r\n        setNative =\r\n            patchMethod(window, setName, (delegate) => function (self, args) {\r\n                if (typeof args[0] === 'function') {\r\n                    const options = {\r\n                        isPeriodic: nameSuffix === 'Interval',\r\n                        delay: (nameSuffix === 'Timeout' || nameSuffix === 'Interval') ? args[1] || 0 :\r\n                            undefined,\r\n                        args: args\r\n                    };\r\n                    const task = scheduleMacroTaskWithCurrentZone(setName, args[0], options, scheduleTask, clearTask);\r\n                    if (!task) {\r\n                        return task;\r\n                    }\r\n                    // Node.js must additionally support the ref and unref functions.\r\n                    const handle = task.data.handleId;\r\n                    if (typeof handle === 'number') {\r\n                        // for non nodejs env, we save handleId: task\r\n                        // mapping in local cache for clearTimeout\r\n                        tasksByHandleId[handle] = task;\r\n                    }\r\n                    else if (handle) {\r\n                        // for nodejs env, we save task\r\n                        // reference in timerId Object for clearTimeout\r\n                        handle[taskSymbol] = task;\r\n                    }\r\n                    // check whether handle is null, because some polyfill or browser\r\n                    // may return undefined from setTimeout/setInterval/setImmediate/requestAnimationFrame\r\n                    if (handle && handle.ref && handle.unref && typeof handle.ref === 'function' &&\r\n                        typeof handle.unref === 'function') {\r\n                        task.ref = handle.ref.bind(handle);\r\n                        task.unref = handle.unref.bind(handle);\r\n                    }\r\n                    if (typeof handle === 'number' || handle) {\r\n                        return handle;\r\n                    }\r\n                    return task;\r\n                }\r\n                else {\r\n                    // cause an error by calling it directly.\r\n                    return delegate.apply(window, args);\r\n                }\r\n            });\r\n        clearNative =\r\n            patchMethod(window, cancelName, (delegate) => function (self, args) {\r\n                const id = args[0];\r\n                let task;\r\n                if (typeof id === 'number') {\r\n                    // non nodejs env.\r\n                    task = tasksByHandleId[id];\r\n                }\r\n                else {\r\n                    // nodejs env.\r\n                    task = id && id[taskSymbol];\r\n                    // other environments.\r\n                    if (!task) {\r\n                        task = id;\r\n                    }\r\n                }\r\n                if (task && typeof task.type === 'string') {\r\n                    if (task.state !== 'notScheduled' &&\r\n                        (task.cancelFn && task.data.isPeriodic || task.runCount === 0)) {\r\n                        if (typeof id === 'number') {\r\n                            delete tasksByHandleId[id];\r\n                        }\r\n                        else if (id) {\r\n                            id[taskSymbol] = null;\r\n                        }\r\n                        // Do not cancel already canceled functions\r\n                        task.zone.cancelTask(task);\r\n                    }\r\n                }\r\n                else {\r\n                    // cause an error by calling it directly.\r\n                    delegate.apply(window, args);\r\n                }\r\n            });\r\n    }\r\n\r\n    /**\r\n     * @license\r\n     * Copyright Google Inc. All Rights Reserved.\r\n     *\r\n     * Use of this source code is governed by an MIT-style license that can be\r\n     * found in the LICENSE file at https://angular.io/license\r\n     */\r\n    function patchCustomElements(_global, api) {\r\n        const { isBrowser, isMix } = api.getGlobalObjects();\r\n        if ((!isBrowser && !isMix) || !_global['customElements'] || !('customElements' in _global)) {\r\n            return;\r\n        }\r\n        const callbacks = ['connectedCallback', 'disconnectedCallback', 'adoptedCallback', 'attributeChangedCallback'];\r\n        api.patchCallbacks(api, _global.customElements, 'customElements', 'define', callbacks);\r\n    }\r\n\r\n    /**\r\n     * @license\r\n     * Copyright Google Inc. All Rights Reserved.\r\n     *\r\n     * Use of this source code is governed by an MIT-style license that can be\r\n     * found in the LICENSE file at https://angular.io/license\r\n     */\r\n    function eventTargetPatch(_global, api) {\r\n        if (Zone[api.symbol('patchEventTarget')]) {\r\n            // EventTarget is already patched.\r\n            return;\r\n        }\r\n        const { eventNames, zoneSymbolEventNames, TRUE_STR, FALSE_STR, ZONE_SYMBOL_PREFIX } = api.getGlobalObjects();\r\n        //  predefine all __zone_symbol__ + eventName + true/false string\r\n        for (let i = 0; i < eventNames.length; i++) {\r\n            const eventName = eventNames[i];\r\n            const falseEventName = eventName + FALSE_STR;\r\n            const trueEventName = eventName + TRUE_STR;\r\n            const symbol = ZONE_SYMBOL_PREFIX + falseEventName;\r\n            const symbolCapture = ZONE_SYMBOL_PREFIX + trueEventName;\r\n            zoneSymbolEventNames[eventName] = {};\r\n            zoneSymbolEventNames[eventName][FALSE_STR] = symbol;\r\n            zoneSymbolEventNames[eventName][TRUE_STR] = symbolCapture;\r\n        }\r\n        const EVENT_TARGET = _global['EventTarget'];\r\n        if (!EVENT_TARGET || !EVENT_TARGET.prototype) {\r\n            return;\r\n        }\r\n        api.patchEventTarget(_global, [EVENT_TARGET && EVENT_TARGET.prototype]);\r\n        return true;\r\n    }\r\n    function patchEvent(global, api) {\r\n        api.patchEventPrototype(global, api);\r\n    }\r\n\r\n    /**\r\n     * @license\r\n     * Copyright Google Inc. All Rights Reserved.\r\n     *\r\n     * Use of this source code is governed by an MIT-style license that can be\r\n     * found in the LICENSE file at https://angular.io/license\r\n     */\r\n    Zone.__load_patch('legacy', (global) => {\r\n        const legacyPatch = global[Zone.__symbol__('legacyPatch')];\r\n        if (legacyPatch) {\r\n            legacyPatch();\r\n        }\r\n    });\r\n    Zone.__load_patch('timers', (global) => {\r\n        const set = 'set';\r\n        const clear = 'clear';\r\n        patchTimer(global, set, clear, 'Timeout');\r\n        patchTimer(global, set, clear, 'Interval');\r\n        patchTimer(global, set, clear, 'Immediate');\r\n    });\r\n    Zone.__load_patch('requestAnimationFrame', (global) => {\r\n        patchTimer(global, 'request', 'cancel', 'AnimationFrame');\r\n        patchTimer(global, 'mozRequest', 'mozCancel', 'AnimationFrame');\r\n        patchTimer(global, 'webkitRequest', 'webkitCancel', 'AnimationFrame');\r\n    });\r\n    Zone.__load_patch('blocking', (global, Zone) => {\r\n        const blockingMethods = ['alert', 'prompt', 'confirm'];\r\n        for (let i = 0; i < blockingMethods.length; i++) {\r\n            const name = blockingMethods[i];\r\n            patchMethod(global, name, (delegate, symbol, name) => {\r\n                return function (s, args) {\r\n                    return Zone.current.run(delegate, global, args, name);\r\n                };\r\n            });\r\n        }\r\n    });\r\n    Zone.__load_patch('EventTarget', (global, Zone, api) => {\r\n        patchEvent(global, api);\r\n        eventTargetPatch(global, api);\r\n        // patch XMLHttpRequestEventTarget's addEventListener/removeEventListener\r\n        const XMLHttpRequestEventTarget = global['XMLHttpRequestEventTarget'];\r\n        if (XMLHttpRequestEventTarget && XMLHttpRequestEventTarget.prototype) {\r\n            api.patchEventTarget(global, [XMLHttpRequestEventTarget.prototype]);\r\n        }\r\n        patchClass('MutationObserver');\r\n        patchClass('WebKitMutationObserver');\r\n        patchClass('IntersectionObserver');\r\n        patchClass('FileReader');\r\n    });\r\n    Zone.__load_patch('on_property', (global, Zone, api) => {\r\n        propertyDescriptorPatch(api, global);\r\n    });\r\n    Zone.__load_patch('customElements', (global, Zone, api) => {\r\n        patchCustomElements(global, api);\r\n    });\r\n    Zone.__load_patch('XHR', (global, Zone) => {\r\n        // Treat XMLHttpRequest as a macrotask.\r\n        patchXHR(global);\r\n        const XHR_TASK = zoneSymbol('xhrTask');\r\n        const XHR_SYNC = zoneSymbol('xhrSync');\r\n        const XHR_LISTENER = zoneSymbol('xhrListener');\r\n        const XHR_SCHEDULED = zoneSymbol('xhrScheduled');\r\n        const XHR_URL = zoneSymbol('xhrURL');\r\n        const XHR_ERROR_BEFORE_SCHEDULED = zoneSymbol('xhrErrorBeforeScheduled');\r\n        function patchXHR(window) {\r\n            const XMLHttpRequest = window['XMLHttpRequest'];\r\n            if (!XMLHttpRequest) {\r\n                // XMLHttpRequest is not available in service worker\r\n                return;\r\n            }\r\n            const XMLHttpRequestPrototype = XMLHttpRequest.prototype;\r\n            function findPendingTask(target) { return target[XHR_TASK]; }\r\n            let oriAddListener = XMLHttpRequestPrototype[ZONE_SYMBOL_ADD_EVENT_LISTENER];\r\n            let oriRemoveListener = XMLHttpRequestPrototype[ZONE_SYMBOL_REMOVE_EVENT_LISTENER];\r\n            if (!oriAddListener) {\r\n                const XMLHttpRequestEventTarget = window['XMLHttpRequestEventTarget'];\r\n                if (XMLHttpRequestEventTarget) {\r\n                    const XMLHttpRequestEventTargetPrototype = XMLHttpRequestEventTarget.prototype;\r\n                    oriAddListener = XMLHttpRequestEventTargetPrototype[ZONE_SYMBOL_ADD_EVENT_LISTENER];\r\n                    oriRemoveListener = XMLHttpRequestEventTargetPrototype[ZONE_SYMBOL_REMOVE_EVENT_LISTENER];\r\n                }\r\n            }\r\n            const READY_STATE_CHANGE = 'readystatechange';\r\n            const SCHEDULED = 'scheduled';\r\n            function scheduleTask(task) {\r\n                const data = task.data;\r\n                const target = data.target;\r\n                target[XHR_SCHEDULED] = false;\r\n                target[XHR_ERROR_BEFORE_SCHEDULED] = false;\r\n                // remove existing event listener\r\n                const listener = target[XHR_LISTENER];\r\n                if (!oriAddListener) {\r\n                    oriAddListener = target[ZONE_SYMBOL_ADD_EVENT_LISTENER];\r\n                    oriRemoveListener = target[ZONE_SYMBOL_REMOVE_EVENT_LISTENER];\r\n                }\r\n                if (listener) {\r\n                    oriRemoveListener.call(target, READY_STATE_CHANGE, listener);\r\n                }\r\n                const newListener = target[XHR_LISTENER] = () => {\r\n                    if (target.readyState === target.DONE) {\r\n                        // sometimes on some browsers XMLHttpRequest will fire onreadystatechange with\r\n                        // readyState=4 multiple times, so we need to check task state here\r\n                        if (!data.aborted && target[XHR_SCHEDULED] && task.state === SCHEDULED) {\r\n                            // check whether the xhr has registered onload listener\r\n                            // if that is the case, the task should invoke after all\r\n                            // onload listeners finish.\r\n                            const loadTasks = target[Zone.__symbol__('loadfalse')];\r\n                            if (loadTasks && loadTasks.length > 0) {\r\n                                const oriInvoke = task.invoke;\r\n                                task.invoke = function () {\r\n                                    // need to load the tasks again, because in other\r\n                                    // load listener, they may remove themselves\r\n                                    const loadTasks = target[Zone.__symbol__('loadfalse')];\r\n                                    for (let i = 0; i < loadTasks.length; i++) {\r\n                                        if (loadTasks[i] === task) {\r\n                                            loadTasks.splice(i, 1);\r\n                                        }\r\n                                    }\r\n                                    if (!data.aborted && task.state === SCHEDULED) {\r\n                                        oriInvoke.call(task);\r\n                                    }\r\n                                };\r\n                                loadTasks.push(task);\r\n                            }\r\n                            else {\r\n                                task.invoke();\r\n                            }\r\n                        }\r\n                        else if (!data.aborted && target[XHR_SCHEDULED] === false) {\r\n                            // error occurs when xhr.send()\r\n                            target[XHR_ERROR_BEFORE_SCHEDULED] = true;\r\n                        }\r\n                    }\r\n                };\r\n                oriAddListener.call(target, READY_STATE_CHANGE, newListener);\r\n                const storedTask = target[XHR_TASK];\r\n                if (!storedTask) {\r\n                    target[XHR_TASK] = task;\r\n                }\r\n                sendNative.apply(target, data.args);\r\n                target[XHR_SCHEDULED] = true;\r\n                return task;\r\n            }\r\n            function placeholderCallback() { }\r\n            function clearTask(task) {\r\n                const data = task.data;\r\n                // Note - ideally, we would call data.target.removeEventListener here, but it's too late\r\n                // to prevent it from firing. So instead, we store info for the event listener.\r\n                data.aborted = true;\r\n                return abortNative.apply(data.target, data.args);\r\n            }\r\n            const openNative = patchMethod(XMLHttpRequestPrototype, 'open', () => function (self, args) {\r\n                self[XHR_SYNC] = args[2] == false;\r\n                self[XHR_URL] = args[1];\r\n                return openNative.apply(self, args);\r\n            });\r\n            const XMLHTTPREQUEST_SOURCE = 'XMLHttpRequest.send';\r\n            const fetchTaskAborting = zoneSymbol('fetchTaskAborting');\r\n            const fetchTaskScheduling = zoneSymbol('fetchTaskScheduling');\r\n            const sendNative = patchMethod(XMLHttpRequestPrototype, 'send', () => function (self, args) {\r\n                if (Zone.current[fetchTaskScheduling] === true) {\r\n                    // a fetch is scheduling, so we are using xhr to polyfill fetch\r\n                    // and because we already schedule macroTask for fetch, we should\r\n                    // not schedule a macroTask for xhr again\r\n                    return sendNative.apply(self, args);\r\n                }\r\n                if (self[XHR_SYNC]) {\r\n                    // if the XHR is sync there is no task to schedule, just execute the code.\r\n                    return sendNative.apply(self, args);\r\n                }\r\n                else {\r\n                    const options = { target: self, url: self[XHR_URL], isPeriodic: false, args: args, aborted: false };\r\n                    const task = scheduleMacroTaskWithCurrentZone(XMLHTTPREQUEST_SOURCE, placeholderCallback, options, scheduleTask, clearTask);\r\n                    if (self && self[XHR_ERROR_BEFORE_SCHEDULED] === true && !options.aborted &&\r\n                        task.state === SCHEDULED) {\r\n                        // xhr request throw error when send\r\n                        // we should invoke task instead of leaving a scheduled\r\n                        // pending macroTask\r\n                        task.invoke();\r\n                    }\r\n                }\r\n            });\r\n            const abortNative = patchMethod(XMLHttpRequestPrototype, 'abort', () => function (self, args) {\r\n                const task = findPendingTask(self);\r\n                if (task && typeof task.type == 'string') {\r\n                    // If the XHR has already completed, do nothing.\r\n                    // If the XHR has already been aborted, do nothing.\r\n                    // Fix #569, call abort multiple times before done will cause\r\n                    // macroTask task count be negative number\r\n                    if (task.cancelFn == null || (task.data && task.data.aborted)) {\r\n                        return;\r\n                    }\r\n                    task.zone.cancelTask(task);\r\n                }\r\n                else if (Zone.current[fetchTaskAborting] === true) {\r\n                    // the abort is called from fetch polyfill, we need to call native abort of XHR.\r\n                    return abortNative.apply(self, args);\r\n                }\r\n                // Otherwise, we are trying to abort an XHR which has not yet been sent, so there is no\r\n                // task\r\n                // to cancel. Do nothing.\r\n            });\r\n        }\r\n    });\r\n    Zone.__load_patch('geolocation', (global) => {\r\n        /// GEO_LOCATION\r\n        if (global['navigator'] && global['navigator'].geolocation) {\r\n            patchPrototype(global['navigator'].geolocation, ['getCurrentPosition', 'watchPosition']);\r\n        }\r\n    });\r\n    Zone.__load_patch('PromiseRejectionEvent', (global, Zone) => {\r\n        // handle unhandled promise rejection\r\n        function findPromiseRejectionHandler(evtName) {\r\n            return function (e) {\r\n                const eventTasks = findEventTasks(global, evtName);\r\n                eventTasks.forEach(eventTask => {\r\n                    // windows has added unhandledrejection event listener\r\n                    // trigger the event listener\r\n                    const PromiseRejectionEvent = global['PromiseRejectionEvent'];\r\n                    if (PromiseRejectionEvent) {\r\n                        const evt = new PromiseRejectionEvent(evtName, { promise: e.promise, reason: e.rejection });\r\n                        eventTask.invoke(evt);\r\n                    }\r\n                });\r\n            };\r\n        }\r\n        if (global['PromiseRejectionEvent']) {\r\n            Zone[zoneSymbol('unhandledPromiseRejectionHandler')] =\r\n                findPromiseRejectionHandler('unhandledrejection');\r\n            Zone[zoneSymbol('rejectionHandledHandler')] =\r\n                findPromiseRejectionHandler('rejectionhandled');\r\n        }\r\n    });\r\n\r\n})));\r\n","var isObject = require('./_is-object');\r\nmodule.exports = function (it, TYPE) {\r\n  if (!isObject(it) || it._t !== TYPE) throw TypeError('Incompatible receiver, ' + TYPE + ' required!');\r\n  return it;\r\n};\r\n","var Set = require('./es6.set');\r\nvar from = require('./_array-from-iterable');\r\nvar metadata = require('./_metadata');\r\nvar anObject = require('./_an-object');\r\nvar getPrototypeOf = require('./_object-gpo');\r\nvar ordinaryOwnMetadataKeys = metadata.keys;\r\nvar toMetaKey = metadata.key;\r\n\r\nvar ordinaryMetadataKeys = function (O, P) {\r\n  var oKeys = ordinaryOwnMetadataKeys(O, P);\r\n  var parent = getPrototypeOf(O);\r\n  if (parent === null) return oKeys;\r\n  var pKeys = ordinaryMetadataKeys(parent, P);\r\n  return pKeys.length ? oKeys.length ? from(new Set(oKeys.concat(pKeys))) : pKeys : oKeys;\r\n};\r\n\r\nmetadata.exp({ getMetadataKeys: function getMetadataKeys(target /* , targetKey */) {\r\n  return ordinaryMetadataKeys(anObject(target), arguments.length < 2 ? undefined : toMetaKey(arguments[1]));\r\n} });\r\n","/**\r\n@license @nocompile\r\nCopyright (c) 2018 The Polymer Project Authors. All rights reserved.\r\nThis code may only be used under the BSD style license found at http://polymer.github.io/LICENSE.txt\r\nThe complete set of authors may be found at http://polymer.github.io/AUTHORS.txt\r\nThe complete set of contributors may be found at http://polymer.github.io/CONTRIBUTORS.txt\r\nCode distributed by Google as part of the polymer project is also\r\nsubject to an additional IP rights grant found at http://polymer.github.io/PATENTS.txt\r\n*/\r\n(function () {\r\n    'use strict';\r\n\r\n    (function(){if(void 0===window.Reflect||void 0===window.customElements||window.customElements.polyfillWrapFlushCallback)return;const a=HTMLElement;window.HTMLElement={HTMLElement:function HTMLElement(){return Reflect.construct(a,[],this.constructor)}}.HTMLElement,HTMLElement.prototype=a.prototype,HTMLElement.prototype.constructor=HTMLElement,Object.setPrototypeOf(HTMLElement,a);})();\r\n\r\n}());\r\n","// 7.2.1 RequireObjectCoercible(argument)\r\nmodule.exports = function (it) {\r\n  if (it == undefined) throw TypeError(\"Can't call method on  \" + it);\r\n  return it;\r\n};\r\n","// false -> Array#indexOf\r\n// true  -> Array#includes\r\nvar toIObject = require('./_to-iobject');\r\nvar toLength = require('./_to-length');\r\nvar toAbsoluteIndex = require('./_to-absolute-index');\r\nmodule.exports = function (IS_INCLUDES) {\r\n  return function ($this, el, fromIndex) {\r\n    var O = toIObject($this);\r\n    var length = toLength(O.length);\r\n    var index = toAbsoluteIndex(fromIndex, length);\r\n    var value;\r\n    // Array#includes uses SameValueZero equality algorithm\r\n    // eslint-disable-next-line no-self-compare\r\n    if (IS_INCLUDES && el != el) while (length > index) {\r\n      value = O[index++];\r\n      // eslint-disable-next-line no-self-compare\r\n      if (value != value) return true;\r\n    // Array#indexOf ignores holes, Array#includes - not\r\n    } else for (;length > index; index++) if (IS_INCLUDES || index in O) {\r\n      if (O[index] === el) return IS_INCLUDES || index || 0;\r\n    } return !IS_INCLUDES && -1;\r\n  };\r\n};\r\n","'use strict';\r\nvar dP = require('./_object-dp').f;\r\nvar create = require('./_object-create');\r\nvar redefineAll = require('./_redefine-all');\r\nvar ctx = require('./_ctx');\r\nvar anInstance = require('./_an-instance');\r\nvar forOf = require('./_for-of');\r\nvar $iterDefine = require('./_iter-define');\r\nvar step = require('./_iter-step');\r\nvar setSpecies = require('./_set-species');\r\nvar DESCRIPTORS = require('./_descriptors');\r\nvar fastKey = require('./_meta').fastKey;\r\nvar validate = require('./_validate-collection');\r\nvar SIZE = DESCRIPTORS ? '_s' : 'size';\r\n\r\nvar getEntry = function (that, key) {\r\n  // fast case\r\n  var index = fastKey(key);\r\n  var entry;\r\n  if (index !== 'F') return that._i[index];\r\n  // frozen object case\r\n  for (entry = that._f; entry; entry = entry.n) {\r\n    if (entry.k == key) return entry;\r\n  }\r\n};\r\n\r\nmodule.exports = {\r\n  getConstructor: function (wrapper, NAME, IS_MAP, ADDER) {\r\n    var C = wrapper(function (that, iterable) {\r\n      anInstance(that, C, NAME, '_i');\r\n      that._t = NAME;         // collection type\r\n      that._i = create(null); // index\r\n      that._f = undefined;    // first entry\r\n      that._l = undefined;    // last entry\r\n      that[SIZE] = 0;         // size\r\n      if (iterable != undefined) forOf(iterable, IS_MAP, that[ADDER], that);\r\n    });\r\n    redefineAll(C.prototype, {\r\n      // 23.1.3.1 Map.prototype.clear()\r\n      // 23.2.3.2 Set.prototype.clear()\r\n      clear: function clear() {\r\n        for (var that = validate(this, NAME), data = that._i, entry = that._f; entry; entry = entry.n) {\r\n          entry.r = true;\r\n          if (entry.p) entry.p = entry.p.n = undefined;\r\n          delete data[entry.i];\r\n        }\r\n        that._f = that._l = undefined;\r\n        that[SIZE] = 0;\r\n      },\r\n      // 23.1.3.3 Map.prototype.delete(key)\r\n      // 23.2.3.4 Set.prototype.delete(value)\r\n      'delete': function (key) {\r\n        var that = validate(this, NAME);\r\n        var entry = getEntry(that, key);\r\n        if (entry) {\r\n          var next = entry.n;\r\n          var prev = entry.p;\r\n          delete that._i[entry.i];\r\n          entry.r = true;\r\n          if (prev) prev.n = next;\r\n          if (next) next.p = prev;\r\n          if (that._f == entry) that._f = next;\r\n          if (that._l == entry) that._l = prev;\r\n          that[SIZE]--;\r\n        } return !!entry;\r\n      },\r\n      // 23.2.3.6 Set.prototype.forEach(callbackfn, thisArg = undefined)\r\n      // 23.1.3.5 Map.prototype.forEach(callbackfn, thisArg = undefined)\r\n      forEach: function forEach(callbackfn /* , that = undefined */) {\r\n        validate(this, NAME);\r\n        var f = ctx(callbackfn, arguments.length > 1 ? arguments[1] : undefined, 3);\r\n        var entry;\r\n        while (entry = entry ? entry.n : this._f) {\r\n          f(entry.v, entry.k, this);\r\n          // revert to the last existing entry\r\n          while (entry && entry.r) entry = entry.p;\r\n        }\r\n      },\r\n      // 23.1.3.7 Map.prototype.has(key)\r\n      // 23.2.3.7 Set.prototype.has(value)\r\n      has: function has(key) {\r\n        return !!getEntry(validate(this, NAME), key);\r\n      }\r\n    });\r\n    if (DESCRIPTORS) dP(C.prototype, 'size', {\r\n      get: function () {\r\n        return validate(this, NAME)[SIZE];\r\n      }\r\n    });\r\n    return C;\r\n  },\r\n  def: function (that, key, value) {\r\n    var entry = getEntry(that, key);\r\n    var prev, index;\r\n    // change existing entry\r\n    if (entry) {\r\n      entry.v = value;\r\n    // create new entry\r\n    } else {\r\n      that._l = entry = {\r\n        i: index = fastKey(key, true), // <- index\r\n        k: key,                        // <- key\r\n        v: value,                      // <- value\r\n        p: prev = that._l,             // <- previous entry\r\n        n: undefined,                  // <- next entry\r\n        r: false                       // <- removed\r\n      };\r\n      if (!that._f) that._f = entry;\r\n      if (prev) prev.n = entry;\r\n      that[SIZE]++;\r\n      // add to index\r\n      if (index !== 'F') that._i[index] = entry;\r\n    } return that;\r\n  },\r\n  getEntry: getEntry,\r\n  setStrong: function (C, NAME, IS_MAP) {\r\n    // add .keys, .values, .entries, [@@iterator]\r\n    // 23.1.3.4, 23.1.3.8, 23.1.3.11, 23.1.3.12, 23.2.3.5, 23.2.3.8, 23.2.3.10, 23.2.3.11\r\n    $iterDefine(C, NAME, function (iterated, kind) {\r\n      this._t = validate(iterated, NAME); // target\r\n      this._k = kind;                     // kind\r\n      this._l = undefined;                // previous\r\n    }, function () {\r\n      var that = this;\r\n      var kind = that._k;\r\n      var entry = that._l;\r\n      // revert to the last existing entry\r\n      while (entry && entry.r) entry = entry.p;\r\n      // get next entry\r\n      if (!that._t || !(that._l = entry = entry ? entry.n : that._t._f)) {\r\n        // or finish the iteration\r\n        that._t = undefined;\r\n        return step(1);\r\n      }\r\n      // return step by kind\r\n      if (kind == 'keys') return step(0, entry.k);\r\n      if (kind == 'values') return step(0, entry.v);\r\n      return step(0, [entry.k, entry.v]);\r\n    }, IS_MAP ? 'entries' : 'values', !IS_MAP, true);\r\n\r\n    // add [@@species], 23.1.2.2, 23.2.2.2\r\n    setSpecies(NAME);\r\n  }\r\n};\r\n","module.exports = !require('./_descriptors') && !require('./_fails')(function () {\r\n  return Object.defineProperty(require('./_dom-create')('div'), 'a', { get: function () { return 7; } }).a != 7;\r\n});\r\n","var isObject = require('./_is-object');\r\nmodule.exports = function (it) {\r\n  if (!isObject(it)) throw TypeError(it + ' is not an object!');\r\n  return it;\r\n};\r\n","var id = 0;\r\nvar px = Math.random();\r\nmodule.exports = function (key) {\r\n  return 'Symbol('.concat(key === undefined ? '' : key, ')_', (++id + px).toString(36));\r\n};\r\n","// 9.4.2.3 ArraySpeciesCreate(originalArray, length)\r\nvar speciesConstructor = require('./_array-species-constructor');\r\n\r\nmodule.exports = function (original, length) {\r\n  return new (speciesConstructor(original))(length);\r\n};\r\n","var has = require('./_has');\r\nvar toIObject = require('./_to-iobject');\r\nvar arrayIndexOf = require('./_array-includes')(false);\r\nvar IE_PROTO = require('./_shared-key')('IE_PROTO');\r\n\r\nmodule.exports = function (object, names) {\r\n  var O = toIObject(object);\r\n  var i = 0;\r\n  var result = [];\r\n  var key;\r\n  for (key in O) if (key != IE_PROTO) has(O, key) && result.push(key);\r\n  // Don't enum bug & hidden keys\r\n  while (names.length > i) if (has(O, key = names[i++])) {\r\n    ~arrayIndexOf(result, key) || result.push(key);\r\n  }\r\n  return result;\r\n};\r\n","var metadata = require('./_metadata');\r\nvar anObject = require('./_an-object');\r\nvar toMetaKey = metadata.key;\r\nvar getOrCreateMetadataMap = metadata.map;\r\nvar store = metadata.store;\r\n\r\nmetadata.exp({ deleteMetadata: function deleteMetadata(metadataKey, target /* , targetKey */) {\r\n  var targetKey = arguments.length < 3 ? undefined : toMetaKey(arguments[2]);\r\n  var metadataMap = getOrCreateMetadataMap(anObject(target), targetKey, false);\r\n  if (metadataMap === undefined || !metadataMap['delete'](metadataKey)) return false;\r\n  if (metadataMap.size) return true;\r\n  var targetMetadata = store.get(target);\r\n  targetMetadata['delete'](targetKey);\r\n  return !!targetMetadata.size || store['delete'](target);\r\n} });\r\n"],"sourceRoot":"webpack:///"}