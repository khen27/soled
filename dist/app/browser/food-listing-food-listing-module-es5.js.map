{"version":3,"sources":["webpack:///src/app/food/listing/food-listing.module.ts","webpack:///src/app/food/listing/food-listing.resolver.ts","webpack:///src/app/food/listing/food-listing.page.ts","webpack:///src/app/food/listing/food-listing.page.html"],"names":["routes","path","component","resolve","data","FoodListingPageModule","forChild","imports","declarations","providers","FoodListingResolver","foodService","dataSource","getListingDataSource","dataStore","getListingStore","FoodListingPage","route","subscriptions","pipe","resolvedRouteData","extractData","subscribe","state","listing","error","console","log","unsubscribe","isShell","selector","templateUrl","styleUrls"],"mappings":"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","file":"food-listing-food-listing-module-es5.js","sourcesContent":["import { NgModule } from '@angular/core';\r\nimport { CommonModule } from '@angular/common';\r\nimport { Routes, RouterModule } from '@angular/router';\r\n\r\nimport { IonicModule } from '@ionic/angular';\r\n\r\nimport { ComponentsModule } from '../../components/components.module';\r\nimport { PipesModule } from '../../pipes/pipes.module';\r\n\r\nimport { FoodService } from '../food.service';\r\nimport { FoodListingPage } from './food-listing.page';\r\nimport { FoodListingResolver } from './food-listing.resolver';\r\n\r\nconst routes: Routes = [\r\n  {\r\n    path: '',\r\n    component: FoodListingPage,\r\n    resolve: {\r\n      data: FoodListingResolver\r\n    }\r\n  }\r\n];\r\n\r\n@NgModule({\r\n  imports: [\r\n    CommonModule,\r\n    IonicModule,\r\n    RouterModule.forChild(routes),\r\n    ComponentsModule,\r\n    PipesModule\r\n  ],\r\n  declarations: [\r\n    FoodListingPage\r\n  ],\r\n  providers: [\r\n    FoodListingResolver,\r\n    FoodService\r\n  ]\r\n})\r\nexport class FoodListingPageModule {}\r\n","import { Injectable } from '@angular/core';\r\nimport { Resolve } from '@angular/router';\r\nimport { Observable } from 'rxjs';\r\n\r\nimport { DataStore } from '../../shell/data-store';\r\nimport { FoodService } from '../food.service';\r\nimport { FoodListingModel } from './food-listing.model';\r\n\r\n@Injectable()\r\nexport class FoodListingResolver implements Resolve<DataStore<FoodListingModel>> {\r\n\r\n  constructor(private foodService: FoodService) {}\r\n\r\n  resolve(): DataStore<FoodListingModel> {\r\n    const dataSource: Observable<FoodListingModel> = this.foodService.getListingDataSource();\r\n    const dataStore: DataStore<FoodListingModel> = this.foodService.getListingStore(dataSource);\r\n\r\n    return dataStore;\r\n  }\r\n}\r\n","import { Component, OnInit, HostBinding } from '@angular/core';\r\nimport { ActivatedRoute } from '@angular/router';\r\nimport { Subscription } from 'rxjs';\r\n\r\nimport { IResolvedRouteData, ResolverHelper } from '../../utils/resolver-helper';\r\nimport { FoodListingModel } from './food-listing.model';\r\nimport { switchMap } from 'rxjs/operators';\r\n\r\n@Component({\r\n  selector: 'app-food-listing',\r\n  templateUrl: './food-listing.page.html',\r\n  styleUrls: [\r\n    './styles/food-listing.page.scss',\r\n    './styles/food-listing.shell.scss'\r\n  ]\r\n})\r\nexport class FoodListingPage implements OnInit {\r\n  // Gather all component subscription in one place. Can be one Subscription or multiple (chained using the Subscription.add() method)\r\n  subscriptions: Subscription;\r\n\r\n  listing: FoodListingModel;\r\n\r\n  @HostBinding('class.is-shell') get isShell() {\r\n    return (this.listing && this.listing.isShell) ? true : false;\r\n  }\r\n\r\n  constructor(private route: ActivatedRoute) { }\r\n\r\n  ngOnInit(): void {\r\n    this.subscriptions = this.route.data\r\n    .pipe(\r\n      // Extract data for this page\r\n      switchMap((resolvedRouteData: IResolvedRouteData<FoodListingModel>) => {\r\n        return ResolverHelper.extractData<FoodListingModel>(resolvedRouteData.data, FoodListingModel);\r\n      })\r\n    )\r\n    .subscribe((state) => {\r\n      this.listing = state;\r\n    }, (error) => console.log(error));\r\n  }\r\n\r\n  // NOTE: Ionic only calls ngOnDestroy if the page was popped (ex: when navigating back)\r\n  // Since ngOnDestroy might not fire when you navigate from the current page, use ionViewWillLeave to cleanup Subscriptions\r\n  ionViewWillLeave(): void {\r\n    this.subscriptions.unsubscribe();\r\n  }\r\n}\r\n","<ion-header>\r\n  <ion-toolbar color=\"primary\">\r\n    <ion-buttons slot=\"start\">\r\n      <ion-back-button defaultHref=\"app/categories\"></ion-back-button>\r\n    </ion-buttons>\r\n    <ion-title>Food Listing</ion-title>\r\n  </ion-toolbar>\r\n</ion-header>\r\n\r\n<ion-content class=\"food-listing-content\">\r\n  <ng-container *ngIf=\"listing?.items\">\r\n    <div class=\"listing-item\" *ngFor=\"let item of listing?.items\">\r\n      <div class=\"cover-wrapper\">\r\n        <a class=\"cover-anchor\" [routerLink]=\"['/app/categories/food/', item.slug]\">\r\n          <app-image-shell class=\"cover-image add-overlay\" animation=\"spinner\" [display]=\"'cover'\" [src]=\"item.image\">\r\n            <app-aspect-ratio [ratio]=\"{w:35, h:15}\">\r\n              <div class=\"cover-icon-wrapper\">\r\n                <app-aspect-ratio [ratio]=\"{w: 20, h: 7}\">\r\n                  <app-image-shell class=\"item-icon\" [src]=\"item.icon\"></app-image-shell>\r\n                </app-aspect-ratio>\r\n              </div>\r\n            </app-aspect-ratio>\r\n          </app-image-shell>\r\n        </a>\r\n      </div>\r\n      <ion-row class=\"info-row\">\r\n        <ion-col class=\"description-col\">\r\n          <ion-row class=\"description-wrapper\">\r\n            <h3 class=\"item-name\">\r\n              <a class=\"name-anchor\" [routerLink]=\"['/app/categories/food/', item.slug]\">\r\n                <app-text-shell [data]=\"item.name\"></app-text-shell>\r\n              </a>\r\n            </h3>\r\n            <p class=\"item-address\">\r\n              <app-text-shell [data]=\"item.address\"></app-text-shell>\r\n            </p>\r\n            <ion-row class=\"item-tags\">\r\n              <ion-col class=\"tag-wrapper\" *ngFor=\"let tag of item.tags\">\r\n                <span class=\"item-tag\">\r\n                  <app-text-shell [data]=\"tag\"></app-text-shell>\r\n                </span>\r\n              </ion-col>\r\n            </ion-row>\r\n          </ion-row>\r\n        </ion-col>\r\n        <ion-col class=\"stats-col\">\r\n          <span class=\"item-rating\" [attr.ratingBase]=\"item.rating | floor\">\r\n            <app-text-shell [data]=\"item.rating\"></app-text-shell>\r\n          </span>\r\n          <div class=\"item-price-range\">\r\n            <span class=\"price\" *ngFor=\"let price of [].constructor(item.priceRange)\">$</span>\r\n            <span class=\"no-price\" *ngFor=\"let price of [].constructor(5 - (item.priceRange || 1))\">$</span>\r\n          </div>\r\n        </ion-col>\r\n      </ion-row>\r\n      <ion-row class=\"pictures-row\">\r\n        <ion-col class=\"picture-wrapper\" *ngFor=\"let picture of item.pictures.slice(0, 5); let i = index\">\r\n          <app-aspect-ratio [ratio]=\"{w: 1, h: 1}\">\r\n            <app-image-shell class=\"picture-image\" [src]=\"picture\" [alt]=\"'food image'\"></app-image-shell>\r\n          </app-aspect-ratio>\r\n          <a class=\"has-more-pictures\" [routerLink]=\"['/app/categories/food/', item.slug]\" *ngIf=\"i == 4 && item.pictures.length > 5\">\r\n            <span class=\"pictures-count\">{{ item.pictures.length - 5 }}</span>\r\n          </a>\r\n        </ion-col>\r\n      </ion-row>\r\n    </div>\r\n  </ng-container>\r\n</ion-content>\r\n"]}