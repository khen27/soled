{"version":3,"sources":["webpack:///src/app/firebase/crud/user/update/firebase-update-user.modal.html","webpack:///src/app/firebase/crud/user/update/firebase-update-user.modal.ts","webpack:///src/app/firebase/crud/user/firebase-user-details.module.ts","webpack:///src/app/firebase/crud/user/details/firebase-user-details.page.html","webpack:///src/app/firebase/crud/user/details/firebase-user-details.page.ts","webpack:///src/app/firebase/crud/user/firebase-user-details.resolver.ts"],"names":["FirebaseUpdateUserModal","modalController","alertController","firebaseCrudService","router","ngZone","skills","selectedAvatar","user","avatar","updateUserForm","name","required","lastname","email","compose","pattern","phone","birthdate","format","minSelectedCheckboxes","spanish","languages","english","french","getSkills","subscribe","map","skill","userSkillsIds","skillId","control","includes","id","controls","push","value","dismiss","create","header","message","buttons","text","role","handler","deleteUser","then","dismissModal","run","navigate","err","console","log","alert","present","unix","selectedSkills","index","age","userData","updateUser","getTop","component","swipeToClose","presentingElement","modal","onDidDismiss","data","link","get","changeUserImage","selector","templateUrl","styleUrls","routes","path","resolve","FirebaseUserDetailsPageModule","forChild","imports","declarations","providers","FirebaseUserDetailsPage","route","routerOutlet","pipe","resolvedRouteData","resolvedDataStores","combinedDataStore","relatedUsersDataStore","relatedUsers","state","componentProps","nativeEl","isShell","openFirebaseUpdateModal","FirebaseUserDetailsResolver","userId","paramMap","combinedUserDataSource","getCombinedUserDataSource","combinedUserDataStore","getCombinedUserStore","relatedUsersDataSource","getRelatedUsersDataSource","getRelatedUsersStore"],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAsDQ;;AACE;;AAA6B;;AAAkB;;AAC/C;;AACF;;;;;;;;AAF+B;;AAAA;;AACf;;AAAA;;;;;;;;;;;UCnCXA,uB;AAQX,yCACUC,eADV,EAESC,eAFT,EAGSC,mBAHT,EAISC,MAJT,EAKUC,MALV,EAKwB;AAAA;;AAJd,eAAAJ,eAAA,GAAAA,eAAA;AACD,eAAAC,eAAA,GAAAA,eAAA;AACA,eAAAC,mBAAA,GAAAA,mBAAA;AACA,eAAAC,MAAA,GAAAA,MAAA;AACC,eAAAC,MAAA,GAAAA,MAAA;AAPV,eAAAC,MAAA,GAAS,EAAT;AAQK;;;;qCAEM;AAAA;;AACT,iBAAKC,cAAL,GAAsB,KAAKC,IAAL,CAAUC,MAAhC;AAEA,iBAAKC,cAAL,GAAsB,IAAI,wDAAJ,CAAc;AAClCC,kBAAI,EAAE,IAAI,0DAAJ,CAAgB,KAAKH,IAAL,CAAUG,IAA1B,EAAgC,0DAAWC,QAA3C,CAD4B;AAElCC,sBAAQ,EAAE,IAAI,0DAAJ,CAAgB,KAAKL,IAAL,CAAUK,QAA1B,EAAoC,0DAAWD,QAA/C,CAFwB;AAGlCE,mBAAK,EAAE,IAAI,0DAAJ,CAAgB,KAAKN,IAAL,CAAUM,KAA1B,EAAiC,0DAAWC,OAAX,CAAmB,CACzD,0DAAWH,QAD8C,EAEzD,0DAAWI,OAAX,CAAmB,iDAAnB,CAFyD,CAAnB,CAAjC,CAH2B;AAOlCC,mBAAK,EAAE,IAAI,0DAAJ,CAAgB,KAAKT,IAAL,CAAUS,KAA1B,EAAiC,0DAAWL,QAA5C,CAP2B;AAQlCM,uBAAS,EAAE,IAAI,0DAAJ,CAAgB,2CAAW,KAAKV,IAAL,CAAUU,SAArB,EAAgCC,MAAhC,CAAuC,cAAvC,CAAhB,EAAwE,0DAAWP,QAAnF,CARuB;AASlCN,oBAAM,EAAE,IAAI,wDAAJ,CAAc,EAAd,EAAkB,gGAAyBc,qBAAzB,CAA+C,CAA/C,CAAlB,CAT0B;AAUlCC,qBAAO,EAAE,IAAI,0DAAJ,CAAgB,KAAKb,IAAL,CAAUc,SAAV,CAAoBD,OAApC,CAVyB;AAWlCE,qBAAO,EAAE,IAAI,0DAAJ,CAAgB,KAAKf,IAAL,CAAUc,SAAV,CAAoBC,OAApC,CAXyB;AAYlCC,oBAAM,EAAE,IAAI,0DAAJ,CAAgB,KAAKhB,IAAL,CAAUc,SAAV,CAAoBE,MAApC;AAZ0B,aAAd,CAAtB;AAeA,iBAAKrB,mBAAL,CAAyBsB,SAAzB,GAAqCC,SAArC,CAA+C,UAAApB,MAAM,EAAI;AACvD,mBAAI,CAACA,MAAL,GAAcA,MAAd,CADuD,CAEvD;;AACA,mBAAI,CAACA,MAAL,CAAYqB,GAAZ,CAAgB,UAACC,KAAD,EAAW;AACzB,oBAAIC,aAAa,GAAG,EAApB;;AACA,oBAAI,KAAI,CAACrB,IAAL,CAAUF,MAAd,EAAsB;AACpBuB,+BAAa,GAAG,KAAI,CAACrB,IAAL,CAAUF,MAAV,CAAiBqB,GAAjB,CAAqB,UAASG,OAAT,EAAkB;AACrD,2BAAOA,OAAO,CAAC,IAAD,CAAd;AACD,mBAFe,CAAhB;AAGD,iBANwB,CAOzB;;;AACA,oBAAMC,OAAO,GAAG,IAAI,0DAAJ,CAAgBF,aAAa,CAACG,QAAd,CAAuBJ,KAAK,CAACK,EAA7B,CAAhB,CAAhB;;AACC,qBAAI,CAACvB,cAAL,CAAoBwB,QAApB,CAA6B5B,MAA7B,CAAkD6B,IAAlD,CAAuDJ,OAAvD;AACF,eAVD;AAWD,aAdD;AAeD;;;0CAIeK,K,EAAK;AACnB,oBAAQ,IAAR;AACE,mBAAMA,KAAK,IAAI,CAAf;AACE,uBAAO,QAAP;;AACF,mBAAMA,KAAK,GAAG,CAAR,IAAaA,KAAK,IAAI,CAA5B;AACE,uBAAO,WAAP;;AACF,mBAAMA,KAAK,GAAG,CAAd;AACE,uBAAO,QAAP;AANJ;AAQD;;;yCAEc;AACd,iBAAKnC,eAAL,CAAqBoC,OAArB;AACA;;;uCAEkB;;;;;;;;;;AACH,6BAAM,KAAKnC,eAAL,CAAqBoC,MAArB,CAA4B;AAC9CC,8BAAM,EAAE,SADsC;AAE9CC,+BAAO,EAAE,2BAA2B,KAAKhC,IAAL,CAAUG,IAArC,GAA4C,GAFP;AAG9C8B,+BAAO,EAAE,CACP;AACEC,8BAAI,EAAE,IADR;AAEEC,8BAAI,EAAE,QAFR;AAGEC,iCAAO,EAAE,mBAAM,CAAE;AAHnB,yBADO,EAMP;AACEF,8BAAI,EAAE,KADR;AAEEE,iCAAO,EAAE,mBAAM;AACb,kCAAI,CAACzC,mBAAL,CAAyB0C,UAAzB,CAAoC,MAAI,CAACrC,IAAL,CAAUyB,EAA9C,EACCa,IADD,CAEE,YAAM;AACJ,oCAAI,CAACC,YAAL;;AACA,oCAAI,CAAC1C,MAAL,CAAY2C,GAAZ,CAAgB;AAAA,uCAAM,MAAI,CAAC5C,MAAL,CAAY6C,QAAZ,CAAqB,CAAC,uBAAD,CAArB,CAAN;AAAA,+BAAhB,EAAuEH,IAAvE;AACD,6BALH,EAME,UAAAI,GAAG;AAAA,qCAAIC,OAAO,CAACC,GAAR,CAAYF,GAAZ,CAAJ;AAAA,6BANL;AAQD;AAXH,yBANO;AAHqC,uBAA5B,CAAN;;;AAARG,2B;;AAwBN,6BAAMA,KAAK,CAACC,OAAN,EAAN;;;;;;;;;AACD;;;uCAEY;AAAA;;AACX,iBAAK9C,IAAL,CAAUC,MAAV,GAAmB,KAAKF,cAAxB;AACA,iBAAKC,IAAL,CAAUG,IAAV,GAAiB,KAAKD,cAAL,CAAoB0B,KAApB,CAA0BzB,IAA3C;AACA,iBAAKH,IAAL,CAAUK,QAAV,GAAqB,KAAKH,cAAL,CAAoB0B,KAApB,CAA0BvB,QAA/C;AACA,iBAAKL,IAAL,CAAUU,SAAV,GAAsB,kCAAK,CAAC,KAAKR,cAAL,CAAoB0B,KAApB,CAA0BlB,SAA3B,CAAL,CAA2CqC,IAA3C,EAAtB,CAJW,CAI8D;;AACzE,iBAAK/C,IAAL,CAAUS,KAAV,GAAkB,KAAKP,cAAL,CAAoB0B,KAApB,CAA0BnB,KAA5C;AACA,iBAAKT,IAAL,CAAUM,KAAV,GAAkB,KAAKJ,cAAL,CAAoB0B,KAApB,CAA0BtB,KAA5C;AACA,iBAAKN,IAAL,CAAUc,SAAV,CAAoBD,OAApB,GAA8B,KAAKX,cAAL,CAAoB0B,KAApB,CAA0Bf,OAAxD;AACA,iBAAKb,IAAL,CAAUc,SAAV,CAAoBC,OAApB,GAA8B,KAAKb,cAAL,CAAoB0B,KAApB,CAA0Bb,OAAxD;AACA,iBAAKf,IAAL,CAAUc,SAAV,CAAoBE,MAApB,GAA6B,KAAKd,cAAL,CAAoB0B,KAApB,CAA0BZ,MAAvD,CATW,CAWX;;AACA,gBAAMgC,cAAc,GAAG,EAAvB;AAEA,iBAAK9C,cAAL,CAAoB0B,KAApB,CAA0B9B,MAA1B,CACCqB,GADD,CACK,UAACS,KAAD,EAAaqB,KAAb,EAA+B;AAClC,kBAAIrB,KAAJ,EAAW;AACToB,8BAAc,CAACrB,IAAf,CAAoB,MAAI,CAAC7B,MAAL,CAAYmD,KAAZ,EAAmBxB,EAAvC;AACD;AACF,aALD;AAMA,iBAAKzB,IAAL,CAAUF,MAAV,GAAmBkD,cAAnB;AAEM,qBAAqB,KAAKhD,IAA1B;AAAA,gBAACkD,GAAD,GAAI,EAAJ,CAACA,GAAD;AAAA,gBAASC,QAAT,GAAiB,yDAAjB,OAAiB,CAAjB,CAtBK,CAsB2B;;AAEtC,iBAAKxD,mBAAL,CAAyByD,UAAzB,CAAoCD,QAApC,EACCb,IADD,CAEE;AAAA,qBAAM,MAAI,CAAC7C,eAAL,CAAqBoC,OAArB,EAAN;AAAA,aAFF,EAGE,UAAAa,GAAG;AAAA,qBAAIC,OAAO,CAACC,GAAR,CAAYF,GAAZ,CAAJ;AAAA,aAHL;AAKD;;;4CAEuB;;;;;;;;;qCACF,KAAKjD,e;qCACZ,0F;;AAEQ,6BAAM,KAAKA,eAAL,CAAqB4D,MAArB,EAAN;;;;;AAFnBC,iC;AACAC,oC,EAAc,I;AACdC,yC;;;AAHY,0CAA2B1B,MAA3B;;;AAAR2B,2B;AAMNA,2BAAK,CAACC,YAAN,GAAqBpB,IAArB,CAA0B,UAAArC,MAAM,EAAI;AAClC,4BAAIA,MAAM,CAAC0D,IAAP,IAAe,IAAnB,EAAyB;AACvB,gCAAI,CAAC5D,cAAL,GAAsBE,MAAM,CAAC0D,IAAP,CAAYC,IAAlC;AACD;AACF,uBAJD;;AAKA,6BAAMH,KAAK,CAACX,OAAN,EAAN;;;;;;;;;AACD;;;8BAzFqB;AAAE,mBAAkB,KAAK5C,cAAL,CAAoB2D,GAApB,CAAwB,QAAxB,CAAlB;AAAsD;;;;;;;yBAnDnErE,uB,EAAuB,+H,EAAA,+H,EAAA,2I,EAAA,uH,EAAA,qH;AAAA,O;;;cAAvBA,uB;AAAuB,iD;AAAA;AAAA;AAAA,S;AAAA,iB;AAAA,gB;AAAA,y/D;AAAA;AAAA;ADnBpC;;AAAqE;AAAA,qBAAY,IAAA4D,UAAA,EAAZ;AAAwB,aAAxB;;AACnE;;AACE;;AACE;;AACE;;AAAY;AAAA,qBAAS,IAAAb,YAAA,EAAT;AAAuB,aAAvB;;AACV;;AACF;;AACF;;AACA;;AAAW;;AAAW;;AACxB;;AACF;;AAEA;;AACE;;AACE;;AACE;;AACE;;AACF;;AACA;;AAAuD;AAAA,qBAAS,IAAAuB,eAAA,EAAT;AAA0B,aAA1B;;AACrD;;AACF;;AACF;;AACF;;AAEA;;AACE;;AACE;;AACE;;AAAiD;;AAAI;;AACrD;;AACF;;AACA;;AACE;;AAAiD;;AAAS;;AAC1D;;AACF;;AACA;;AACE;;AAAiD;;AAAa;;AAC9D;;AACF;;AACA;;AACE;;AAAiD;;AAAY;;AAC7D;;AACF;;AACA;;AACE;;AAAiD;;AAAK;;AACtD;;AACF;;AACF;;AACF;;AAEA;;AACE;;AAA2B;;AAAa;;AACxC;;AACE;;AAIF;;AACF;;AAEA;;AACE;;AAA2B;;AAAS;;AACpC;;AACE;;AACE;;AACE;;AAA0B;;AAAO;;AACjC;;AAA0B;;AAA4D;;AACxF;;AACF;;AACA;;AACE;;AACF;;AACF;;AACA;;AACE;;AACE;;AACE;;AAA0B;;AAAO;;AACjC;;AAA0B;;AAA4D;;AACxF;;AACF;;AACA;;AACE;;AACF;;AACF;;AACA;;AACE;;AACE;;AACE;;AAA0B;;AAAM;;AAChC;;AAA0B;;AAA2D;;AACvF;;AACF;;AACA;;AACE;;AACF;;AACF;;AACF;;AACF;;AAEA;;AACE;;AACE;;AACE;;AAA6E;AAAA,qBAAS,IAAAzB,UAAA,EAAT;AAAqB,aAArB;;AAAuB;;AAAM;;AAC5G;;AACA;;AACE;;AAA8H;;AAAM;;AACtI;;AACF;;AACF;;AACF;;;;AA3GwC;;AAed;;AAAA;;AACC;;AAAA,yFAAmB,KAAnB,EAAmB,kBAAnB,EAAmB,KAAnB,EAAmB,YAAnB;;AAoC4D;;AAAA;;AAajD;;AAAA;;AAWA;;AAAA;;AAWA;;AAAA;;AAgB6D;;AAAA;;;;;;;;;wECpFtF7C,uB,EAAuB;gBARnC,uDAQmC;iBARzB;AACTuE,oBAAQ,EAAE,0BADD;AAETC,uBAAW,EAAE,mCAFJ;AAGTC,qBAAS,EAAE,CACT,0CADS,EAET,0CAFS;AAHF,W;AAQyB,U;;;;;;;;;;;;;AAEzBjE,cAAI,EAAE,CAAF;kBAAZ;AAAY,WAAE;;;;;;;;;;;;;;;;;;;ACvBjB;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;;AAYA,UAAMkE,MAAM,GAAW,CACrB;AACEC,YAAI,EAAE,EADR;AAEEb,iBAAS,EAAE,2FAFb;AAGEc,eAAO,EAAE;AACPT,cAAI,EAAE;AADC;AAHX,OADqB,CAAvB;;UA6BaU,6B;;;;;cAAAA;;;;2BAAAA,6B;AAA6B,S;AAAA,mBAL7B,CACT,0EADS,EAET,2FAFS,C;AAGV,kBAhBQ,CACP,4DADO,EAEP,0DAFO,EAGP,kEAHO,EAIP,0DAJO,EAKP,6DAAaC,QAAb,CAAsBJ,MAAtB,CALO,EAMP,8EANO,EAOP,sFAPO,CAgBR;;;;4HAEUG,6B,EAA6B;AAAA,yBARtC,2FAQsC,EAPtC,0FAOsC;AAPf,oBAVvB,4DAUuB,EATvB,0DASuB,EARvB,kEAQuB,EAPvB,0DAOuB,EAPZ,4DAOY,EALvB,8EAKuB,EAJvB,sFAIuB;AAOe,S;AAXd,O;;;;;wEAWfA,6B,EAA6B;gBAnBzC,sDAmByC;iBAnBhC;AACRE,mBAAO,EAAE,CACP,4DADO,EAEP,0DAFO,EAGP,kEAHO,EAIP,0DAJO,EAKP,6DAAaD,QAAb,CAAsBJ,MAAtB,CALO,EAMP,8EANO,EAOP,sFAPO,CADD;AAURM,wBAAY,EAAE,CACZ,2FADY,EAEZ,0FAFY,CAVN;AAcRC,qBAAS,EAAE,CACT,0EADS,EAET,2FAFS;AAdH,W;AAmBgC,U;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;ACwCpC;;AACE;;AACE;;AACF;;AACA;;AACF;;;;;;AAHyC;;AAAA;;;;;;;;;;;;;;;;;AAUzC;;AACE;;AACE;;AACF;;AACA;;AACE;;AACF;;AACF;;;;;;AANoB;;AAAA;;AACC;;AAAA,uFAAmB,KAAnB,EAAmB,cAAnB,EAAmB,YAAnB,EAAmB,iFAAnB;;AAGD;;AAAA;;;;;;AARxB;;AACE;;AAA2B;;AAAyB;;AACpD;;AACE;;AAQF;;AACF;;;;;;AATuC;;AAAA;;;;UCzE5BC,uB;AAUX,yCACS/E,mBADT,EAESF,eAFT,EAGSG,MAHT,EAIU+E,KAJV,EAKUC,YALV,EAKuC;AAAA;;AAJ9B,eAAAjF,mBAAA,GAAAA,mBAAA;AACA,eAAAF,eAAA,GAAAA,eAAA;AACA,eAAAG,MAAA,GAAAA,MAAA;AACC,eAAA+E,KAAA,GAAAA,KAAA;AACA,eAAAC,YAAA,GAAAA,YAAA;AACL;;;;qCAEM;AAAA;;AAET,iBAAKD,KAAL,CAAWhB,IAAX,CACCkB,IADD,CAEE,2DAAI,UAACC,iBAAD,EAAuB;AACzB,kBAAMC,kBAAkB,GAAGD,iBAAiB,CAAC,MAAD,CAA5C;AACA,kBAAME,iBAAiB,GAAyCD,kBAAkB,CAAC/E,IAAnF;AACA,kBAAMiF,qBAAqB,GAA+CF,kBAAkB,CAACG,YAA7F;AAEAF,+BAAiB,CAACG,KAAlB,CAAwBjE,SAAxB,CACE,UAACiE,KAAD;AAAA,uBAAW,MAAI,CAACnF,IAAL,GAAYmF,KAAvB;AAAA,eADF;AAIAF,mCAAqB,CAACE,KAAtB,CAA4BjE,SAA5B,CACE,UAACiE,KAAD;AAAA,uBAAW,MAAI,CAACD,YAAL,GAAoBC,KAA/B;AAAA,eADF;AAGD,aAZD,CAFF,EAeEjE,SAfF;AAgBD;;;oDAE+B;;;;;;;;AAChB,6BAAM,KAAKzB,eAAL,CAAqBqC,MAArB,CAA4B;AAC9CwB,iCAAS,EAAE,0FADmC;AAE9C8B,sCAAc,EAAE;AACd,kCAAQ,KAAKpF;AADC,yBAF8B;AAK9CuD,oCAAY,EAAE,IALgC;AAM9CC,yCAAiB,EAAE,KAAKoB,YAAL,CAAkBS;AANS,uBAA5B,CAAN;;;AAAR5B,2B;;AASN,6BAAMA,KAAK,CAACX,OAAN,EAAN;;;;;;;;;AACD;;;8BA3C4C;AAC3C,mBAAS,KAAK9C,IAAL,IAAa,KAAKA,IAAL,CAAUsF,OAAxB,IAAqC,KAAKJ,YAAL,IAAqB,KAAKA,YAAL,CAAkBI,OAA7E,GAAyF,IAAzF,GAAgG,KAAvG;AACD;;;;;;;yBARUZ,uB,EAAuB,2I,EAAA,+H,EAAA,uH,EAAA,+H,EAAA,+H;AAAA,O;;;cAAvBA,uB;AAAuB,kD;AAAA,mB;AAAA;AAAA;;;;;;;;;ADpBpC;;AACE;;AACE;;AACE;;AACF;;AACA;;AAAW;;AAAY;;AACvB;;AACE;;AAAY;AAAA,qBAAS,IAAAa,uBAAA,EAAT;AAAkC,aAAlC;;AACV;;AACF;;AACF;;AACF;;AACF;;AAEA;;AACE;;AACE;;AACE;;AACE;;AAEF;;AACF;;AACA;;AACE;;AACE;;AACF;;AACA;;AACE;;AACF;;AACF;;AACA;;AACE;;AACE;;AACE;;AACE;;AACF;;AACF;;AACA;;AACE;;AACE;;AACF;;AACF;;AACA;;AACE;;AACE;;AACF;;AACF;;AACA;;AACE;;AACE;;AACF;;AACF;;AACF;;AACF;;AACF;;AAEA;;AACE;;AAA2B;;AAAS;;AACpC;;AACE;;AACE;;AAA4B;;AAAO;;AACnC;;AACF;;AACF;;AACA;;AACE;;AACE;;AAA4B;;AAAO;;AACnC;;AACF;;AACF;;AACA;;AACE;;AACE;;AAA4B;;AAAM;;AAClC;;AACF;;AACF;;AACF;;AAEA;;AACE;;AAA2B;;AAAM;;AACjC;;AACE;;AAMF;;AACF;;AAEA;;AAaF;;;;AAtFwB;;AAAA;;AACC;;AAAA,yFAAmB,KAAnB,EAAmB,yCAAnB,EAAmB,KAAnB,EAAmB,YAAnB;;AAMoB;;AAAA;;AAGA;;AAAA;;AAkCuB;;AAAA;;AAMA;;AAAA;;AAMA;;AAAA;;AAQ5B;;AAAA;;AASiB;;AAAA;;;;;;;;;wECtE5Cb,uB,EAAuB;gBARnC,uDAQmC;iBARzB;AACTX,oBAAQ,EAAE,2BADD;AAETC,uBAAW,EAAE,mCAFJ;AAGTC,qBAAS,EAAE,CACT,0CADS,EAET,2CAFS;AAHF,W;AAQyB,U;;;;;;;;;;;;;AAMCqB,iBAAO;kBAAzC,yDAAyC;mBAA7B,gB;AAA6B;;;;;;;;;;;;;;;;;;;AC1B5C;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;;UAWaE,2B;AAEX,6CAAoB7F,mBAApB,EAA8D;AAAA;;AAA1C,eAAAA,mBAAA,GAAAA,mBAAA;AAA4C;;;;kCAExDgF,K,EAA+B;AACrC,gBAAMc,MAAM,GAAGd,KAAK,CAACe,QAAN,CAAe7B,GAAf,CAAmB,IAAnB,CAAf,CADqC,CAGrC;AACA;;AAEA,gBAAM8B,sBAAsB,GAA0C,KAAKhG,mBAAL,CACrEiG,yBADqE,CAC3CH,MAD2C,CAAtE;AAGA,gBAAMI,qBAAqB,GAAyC,KAAKlG,mBAAL,CACnEmG,oBADmE,CAC9CH,sBAD8C,CAApE,CATqC,CAarC;AACA;AACA;AACA;AACA;;AACA,gBAAMI,sBAAsB,GAAgD,KAAKpG,mBAAL,CAC3EqG,yBAD2E,CACjDH,qBAAqB,CAACV,KAD2B,EACpBM,MADoB,CAA5E;AAGA,gBAAMR,qBAAqB,GAA+C,KAAKtF,mBAAL,CACzEsG,oBADyE,CACpDF,sBADoD,CAA1E;AAGA,mBAAO;AAAC/F,kBAAI,EAAE6F,qBAAP;AAA8BX,0BAAY,EAAED;AAA5C,aAAP;AACD;;;;;;;yBA7BUO,2B,EAA2B,kI;AAAA,O;;;eAA3BA,2B;AAA2B,iBAA3BA,2BAA2B;;;;;wEAA3BA,2B,EAA2B;gBADvC;AACuC,U","file":"crud-user-firebase-user-details-module-es5.js","sourcesContent":["<!-- This is the proper way if you have submit button outside your ion-content form (typically in the ion-header or ion-footer) -->\r\n<!-- (ref: https://github.com/ionic-team/ionic/issues/16661) -->\r\n<form class=\"update-user-form ion-page\" [formGroup]=\"updateUserForm\" (ngSubmit)=\"updateUser()\">\r\n  <ion-header>\r\n    <ion-toolbar color=\"primary\">\r\n      <ion-buttons slot=\"end\">\r\n        <ion-button (click)=\"dismissModal()\">\r\n          <ion-icon slot=\"icon-only\" name=\"close\"></ion-icon>\r\n        </ion-button>\r\n      </ion-buttons>\r\n      <ion-title>Update User</ion-title>\r\n    </ion-toolbar>\r\n  </ion-header>\r\n\r\n  <ion-content class=\"update-user-content\">\r\n    <ion-row class=\"select-user-image-row\">\r\n      <ion-col class=\"user-image-col\" size=\"5\">\r\n        <app-aspect-ratio [ratio]=\"{w: 1, h: 1}\">\r\n          <app-image-shell [display]=\"'cover'\" class=\"user-image\" animation=\"spinner\" [src]=\"selectedAvatar\" [alt]=\"'user image'\"></app-image-shell>\r\n        </app-aspect-ratio>\r\n        <ion-button class=\"change-image-btn\" color=\"secondary\" (click)=\"changeUserImage()\">\r\n          <ion-icon class=\"btn-icon\" slot=\"icon-only\" name=\"camera\"></ion-icon>\r\n        </ion-button>\r\n      </ion-col>\r\n    </ion-row>\r\n\r\n    <section class=\"user-details-fields fields-section\">\r\n      <ion-list class=\"inputs-list\" lines=\"full\">\r\n        <ion-item class=\"input-item\">\r\n          <ion-label color=\"secondary\" position=\"floating\">Name</ion-label>\r\n          <ion-input type=\"text\" formControlName=\"name\" required></ion-input>\r\n        </ion-item>\r\n        <ion-item class=\"input-item\">\r\n          <ion-label color=\"secondary\" position=\"floating\">Last name</ion-label>\r\n          <ion-input type=\"text\" formControlName=\"lastname\" required></ion-input>\r\n        </ion-item>\r\n        <ion-item class=\"input-item\">\r\n          <ion-label color=\"secondary\" position=\"floating\">Date of Birth</ion-label>\r\n          <ion-datetime display-format=\"DD/MM/YYYY\" picker-format=\"DD MMMM YYYY\" formControlName=\"birthdate\" required></ion-datetime>\r\n        </ion-item>\r\n        <ion-item class=\"input-item\">\r\n          <ion-label color=\"secondary\" position=\"floating\">Phone number</ion-label>\r\n          <ion-input type=\"tel\" formControlName=\"phone\" required></ion-input>\r\n        </ion-item>\r\n        <ion-item class=\"input-item\">\r\n          <ion-label color=\"secondary\" position=\"floating\">Email</ion-label>\r\n          <ion-input type=\"email\" formControlName=\"email\" required></ion-input>\r\n        </ion-item>\r\n      </ion-list>\r\n    </section>\r\n\r\n    <section class=\"user-experience-fields fields-section\">\r\n      <h5 class=\"section-header\">Experience in</h5>\r\n      <ion-row class=\"checkbox-tags rounded-checkbox-tags\">\r\n        <ion-item formArrayName=\"skills\" lines=\"none\" class=\"checkbox-tag rounded-tag\" *ngFor=\"let skill of skillsFormArray.controls; let i = index;\">\r\n          <ion-label class=\"tag-label\">{{skills[i].name}}</ion-label>\r\n          <ion-checkbox [formControlName]=\"i\"></ion-checkbox>\r\n        </ion-item>\r\n      </ion-row>\r\n    </section>\r\n\r\n    <section class=\"user-languages-fields fields-section\">\r\n      <h5 class=\"section-header\">Languages</h5>\r\n      <ion-row class=\"range-item-row\">\r\n        <ion-col size=\"12\">\r\n          <div class=\"range-header\">\r\n            <span class=\"range-label\">English</span>\r\n            <span class=\"range-value\">{{ changeLangValue(updateUserForm.controls.english.value) }}</span>\r\n          </div>\r\n        </ion-col>\r\n        <ion-col size=\"12\">\r\n          <ion-range class=\"range-control\" formControlName=\"english\" color=\"secondary\" min=\"1\" max=\"10\" step=\"1\"></ion-range>\r\n        </ion-col>\r\n      </ion-row>\r\n      <ion-row class=\"range-item-row\">\r\n        <ion-col size=\"12\">\r\n          <div class=\"range-header\">\r\n            <span class=\"range-label\">Spanish</span>\r\n            <span class=\"range-value\">{{ changeLangValue(updateUserForm.controls.spanish.value) }}</span>\r\n          </div>\r\n        </ion-col>\r\n        <ion-col size=\"12\">\r\n          <ion-range class=\"range-control\" formControlName=\"spanish\" color=\"secondary\" min=\"1\" max=\"10\" step=\"1\"></ion-range>\r\n        </ion-col>\r\n      </ion-row>\r\n      <ion-row class=\"range-item-row\">\r\n        <ion-col size=\"12\">\r\n          <div class=\"range-header\">\r\n            <span class=\"range-label\">French</span>\r\n            <span class=\"range-value\">{{ changeLangValue(updateUserForm.controls.french.value) }}</span>\r\n          </div>\r\n        </ion-col>\r\n        <ion-col size=\"12\">\r\n          <ion-range class=\"range-control\" formControlName=\"french\" color=\"secondary\" min=\"1\" max=\"10\" step=\"1\"></ion-range>\r\n        </ion-col>\r\n      </ion-row>\r\n    </section>\r\n  </ion-content>\r\n\r\n  <ion-footer>\r\n    <ion-row class=\"form-actions-wrapper\">\r\n      <ion-col>\r\n        <ion-button class=\"delete-btn\" expand=\"block\" color=\"primary\" fill=\"outline\" (click)=\"deleteUser()\">DELETE</ion-button>\r\n      </ion-col>\r\n      <ion-col>\r\n        <ion-button class=\"submit-btn\" expand=\"block\" color=\"secondary\" type=\"submit\" fill=\"solid\" [disabled]=\"!updateUserForm.valid\">UPDATE</ion-button>\r\n      </ion-col>\r\n    </ion-row>\r\n  </ion-footer>\r\n</form>\r\n","import { Component, OnInit, Input, NgZone } from '@angular/core';\r\nimport { ModalController, AlertController } from '@ionic/angular';\r\nimport { Validators, FormGroup, FormControl, FormArray } from '@angular/forms';\r\nimport { Router } from '@angular/router';\r\n\r\nimport * as dayjs from 'dayjs';\r\n\r\nimport { CheckboxCheckedValidator } from '../../../../validators/checkbox-checked.validator';\r\n\r\nimport { FirebaseUserModel } from '../firebase-user.model';\r\nimport { SelectUserImageModal } from '../select-image/select-user-image.modal';\r\nimport { FirebaseCrudService } from '../../firebase-crud.service';\r\n\r\n@Component({\r\n  selector: 'app-firebase-update-user',\r\n  templateUrl: './firebase-update-user.modal.html',\r\n  styleUrls: [\r\n    './styles/firebase-update-user.modal.scss',\r\n    './styles/firebase-update-user.shell.scss'\r\n  ],\r\n})\r\nexport class FirebaseUpdateUserModal implements OnInit {\r\n  // \"user\" is passed in firebase-details.page\r\n  @Input() user: FirebaseUserModel;\r\n\r\n  updateUserForm: FormGroup;\r\n  selectedAvatar: string;\r\n  skills = [];\r\n\r\n  constructor(\r\n    private modalController: ModalController,\r\n    public alertController: AlertController,\r\n    public firebaseCrudService: FirebaseCrudService,\r\n    public router: Router,\r\n    private ngZone: NgZone\r\n  ) { }\r\n\r\n  ngOnInit() {\r\n    this.selectedAvatar = this.user.avatar;\r\n\r\n    this.updateUserForm = new FormGroup({\r\n      name: new FormControl(this.user.name, Validators.required),\r\n      lastname: new FormControl(this.user.lastname, Validators.required),\r\n      email: new FormControl(this.user.email, Validators.compose([\r\n        Validators.required,\r\n        Validators.pattern('^[a-zA-Z0-9_.+-]+@[a-zA-Z0-9-]+.[a-zA-Z0-9-.]+$')\r\n      ])),\r\n      phone: new FormControl(this.user.phone, Validators.required),\r\n      birthdate: new FormControl(dayjs.unix(this.user.birthdate).format('DD/MMMM/YYYY'), Validators.required),\r\n      skills: new FormArray([], CheckboxCheckedValidator.minSelectedCheckboxes(1)),\r\n      spanish: new FormControl(this.user.languages.spanish),\r\n      english: new FormControl(this.user.languages.english),\r\n      french: new FormControl(this.user.languages.french)\r\n    });\r\n\r\n    this.firebaseCrudService.getSkills().subscribe(skills => {\r\n      this.skills = skills;\r\n      // create skill checkboxes\r\n      this.skills.map((skill) => {\r\n        let userSkillsIds = [];\r\n        if (this.user.skills) {\r\n          userSkillsIds = this.user.skills.map(function(skillId) {\r\n            return skillId['id'];\r\n          });\r\n        }\r\n        // set the control value to 'true' if the user already has this skill\r\n        const control = new FormControl(userSkillsIds.includes(skill.id));\r\n        (this.updateUserForm.controls.skills as FormArray).push(control);\r\n      });\r\n    });\r\n  }\r\n\r\n  get skillsFormArray() { return <FormArray>this.updateUserForm.get('skills'); }\r\n\r\n  changeLangValue(value): string {\r\n    switch (true) {\r\n      case (value <= 3 ):\r\n        return 'Novice';\r\n      case (value > 3 && value <= 6 ):\r\n        return 'Competent';\r\n      case (value > 6 ):\r\n        return 'Expert';\r\n    }\r\n  }\r\n\r\n  dismissModal() {\r\n   this.modalController.dismiss();\r\n  }\r\n\r\n  async deleteUser() {\r\n    const alert = await this.alertController.create({\r\n      header: 'Confirm',\r\n      message: 'Do you want to delete ' + this.user.name + '?',\r\n      buttons: [\r\n        {\r\n          text: 'No',\r\n          role: 'cancel',\r\n          handler: () => {}\r\n        },\r\n        {\r\n          text: 'Yes',\r\n          handler: () => {\r\n            this.firebaseCrudService.deleteUser(this.user.id)\r\n            .then(\r\n              () => {\r\n                this.dismissModal();\r\n                this.ngZone.run(() => this.router.navigate(['firebase/crud/listing'])).then();\r\n              },\r\n              err => console.log(err)\r\n            );\r\n          }\r\n        }\r\n      ]\r\n    });\r\n    await alert.present();\r\n  }\r\n\r\n  updateUser() {\r\n    this.user.avatar = this.selectedAvatar;\r\n    this.user.name = this.updateUserForm.value.name;\r\n    this.user.lastname = this.updateUserForm.value.lastname;\r\n    this.user.birthdate = dayjs(this.updateUserForm.value.birthdate).unix(); // save it in timestamp\r\n    this.user.phone = this.updateUserForm.value.phone;\r\n    this.user.email = this.updateUserForm.value.email;\r\n    this.user.languages.spanish = this.updateUserForm.value.spanish;\r\n    this.user.languages.english = this.updateUserForm.value.english;\r\n    this.user.languages.french = this.updateUserForm.value.french;\r\n\r\n    // get the ids of the selected skills\r\n    const selectedSkills = [];\r\n\r\n    this.updateUserForm.value.skills\r\n    .map((value: any, index: number) => {\r\n      if (value) {\r\n        selectedSkills.push(this.skills[index].id);\r\n      }\r\n    });\r\n    this.user.skills = selectedSkills;\r\n\r\n    const {age, ...userData} = this.user; // we don't want to save the age in the DB because is something that changes over time\r\n\r\n    this.firebaseCrudService.updateUser(userData)\r\n    .then(\r\n      () => this.modalController.dismiss(),\r\n      err => console.log(err)\r\n    );\r\n  }\r\n\r\n  async changeUserImage() {\r\n    const modal = await this.modalController.create({\r\n      component: SelectUserImageModal,\r\n      swipeToClose: true,\r\n      presentingElement: await this.modalController.getTop()\r\n    });\r\n\r\n    modal.onDidDismiss().then(avatar => {\r\n      if (avatar.data != null) {\r\n        this.selectedAvatar = avatar.data.link;\r\n      }\r\n    });\r\n    await modal.present();\r\n  }\r\n}\r\n","import { NgModule } from '@angular/core';\r\nimport { CommonModule } from '@angular/common';\r\nimport { FormsModule, ReactiveFormsModule } from '@angular/forms';\r\nimport { Routes, RouterModule } from '@angular/router';\r\nimport { IonicModule } from '@ionic/angular';\r\nimport { ComponentsModule } from '../../../components/components.module';\r\nimport { FirebaseUserDetailsPage } from './details/firebase-user-details.page';\r\nimport { FirebaseUserDetailsResolver } from './firebase-user-details.resolver';\r\nimport { FirebaseUpdateUserModal } from './update/firebase-update-user.modal';\r\nimport { FirebaseCrudService } from '../firebase-crud.service';\r\nimport { FirebaseCrudSharedModule } from '../firebase-crud-shared.module';\r\n\r\nconst routes: Routes = [\r\n  {\r\n    path: '',\r\n    component: FirebaseUserDetailsPage,\r\n    resolve: {\r\n      data: FirebaseUserDetailsResolver\r\n    }\r\n  }\r\n];\r\n\r\n@NgModule({\r\n  imports: [\r\n    CommonModule,\r\n    FormsModule,\r\n    ReactiveFormsModule,\r\n    IonicModule,\r\n    RouterModule.forChild(routes),\r\n    ComponentsModule,\r\n    FirebaseCrudSharedModule\r\n  ],\r\n  declarations: [\r\n    FirebaseUserDetailsPage,\r\n    FirebaseUpdateUserModal\r\n  ],\r\n  providers: [\r\n    FirebaseCrudService,\r\n    FirebaseUserDetailsResolver\r\n  ]\r\n})\r\nexport class FirebaseUserDetailsPageModule {}\r\n","<ion-header>\r\n  <ion-toolbar color=\"primary\">\r\n    <ion-buttons slot=\"start\">\r\n      <ion-back-button defaultHref=\"firebase/crud/listing\"></ion-back-button>\r\n    </ion-buttons>\r\n    <ion-title>User Details</ion-title>\r\n    <ion-buttons slot=\"end\">\r\n      <ion-button (click)=\"openFirebaseUpdateModal()\">\r\n        Edit\r\n      </ion-button>\r\n    </ion-buttons>\r\n  </ion-toolbar>\r\n</ion-header>\r\n\r\n<ion-content class=\"user-content\">\r\n  <ion-row class=\"user-info-row\">\r\n    <ion-col class=\"user-image-col\" size=\"5\">\r\n      <app-aspect-ratio [ratio]=\"{w: 1, h: 1}\">\r\n        <app-image-shell [display]=\"'cover'\" class=\"user-image\" animation=\"spinner\" [src]=\"user?.avatar\" [alt]=\"'item image'\">\r\n        </app-image-shell>\r\n      </app-aspect-ratio>\r\n    </ion-col>\r\n    <ion-col class=\"user-details-col\" size=\"12\">\r\n      <h2 class=\"user-name\">\r\n        <app-text-shell animation=\"bouncing\" [data]=\"user?.name?.concat(' ').concat(user?.lastname)\"></app-text-shell>\r\n      </h2>\r\n      <span class=\"user-age\">\r\n        <app-text-shell animation=\"bouncing\" [data]=\"user?.age?.toString().concat(' years young')\"></app-text-shell>\r\n      </span>\r\n    </ion-col>\r\n    <ion-col class=\"actions-col\" size=\"12\">\r\n      <ion-row>\r\n        <ion-col size=\"3\">\r\n          <ion-button class=\"action-btn\" color=\"secondary\">\r\n            <ion-icon class=\"btn-icon\" slot=\"icon-only\" name=\"mail\"></ion-icon>\r\n          </ion-button>\r\n        </ion-col>\r\n        <ion-col size=\"3\">\r\n          <ion-button class=\"action-btn\" color=\"secondary\">\r\n            <ion-icon class=\"btn-icon\" slot=\"icon-only\" name=\"call\"></ion-icon>\r\n          </ion-button>\r\n        </ion-col>\r\n        <ion-col size=\"3\">\r\n          <ion-button class=\"action-btn\" color=\"secondary\">\r\n            <ion-icon class=\"btn-icon\" slot=\"icon-only\" name=\"videocam\"></ion-icon>\r\n          </ion-button>\r\n        </ion-col>\r\n        <ion-col size=\"3\">\r\n          <ion-button class=\"action-btn\" color=\"secondary\">\r\n            <ion-icon class=\"btn-icon\" slot=\"icon-only\" name=\"text\"></ion-icon>\r\n          </ion-button>\r\n        </ion-col>\r\n      </ion-row>\r\n    </ion-col>\r\n  </ion-row>\r\n\r\n  <section class=\"content-section user-languages-wrapper\">\r\n    <h5 class=\"section-header\">Languages</h5>\r\n    <ion-row class=\"language-item-row\">\r\n      <ion-col class=\"language-item\">\r\n        <span class=\"language-name\">English</span>\r\n        <ion-progress-bar class=\"language-score\" type=\"determinate\" [value]=\"(user?.languages?.english / 10)\"></ion-progress-bar>\r\n      </ion-col>\r\n    </ion-row>\r\n    <ion-row class=\"language-item-row\">\r\n      <ion-col class=\"language-item\">\r\n        <span class=\"language-name\">Spanish</span>\r\n        <ion-progress-bar class=\"language-score\" type=\"determinate\" [value]=\"(user?.languages?.spanish / 10)\"></ion-progress-bar>\r\n      </ion-col>\r\n    </ion-row>\r\n    <ion-row class=\"language-item-row\">\r\n      <ion-col class=\"language-item\">\r\n        <span class=\"language-name\">French</span>\r\n        <ion-progress-bar class=\"language-score\" type=\"determinate\" [value]=\"(user?.languages?.french / 10)\"></ion-progress-bar>\r\n      </ion-col>\r\n    </ion-row>\r\n  </section>\r\n\r\n  <section class=\"content-section user-experience-wrapper\">\r\n    <h5 class=\"section-header\">Skills</h5>\r\n    <ion-list class=\"experience-list\" lines=\"none\">\r\n      <ion-item class=\"experience-item\" *ngFor=\"let skill of user?.skills\">\r\n        <label class=\"experience-label\">\r\n          <app-text-shell animation=\"bouncing\" [data]=\"skill?.name\"></app-text-shell>\r\n        </label>\r\n        <ion-icon class=\"experience-list-icon\" slot=\"start\" name=\"checkmark\" color=\"secondary\"></ion-icon>\r\n      </ion-item>\r\n    </ion-list>\r\n  </section>\r\n\r\n  <section class=\"content-section related-users-wrapper\" *ngIf=\"relatedUsers?.length > 0\">\r\n    <h5 class=\"section-header\">Users with similar skills</h5>\r\n    <ion-row class=\"related-users-row\">\r\n      <ion-col class=\"related-user-item\" *ngFor=\"let user of relatedUsers\">\r\n        <app-aspect-ratio [ratio]=\"{w: 1, h: 1}\">\r\n          <app-image-shell [display]=\"'cover'\" class=\"related-user-picture\" [src]=\"user.avatar\" [routerLink]=\"['/firebase/crud/details', user.id]\"></app-image-shell>\r\n        </app-aspect-ratio>\r\n        <span class=\"related-user-name\">\r\n          <app-text-shell [data]=\"user.name\"></app-text-shell>\r\n        </span>\r\n      </ion-col>\r\n    </ion-row>\r\n  </section>\r\n</ion-content>\r\n","import { Component, OnInit, HostBinding } from '@angular/core';\r\nimport { ModalController, IonRouterOutlet } from '@ionic/angular';\r\nimport { ActivatedRoute, Router } from '@angular/router';\r\n\r\nimport { FirebaseCombinedUserModel } from '../firebase-user.model';\r\nimport { FirebaseListingItemModel } from '../../listing/firebase-listing.model';\r\nimport { FirebaseUpdateUserModal } from '../update/firebase-update-user.modal';\r\n\r\nimport { DataStore, ShellModel } from '../../../../shell/data-store';\r\nimport { FirebaseCrudService } from '../../firebase-crud.service';\r\nimport { map } from 'rxjs/operators';\r\n\r\n@Component({\r\n  selector: 'app-firebase-user-details',\r\n  templateUrl: './firebase-user-details.page.html',\r\n  styleUrls: [\r\n    './styles/firebase-user-details.page.scss',\r\n    './styles/firebase-user-details.shell.scss'\r\n  ],\r\n})\r\nexport class FirebaseUserDetailsPage implements OnInit {\r\n  user: FirebaseCombinedUserModel;\r\n  // Use Typescript intersection types to enable docorating the Array of firebase models with a shell model\r\n  // (ref: https://www.typescriptlang.org/docs/handbook/advanced-types.html#intersection-types)\r\n  relatedUsers: Array<FirebaseListingItemModel> & ShellModel;\r\n\r\n  @HostBinding('class.is-shell') get isShell() {\r\n    return ((this.user && this.user.isShell) || (this.relatedUsers && this.relatedUsers.isShell)) ? true : false;\r\n  }\r\n\r\n  constructor(\r\n    public firebaseCrudService: FirebaseCrudService,\r\n    public modalController: ModalController,\r\n    public router: Router,\r\n    private route: ActivatedRoute,\r\n    private routerOutlet: IonRouterOutlet\r\n  ) { }\r\n\r\n  ngOnInit() {\r\n\r\n    this.route.data\r\n    .pipe(\r\n      map((resolvedRouteData) => {\r\n        const resolvedDataStores = resolvedRouteData['data'];\r\n        const combinedDataStore: DataStore<FirebaseCombinedUserModel> = resolvedDataStores.user;\r\n        const relatedUsersDataStore: DataStore<Array<FirebaseListingItemModel>> = resolvedDataStores.relatedUsers;\r\n\r\n        combinedDataStore.state.subscribe(\r\n          (state) => this.user = state\r\n        );\r\n\r\n        relatedUsersDataStore.state.subscribe(\r\n          (state) => this.relatedUsers = state\r\n        );\r\n      })\r\n    ).subscribe();\r\n  }\r\n\r\n  async openFirebaseUpdateModal() {\r\n    const modal = await this.modalController.create({\r\n      component: FirebaseUpdateUserModal,\r\n      componentProps: {\r\n        'user': this.user\r\n      },\r\n      swipeToClose: true,\r\n      presentingElement: this.routerOutlet.nativeEl\r\n    });\r\n\r\n    await modal.present();\r\n  }\r\n}\r\n","import { Injectable } from '@angular/core';\r\nimport { Resolve, ActivatedRouteSnapshot } from '@angular/router';\r\nimport { Observable } from 'rxjs';\r\n\r\nimport { FirebaseCombinedUserModel } from './firebase-user.model';\r\nimport { FirebaseListingItemModel } from '../listing/firebase-listing.model';\r\n\r\nimport { DataStore } from '../../../shell/data-store';\r\nimport { FirebaseCrudService } from '../firebase-crud.service';\r\n\r\n@Injectable()\r\nexport class FirebaseUserDetailsResolver implements Resolve<any> {\r\n\r\n  constructor(private firebaseCrudService: FirebaseCrudService) {}\r\n\r\n  resolve(route: ActivatedRouteSnapshot) {\r\n    const userId = route.paramMap.get('id');\r\n\r\n    // We created a FirebaseCombinedUserModel to combine the userData with the details of the userSkills (from the skills collection).\r\n    // They are 2 different collections and we need to combine them into 1 dataSource.\r\n\r\n    const combinedUserDataSource: Observable<FirebaseCombinedUserModel> = this.firebaseCrudService\r\n    .getCombinedUserDataSource(userId);\r\n\r\n    const combinedUserDataStore: DataStore<FirebaseCombinedUserModel> = this.firebaseCrudService\r\n    .getCombinedUserStore(combinedUserDataSource);\r\n\r\n\r\n    // The user details page has a section with related users, showing users with the same skills\r\n    // For this we created another datastore which depends on the combinedUser data store\r\n    // The DataStore subscribes to the DataSource, to avoid creating two subscribers to the combinedUserDataSource,\r\n    // use the combinedUserDataStore timeline instead. (The timeline is a Subject, and is intended to have many subscribers)\r\n    // Using, and thus subscribing to the timeline won't trigger two requests to the firebase endpoint\r\n    const relatedUsersDataSource: Observable<Array<FirebaseListingItemModel>> = this.firebaseCrudService\r\n    .getRelatedUsersDataSource(combinedUserDataStore.state, userId);\r\n\r\n    const relatedUsersDataStore: DataStore<Array<FirebaseListingItemModel>> = this.firebaseCrudService\r\n    .getRelatedUsersStore(relatedUsersDataSource);\r\n\r\n    return {user: combinedUserDataStore, relatedUsers: relatedUsersDataStore};\r\n  }\r\n}\r\n"]}