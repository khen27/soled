{"version":3,"sources":["webpack:///node_modules/firebase/firestore/dist/index.esm.js","webpack:///src/app/firebase/crud/firebase-crud.module.ts","webpack:///node_modules/@angular/fire/__ivy_ngcc__/fesm2015/angular-fire-firestore.js"],"names":["firebaseRoutes","path","children","redirectTo","pathMatch","loadChildren","then","m","FirebaseListingPageModule","FirebaseUserDetailsPageModule","FirebaseCrudModule","forChild","initializeApp","firebase","imports","_fromRef","ref","scheduler","subscriber","unsubscribe","schedule","onSnapshot","fromRef","fromDocRef","pipe","payload","type","fromCollectionRef","docChanges","query","action","map","change","sortedChanges","events","changes","current","combineChanges","c","forEach","indexOf","combineChange","combined","newIndex","doc","isEqual","splice","oldIndex","validateEventsArray","length","AngularFirestoreCollection","afs","schedulers","outsideAngular","keepUnstableUntilFirst","actions","filter","stateChanges","validatedEvents","scheduledSortedChanges$","options","docs","a","idField","Object","assign","data","id","get","insideAngular","add","AngularFirestoreDocument","set","update","queryFn","collectionRef","collection","associateQuery","scheduledFromDocRef$","snapshotChanges","AngularFirestoreCollectionGroup","fromCollectionRefScheduled$","atFirestore","ENABLE_PERSISTENCE","PERSISTENCE_SETTINGS","SETTINGS","AngularFirestore","nameOrConfig","shouldEnablePersistence","settings","platformId","zone","persistenceSettings","firestore","runOutsideAngular","app","registerFirestore","enablePersistence","undefined","e","persistenceEnabled$","pathOrRef","refInZone","ngZone","run","collectionId","queryGroupFn","collectionGroup","ɵfac","AngularFirestore_Factory","t","ctorParameters","decorators","args","ɵprov","factory","token","providedIn","AngularFirestoreModule","ngModule","providers","provide","useValue","ɵmod","ɵinj","AngularFirestoreModule_Factory","DocumentSnapshotExists","DocumentSnapshotDoesNotExist","QueryDocumentSnapshot","QuerySnapshot","DocumentChange","DocumentChangeAction","Action","Reference","AssociatedReference"],"mappings":"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","file":"firebase-crud-firebase-crud-module-es5.js","sourcesContent":["import '@firebase/firestore';\r\n//# sourceMappingURL=index.esm.js.map\r\n","import { IonicModule } from '@ionic/angular';\r\nimport { RouterModule, Routes } from '@angular/router';\r\nimport { NgModule } from '@angular/core';\r\nimport { CommonModule } from '@angular/common';\r\n\r\nimport { AngularFireModule } from '@angular/fire';\r\nimport { AngularFirestoreModule } from '@angular/fire/firestore';\r\nimport { environment } from '../../../environments/environment';\r\n\r\nconst firebaseRoutes: Routes = [\r\n  {\r\n    path: '',\r\n    children: [\r\n      // /firebase/crud redirect\r\n      {\r\n        path: '',\r\n        redirectTo: 'listing',\r\n        pathMatch: 'full',\r\n      },\r\n      {\r\n        path: 'listing',\r\n        loadChildren: () => import('./../crud/listing/firebase-listing.module').then(m => m.FirebaseListingPageModule)\r\n      },\r\n      {\r\n        path: 'details/:id',\r\n        loadChildren: () => import('./../crud/user/firebase-user-details.module').then(m => m.FirebaseUserDetailsPageModule)\r\n      }\r\n    ]\r\n  }\r\n];\r\n\r\n@NgModule({\r\n  imports: [\r\n    IonicModule,\r\n    CommonModule,\r\n    RouterModule.forChild(firebaseRoutes),\r\n    AngularFireModule.initializeApp(environment.firebase),\r\n    AngularFirestoreModule\r\n  ],\r\n})\r\nexport class FirebaseCrudModule {}\r\n","import { InjectionToken, Injectable, Inject, Optional, PLATFORM_ID, NgZone, ɵɵdefineInjectable, ɵɵinject, NgModule } from '@angular/core';\r\nimport { asyncScheduler, Observable, from, of } from 'rxjs';\r\nimport { map, scan, filter, observeOn } from 'rxjs/operators';\r\nimport { ɵAngularFireSchedulers, ɵkeepUnstableUntilFirstFactory, ɵfirebaseAppFactory, FIREBASE_OPTIONS, FIREBASE_APP_NAME } from '@angular/fire';\r\nimport { isPlatformServer } from '@angular/common';\r\nimport 'firebase/firestore';\r\nimport firebase from 'firebase/app';\r\n\r\n/**\r\n * @fileoverview added by tsickle\r\n * Generated from: observable/fromRef.ts\r\n * @suppress {checkTypes,constantProperty,extraRequire,missingOverride,missingRequire,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\r\n */\r\n/**\r\n * @template T, R\r\n * @param {?} ref\r\n * @param {?=} scheduler\r\n * @return {?}\r\n */\r\nimport * as ɵngcc0 from '@angular/core';\r\nfunction _fromRef(ref, scheduler = asyncScheduler) {\r\n    return new Observable((/**\r\n     * @param {?} subscriber\r\n     * @return {?}\r\n     */\r\n    subscriber => {\r\n        /** @type {?} */\r\n        let unsubscribe;\r\n        if (scheduler != null) {\r\n            scheduler.schedule((/**\r\n             * @return {?}\r\n             */\r\n            () => {\r\n                unsubscribe = ref.onSnapshot(subscriber);\r\n            }));\r\n        }\r\n        else {\r\n            unsubscribe = ref.onSnapshot(subscriber);\r\n        }\r\n        return (/**\r\n         * @return {?}\r\n         */\r\n        () => {\r\n            if (unsubscribe != null) {\r\n                unsubscribe();\r\n            }\r\n        });\r\n    }));\r\n}\r\n/**\r\n * @template R\r\n * @param {?} ref\r\n * @param {?=} scheduler\r\n * @return {?}\r\n */\r\nfunction fromRef(ref, scheduler) {\r\n    return _fromRef(ref, scheduler);\r\n}\r\n/**\r\n * @template T\r\n * @param {?} ref\r\n * @param {?=} scheduler\r\n * @return {?}\r\n */\r\nfunction fromDocRef(ref, scheduler) {\r\n    return fromRef(ref, scheduler)\r\n        .pipe(map((/**\r\n     * @param {?} payload\r\n     * @return {?}\r\n     */\r\n    payload => ({ payload, type: 'value' }))));\r\n}\r\n/**\r\n * @template T\r\n * @param {?} ref\r\n * @param {?=} scheduler\r\n * @return {?}\r\n */\r\nfunction fromCollectionRef(ref, scheduler) {\r\n    return fromRef(ref, scheduler).pipe(map((/**\r\n     * @param {?} payload\r\n     * @return {?}\r\n     */\r\n    payload => ({ payload, type: 'query' }))));\r\n}\r\n\r\n/**\r\n * @fileoverview added by tsickle\r\n * Generated from: collection/changes.ts\r\n * @suppress {checkTypes,constantProperty,extraRequire,missingOverride,missingRequire,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\r\n */\r\n/**\r\n * Return a stream of document changes on a query. These results are not in sort order but in\r\n * order of occurence.\r\n * @template T\r\n * @param {?} query\r\n * @param {?=} scheduler\r\n * @return {?}\r\n */\r\nfunction docChanges(query, scheduler) {\r\n    return fromCollectionRef(query, scheduler)\r\n        .pipe(map((/**\r\n     * @param {?} action\r\n     * @return {?}\r\n     */\r\n    action => action.payload.docChanges()\r\n        .map((/**\r\n     * @param {?} change\r\n     * @return {?}\r\n     */\r\n    change => ((/** @type {?} */ ({ type: change.type, payload: change }))))))));\r\n}\r\n/**\r\n * Return a stream of document changes on a query. These results are in sort order.\r\n * @template T\r\n * @param {?} query\r\n * @param {?} events\r\n * @param {?=} scheduler\r\n * @return {?}\r\n */\r\nfunction sortedChanges(query, events, scheduler) {\r\n    return fromCollectionRef(query, scheduler)\r\n        .pipe(map((/**\r\n     * @param {?} changes\r\n     * @return {?}\r\n     */\r\n    changes => changes.payload.docChanges())), scan((/**\r\n     * @param {?} current\r\n     * @param {?} changes\r\n     * @return {?}\r\n     */\r\n    (current, changes) => combineChanges(current, changes, events)), []), map((/**\r\n     * @param {?} changes\r\n     * @return {?}\r\n     */\r\n    changes => changes.map((/**\r\n     * @param {?} c\r\n     * @return {?}\r\n     */\r\n    c => ((/** @type {?} */ ({ type: c.type, payload: c }))))))));\r\n}\r\n/**\r\n * Combines the total result set from the current set of changes from an incoming set\r\n * of changes.\r\n * @template T\r\n * @param {?} current\r\n * @param {?} changes\r\n * @param {?} events\r\n * @return {?}\r\n */\r\nfunction combineChanges(current, changes, events) {\r\n    changes.forEach((/**\r\n     * @param {?} change\r\n     * @return {?}\r\n     */\r\n    change => {\r\n        // skip unwanted change types\r\n        if (events.indexOf(change.type) > -1) {\r\n            current = combineChange(current, change);\r\n        }\r\n    }));\r\n    return current;\r\n}\r\n/**\r\n * Creates a new sorted array from a new change.\r\n * @template T\r\n * @param {?} combined\r\n * @param {?} change\r\n * @return {?}\r\n */\r\nfunction combineChange(combined, change) {\r\n    switch (change.type) {\r\n        case 'added':\r\n            if (combined[change.newIndex] && combined[change.newIndex].doc.ref.isEqual(change.doc.ref)) {\r\n                // Not sure why the duplicates are getting fired\r\n            }\r\n            else {\r\n                combined.splice(change.newIndex, 0, change);\r\n            }\r\n            break;\r\n        case 'modified':\r\n            if (combined[change.oldIndex] == null || combined[change.oldIndex].doc.ref.isEqual(change.doc.ref)) {\r\n                // When an item changes position we first remove it\r\n                // and then add it's new position\r\n                if (change.oldIndex !== change.newIndex) {\r\n                    combined.splice(change.oldIndex, 1);\r\n                    combined.splice(change.newIndex, 0, change);\r\n                }\r\n                else {\r\n                    combined.splice(change.newIndex, 1, change);\r\n                }\r\n            }\r\n            break;\r\n        case 'removed':\r\n            if (combined[change.oldIndex] && combined[change.oldIndex].doc.ref.isEqual(change.doc.ref)) {\r\n                combined.splice(change.oldIndex, 1);\r\n            }\r\n            break;\r\n    }\r\n    return combined;\r\n}\r\n\r\n/**\r\n * @fileoverview added by tsickle\r\n * Generated from: collection/collection.ts\r\n * @suppress {checkTypes,constantProperty,extraRequire,missingOverride,missingRequire,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\r\n */\r\n/**\r\n * @param {?=} events\r\n * @return {?}\r\n */\r\nfunction validateEventsArray(events) {\r\n    if (!events || events.length === 0) {\r\n        events = ['added', 'removed', 'modified'];\r\n    }\r\n    return events;\r\n}\r\n/**\r\n * AngularFirestoreCollection service\r\n *\r\n * This class creates a reference to a Firestore Collection. A reference and a query are provided in\r\n * in the constructor. The query can be the unqueried reference if no query is desired.The class\r\n * is generic which gives you type safety for data update methods and data streaming.\r\n *\r\n * This class uses Symbol.observable to transform into Observable using Observable.from().\r\n *\r\n * This class is rarely used directly and should be created from the AngularFirestore service.\r\n *\r\n * Example:\r\n *\r\n * const collectionRef = firebase.firestore.collection('stocks');\r\n * const query = collectionRef.where('price', '>', '0.01');\r\n * const fakeStock = new AngularFirestoreCollection<Stock>(collectionRef, query);\r\n *\r\n * // NOTE!: the updates are performed on the reference not the query\r\n * await fakeStock.add({ name: 'FAKE', price: 0.01 });\r\n *\r\n * // Subscribe to changes as snapshots. This provides you data updates as well as delta updates.\r\n * fakeStock.valueChanges().subscribe(value => console.log(value));\r\n * @template T\r\n */\r\nclass AngularFirestoreCollection {\r\n    /**\r\n     * The constructor takes in a CollectionReference and Query to provide wrapper methods\r\n     * for data operations and data streaming.\r\n     *\r\n     * Note: Data operation methods are done on the reference not the query. This means\r\n     * when you update data it is not updating data to the window of your query unless\r\n     * the data fits the criteria of the query. See the AssociatedRefence type for details\r\n     * on this implication.\r\n     * @param {?} ref\r\n     * @param {?} query\r\n     * @param {?} afs\r\n     */\r\n    constructor(ref, query, afs) {\r\n        this.ref = ref;\r\n        this.query = query;\r\n        this.afs = afs;\r\n    }\r\n    /**\r\n     * Listen to the latest change in the stream. This method returns changes\r\n     * as they occur and they are not sorted by query order. This allows you to construct\r\n     * your own data structure.\r\n     * @param {?=} events\r\n     * @return {?}\r\n     */\r\n    stateChanges(events) {\r\n        if (!events || events.length === 0) {\r\n            return docChanges(this.query, this.afs.schedulers.outsideAngular).pipe(this.afs.keepUnstableUntilFirst);\r\n        }\r\n        return docChanges(this.query, this.afs.schedulers.outsideAngular).pipe(map((/**\r\n         * @param {?} actions\r\n         * @return {?}\r\n         */\r\n        actions => actions.filter((/**\r\n         * @param {?} change\r\n         * @return {?}\r\n         */\r\n        change => events.indexOf(change.type) > -1)))), filter((/**\r\n         * @param {?} changes\r\n         * @return {?}\r\n         */\r\n        changes => changes.length > 0)), this.afs.keepUnstableUntilFirst);\r\n    }\r\n    /**\r\n     * Create a stream of changes as they occur it time. This method is similar to stateChanges()\r\n     * but it collects each event in an array over time.\r\n     * @param {?=} events\r\n     * @return {?}\r\n     */\r\n    auditTrail(events) {\r\n        return this.stateChanges(events).pipe(scan((/**\r\n         * @param {?} current\r\n         * @param {?} action\r\n         * @return {?}\r\n         */\r\n        (current, action) => [...current, ...action]), []));\r\n    }\r\n    /**\r\n     * Create a stream of synchronized changes. This method keeps the local array in sorted\r\n     * query order.\r\n     * @param {?=} events\r\n     * @return {?}\r\n     */\r\n    snapshotChanges(events) {\r\n        /** @type {?} */\r\n        const validatedEvents = validateEventsArray(events);\r\n        /** @type {?} */\r\n        const scheduledSortedChanges$ = sortedChanges(this.query, validatedEvents, this.afs.schedulers.outsideAngular);\r\n        return scheduledSortedChanges$.pipe(this.afs.keepUnstableUntilFirst);\r\n    }\r\n    /**\r\n     * @template K\r\n     * @param {?=} options\r\n     * @return {?}\r\n     */\r\n    valueChanges(options = {}) {\r\n        return fromCollectionRef(this.query, this.afs.schedulers.outsideAngular)\r\n            .pipe(map((/**\r\n         * @param {?} actions\r\n         * @return {?}\r\n         */\r\n        actions => actions.payload.docs.map((/**\r\n         * @param {?} a\r\n         * @return {?}\r\n         */\r\n        a => {\r\n            if (options.idField) {\r\n                return (/** @type {?} */ (Object.assign(Object.assign({}, (/** @type {?} */ (a.data()))), { [options.idField]: a.id })));\r\n            }\r\n            else {\r\n                return a.data();\r\n            }\r\n        })))), this.afs.keepUnstableUntilFirst);\r\n    }\r\n    /**\r\n     * Retrieve the results of the query once.\r\n     * @param {?=} options\r\n     * @return {?}\r\n     */\r\n    get(options) {\r\n        return from(this.query.get(options)).pipe(observeOn(this.afs.schedulers.insideAngular));\r\n    }\r\n    /**\r\n     * Add data to a collection reference.\r\n     *\r\n     * Note: Data operation methods are done on the reference not the query. This means\r\n     * when you update data it is not updating data to the window of your query unless\r\n     * the data fits the criteria of the query.\r\n     * @param {?} data\r\n     * @return {?}\r\n     */\r\n    add(data) {\r\n        return this.ref.add(data);\r\n    }\r\n    /**\r\n     * Create a reference to a single document in a collection.\r\n     * @template T\r\n     * @param {?=} path\r\n     * @return {?}\r\n     */\r\n    doc(path) {\r\n        return new AngularFirestoreDocument(this.ref.doc(path), this.afs);\r\n    }\r\n}\r\nif (false) {\r\n    /** @type {?} */\r\n    AngularFirestoreCollection.prototype.ref;\r\n    /**\r\n     * @type {?}\r\n     * @private\r\n     */\r\n    AngularFirestoreCollection.prototype.query;\r\n    /**\r\n     * @type {?}\r\n     * @private\r\n     */\r\n    AngularFirestoreCollection.prototype.afs;\r\n}\r\n\r\n/**\r\n * @fileoverview added by tsickle\r\n * Generated from: document/document.ts\r\n * @suppress {checkTypes,constantProperty,extraRequire,missingOverride,missingRequire,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\r\n */\r\n/**\r\n * AngularFirestoreDocument service\r\n *\r\n * This class creates a reference to a Firestore Document. A reference is provided in\r\n * in the constructor. The class is generic which gives you type safety for data update\r\n * methods and data streaming.\r\n *\r\n * This class uses Symbol.observable to transform into Observable using Observable.from().\r\n *\r\n * This class is rarely used directly and should be created from the AngularFirestore service.\r\n *\r\n * Example:\r\n *\r\n * const fakeStock = new AngularFirestoreDocument<Stock>(doc('stocks/FAKE'));\r\n * await fakeStock.set({ name: 'FAKE', price: 0.01 });\r\n * fakeStock.valueChanges().map(snap => {\r\n *   if(snap.exists) return snap.data();\r\n *   return null;\r\n * }).subscribe(value => console.log(value));\r\n * // OR! Transform using Observable.from() and the data is unwrapped for you\r\n * Observable.from(fakeStock).subscribe(value => console.log(value));\r\n * @template T\r\n */\r\nclass AngularFirestoreDocument {\r\n    /**\r\n     * The contstuctor takes in a DocumentReference to provide wrapper methods\r\n     * for data operations, data streaming, and Symbol.observable.\r\n     * @param {?} ref\r\n     * @param {?} afs\r\n     */\r\n    constructor(ref, afs) {\r\n        this.ref = ref;\r\n        this.afs = afs;\r\n    }\r\n    /**\r\n     * Create or overwrite a single document.\r\n     * @param {?} data\r\n     * @param {?=} options\r\n     * @return {?}\r\n     */\r\n    set(data, options) {\r\n        return this.ref.set(data, options);\r\n    }\r\n    /**\r\n     * Update some fields of a document without overwriting the entire document.\r\n     * @param {?} data\r\n     * @return {?}\r\n     */\r\n    update(data) {\r\n        return this.ref.update(data);\r\n    }\r\n    /**\r\n     * Delete a document.\r\n     * @return {?}\r\n     */\r\n    delete() {\r\n        return this.ref.delete();\r\n    }\r\n    /**\r\n     * Create a reference to a sub-collection given a path and an optional query\r\n     * function.\r\n     * @template R\r\n     * @param {?} path\r\n     * @param {?=} queryFn\r\n     * @return {?}\r\n     */\r\n    collection(path, queryFn) {\r\n        /** @type {?} */\r\n        const collectionRef = this.ref.collection(path);\r\n        const { ref, query } = associateQuery(collectionRef, queryFn);\r\n        return new AngularFirestoreCollection(ref, query, this.afs);\r\n    }\r\n    /**\r\n     * Listen to snapshot updates from the document.\r\n     * @return {?}\r\n     */\r\n    snapshotChanges() {\r\n        /** @type {?} */\r\n        const scheduledFromDocRef$ = fromDocRef(this.ref, this.afs.schedulers.outsideAngular);\r\n        return scheduledFromDocRef$.pipe(this.afs.keepUnstableUntilFirst);\r\n    }\r\n    /**\r\n     * Listen to unwrapped snapshot updates from the document.\r\n     * @return {?}\r\n     */\r\n    valueChanges() {\r\n        return this.snapshotChanges().pipe(map((/**\r\n         * @param {?} action\r\n         * @return {?}\r\n         */\r\n        action => {\r\n            return action.payload.data();\r\n        })));\r\n    }\r\n    /**\r\n     * Retrieve the document once.\r\n     * @param {?=} options\r\n     * @return {?}\r\n     */\r\n    get(options) {\r\n        return from(this.ref.get(options)).pipe(observeOn(this.afs.schedulers.insideAngular));\r\n    }\r\n}\r\nif (false) {\r\n    /** @type {?} */\r\n    AngularFirestoreDocument.prototype.ref;\r\n    /**\r\n     * @type {?}\r\n     * @private\r\n     */\r\n    AngularFirestoreDocument.prototype.afs;\r\n}\r\n\r\n/**\r\n * @fileoverview added by tsickle\r\n * Generated from: collection-group/collection-group.ts\r\n * @suppress {checkTypes,constantProperty,extraRequire,missingOverride,missingRequire,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\r\n */\r\n/**\r\n * AngularFirestoreCollectionGroup service\r\n *\r\n * This class holds a reference to a Firestore Collection Group Query.\r\n *\r\n * This class uses Symbol.observable to transform into Observable using Observable.from().\r\n *\r\n * This class is rarely used directly and should be created from the AngularFirestore service.\r\n *\r\n * Example:\r\n *\r\n * const collectionGroup = firebase.firestore.collectionGroup('stocks');\r\n * const query = collectionRef.where('price', '>', '0.01');\r\n * const fakeStock = new AngularFirestoreCollectionGroup<Stock>(query, afs);\r\n *\r\n * // Subscribe to changes as snapshots. This provides you data updates as well as delta updates.\r\n * fakeStock.valueChanges().subscribe(value => console.log(value));\r\n * @template T\r\n */\r\nclass AngularFirestoreCollectionGroup {\r\n    /**\r\n     * The constructor takes in a CollectionGroupQuery to provide wrapper methods\r\n     * for data operations and data streaming.\r\n     * @param {?} query\r\n     * @param {?} afs\r\n     */\r\n    constructor(query, afs) {\r\n        this.query = query;\r\n        this.afs = afs;\r\n    }\r\n    /**\r\n     * Listen to the latest change in the stream. This method returns changes\r\n     * as they occur and they are not sorted by query order. This allows you to construct\r\n     * your own data structure.\r\n     * @param {?=} events\r\n     * @return {?}\r\n     */\r\n    stateChanges(events) {\r\n        if (!events || events.length === 0) {\r\n            return docChanges(this.query, this.afs.schedulers.outsideAngular).pipe(this.afs.keepUnstableUntilFirst);\r\n        }\r\n        return docChanges(this.query, this.afs.schedulers.outsideAngular)\r\n            .pipe(map((/**\r\n         * @param {?} actions\r\n         * @return {?}\r\n         */\r\n        actions => actions.filter((/**\r\n         * @param {?} change\r\n         * @return {?}\r\n         */\r\n        change => events.indexOf(change.type) > -1)))), filter((/**\r\n         * @param {?} changes\r\n         * @return {?}\r\n         */\r\n        changes => changes.length > 0)), this.afs.keepUnstableUntilFirst);\r\n    }\r\n    /**\r\n     * Create a stream of changes as they occur it time. This method is similar to stateChanges()\r\n     * but it collects each event in an array over time.\r\n     * @param {?=} events\r\n     * @return {?}\r\n     */\r\n    auditTrail(events) {\r\n        return this.stateChanges(events).pipe(scan((/**\r\n         * @param {?} current\r\n         * @param {?} action\r\n         * @return {?}\r\n         */\r\n        (current, action) => [...current, ...action]), []));\r\n    }\r\n    /**\r\n     * Create a stream of synchronized changes. This method keeps the local array in sorted\r\n     * query order.\r\n     * @param {?=} events\r\n     * @return {?}\r\n     */\r\n    snapshotChanges(events) {\r\n        /** @type {?} */\r\n        const validatedEvents = validateEventsArray(events);\r\n        /** @type {?} */\r\n        const scheduledSortedChanges$ = sortedChanges(this.query, validatedEvents, this.afs.schedulers.outsideAngular);\r\n        return scheduledSortedChanges$.pipe(this.afs.keepUnstableUntilFirst);\r\n    }\r\n    /**\r\n     * Listen to all documents in the collection and its possible query as an Observable.\r\n     * @return {?}\r\n     */\r\n    valueChanges() {\r\n        /** @type {?} */\r\n        const fromCollectionRefScheduled$ = fromCollectionRef(this.query, this.afs.schedulers.outsideAngular);\r\n        return fromCollectionRefScheduled$\r\n            .pipe(map((/**\r\n         * @param {?} actions\r\n         * @return {?}\r\n         */\r\n        actions => actions.payload.docs.map((/**\r\n         * @param {?} a\r\n         * @return {?}\r\n         */\r\n        a => a.data())))), this.afs.keepUnstableUntilFirst);\r\n    }\r\n    /**\r\n     * Retrieve the results of the query once.\r\n     * @param {?=} options\r\n     * @return {?}\r\n     */\r\n    get(options) {\r\n        return from(this.query.get(options)).pipe(observeOn(this.afs.schedulers.insideAngular));\r\n    }\r\n}\r\nif (false) {\r\n    /**\r\n     * @type {?}\r\n     * @private\r\n     */\r\n    AngularFirestoreCollectionGroup.prototype.query;\r\n    /**\r\n     * @type {?}\r\n     * @private\r\n     */\r\n    AngularFirestoreCollectionGroup.prototype.afs;\r\n}\r\n\r\n/**\r\n * @fileoverview added by tsickle\r\n * Generated from: firestore.ts\r\n * @suppress {checkTypes,constantProperty,extraRequire,missingOverride,missingRequire,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\r\n */\r\n/** @type {?} */\r\nconst atFirestore = require('@firebase/firestore');\r\n/**\r\n * The value of this token determines whether or not the firestore will have persistance enabled\r\n * @type {?}\r\n */\r\nconst ENABLE_PERSISTENCE = new InjectionToken('angularfire2.enableFirestorePersistence');\r\n/** @type {?} */\r\nconst PERSISTENCE_SETTINGS = new InjectionToken('angularfire2.firestore.persistenceSettings');\r\n/** @type {?} */\r\nconst SETTINGS = new InjectionToken('angularfire2.firestore.settings');\r\n/**\r\n * A utility methods for associating a collection reference with\r\n * a query.\r\n *\r\n * @param {?} collectionRef - A collection reference to query\r\n * @param {?=} queryFn - The callback to create a query\r\n *\r\n * Example:\r\n * const { query, ref } = associateQuery(docRef.collection('items'), ref => {\r\n *  return ref.where('age', '<', 200);\r\n * });\r\n * @return {?}\r\n */\r\nfunction associateQuery(collectionRef, queryFn = (/**\r\n * @param {?} ref\r\n * @return {?}\r\n */\r\nref => ref)) {\r\n    /** @type {?} */\r\n    const query = queryFn(collectionRef);\r\n    /** @type {?} */\r\n    const ref = collectionRef;\r\n    return { query, ref };\r\n}\r\n/**\r\n * AngularFirestore Service\r\n *\r\n * This service is the main entry point for this feature module. It provides\r\n * an API for creating Collection and Reference services. These services can\r\n * then be used to do data updates and observable streams of the data.\r\n *\r\n * Example:\r\n *\r\n * import { Component } from '\\@angular/core';\r\n * import { AngularFirestore, AngularFirestoreCollection, AngularFirestoreDocument } from '\\@angular/fire/firestore';\r\n * import { Observable } from 'rxjs/Observable';\r\n * import { from } from 'rxjs/observable';\r\n *\r\n * \\@Component({\r\n *   selector: 'app-my-component',\r\n *   template: `\r\n *    <h2>Items for {{ (profile | async)?.name }}\r\n *    <ul>\r\n *       <li *ngFor=\"let item of items | async\">{{ item.name }}</li>\r\n *    </ul>\r\n *    <div class=\"control-input\">\r\n *       <input type=\"text\" #itemname />\r\n *       <button (click)=\"addItem(itemname.value)\">Add Item</button>\r\n *    </div>\r\n *   `\r\n * })\r\n * export class MyComponent implements OnInit {\r\n *\r\n *   // services for data operations and data streaming\r\n *   private readonly itemsRef: AngularFirestoreCollection<Item>;\r\n *   private readonly profileRef: AngularFirestoreDocument<Profile>;\r\n *\r\n *   // observables for template\r\n *   items: Observable<Item[]>;\r\n *   profile: Observable<Profile>;\r\n *\r\n *   // inject main service\r\n *   constructor(private readonly afs: AngularFirestore) {}\r\n *\r\n *   ngOnInit() {\r\n *     this.itemsRef = afs.collection('items', ref => ref.where('user', '==', 'davideast').limit(10));\r\n *     this.items = this.itemsRef.valueChanges().map(snap => snap.docs.map(data => doc.data()));\r\n *     // this.items = from(this.itemsRef); // you can also do this with no mapping\r\n *\r\n *     this.profileRef = afs.doc('users/davideast');\r\n *     this.profile = this.profileRef.valueChanges();\r\n *   }\r\n *\r\n *   addItem(name: string) {\r\n *     const user = 'davideast';\r\n *     this.itemsRef.add({ name, user });\r\n *   }\r\n * }\r\n */\r\nclass AngularFirestore {\r\n    /**\r\n     * Each Feature of AngularFire has a FirebaseApp injected. This way we\r\n     * don't rely on the main Firebase App instance and we can create named\r\n     * apps and use multiple apps.\r\n     * @param {?} options\r\n     * @param {?} nameOrConfig\r\n     * @param {?} shouldEnablePersistence\r\n     * @param {?} settings\r\n     * @param {?} platformId\r\n     * @param {?} zone\r\n     * @param {?} persistenceSettings\r\n     */\r\n    constructor(options, nameOrConfig, shouldEnablePersistence, settings, \r\n    // tslint:disable-next-line:ban-types\r\n    platformId, zone, persistenceSettings) {\r\n        this.schedulers = new ɵAngularFireSchedulers(zone);\r\n        this.keepUnstableUntilFirst = ɵkeepUnstableUntilFirstFactory(this.schedulers);\r\n        this.firestore = zone.runOutsideAngular((/**\r\n         * @return {?}\r\n         */\r\n        () => {\r\n            /** @type {?} */\r\n            const app = ɵfirebaseAppFactory(options, zone, nameOrConfig);\r\n            // INVESTIGATE this seems to be required because in the browser build registerFirestore is an Object?\r\n            //             seems like we're fighting ngcc. In the server firestore() isn't available, so I have to register\r\n            //             in the browser registerFirestore is not a function... maybe this is an underlying firebase-js-sdk issue\r\n            if ('registerFirestore' in atFirestore) {\r\n                ((/** @type {?} */ (atFirestore))).registerFirestore((/** @type {?} */ (firebase)));\r\n            }\r\n            /** @type {?} */\r\n            const firestore = app.firestore();\r\n            if (settings) {\r\n                firestore.settings(settings);\r\n            }\r\n            return firestore;\r\n        }));\r\n        if (shouldEnablePersistence && !isPlatformServer(platformId)) {\r\n            // We need to try/catch here because not all enablePersistence() failures are caught\r\n            // https://github.com/firebase/firebase-js-sdk/issues/608\r\n            /** @type {?} */\r\n            const enablePersistence = (/**\r\n             * @return {?}\r\n             */\r\n            () => {\r\n                try {\r\n                    return from(this.firestore.enablePersistence(persistenceSettings || undefined).then((/**\r\n                     * @return {?}\r\n                     */\r\n                    () => true), (/**\r\n                     * @return {?}\r\n                     */\r\n                    () => false)));\r\n                }\r\n                catch (e) {\r\n                    return of(false);\r\n                }\r\n            });\r\n            this.persistenceEnabled$ = zone.runOutsideAngular(enablePersistence);\r\n        }\r\n        else {\r\n            this.persistenceEnabled$ = of(false);\r\n        }\r\n    }\r\n    /**\r\n     * @template T\r\n     * @param {?} pathOrRef\r\n     * @param {?=} queryFn\r\n     * @return {?}\r\n     */\r\n    collection(pathOrRef, queryFn) {\r\n        /** @type {?} */\r\n        let collectionRef;\r\n        if (typeof pathOrRef === 'string') {\r\n            collectionRef = this.firestore.collection(pathOrRef);\r\n        }\r\n        else {\r\n            collectionRef = pathOrRef;\r\n        }\r\n        const { ref, query } = associateQuery(collectionRef, queryFn);\r\n        /** @type {?} */\r\n        const refInZone = this.schedulers.ngZone.run((/**\r\n         * @return {?}\r\n         */\r\n        () => ref));\r\n        return new AngularFirestoreCollection(refInZone, query, this);\r\n    }\r\n    /**\r\n     * Create a reference to a Firestore Collection Group based on a collectionId\r\n     * and an optional query function to narrow the result\r\n     * set.\r\n     * @template T\r\n     * @param {?} collectionId\r\n     * @param {?=} queryGroupFn\r\n     * @return {?}\r\n     */\r\n    collectionGroup(collectionId, queryGroupFn) {\r\n        /** @type {?} */\r\n        const queryFn = queryGroupFn || ((/**\r\n         * @param {?} ref\r\n         * @return {?}\r\n         */\r\n        ref => ref));\r\n        /** @type {?} */\r\n        const collectionGroup = this.firestore.collectionGroup(collectionId);\r\n        return new AngularFirestoreCollectionGroup(queryFn(collectionGroup), this);\r\n    }\r\n    /**\r\n     * @template T\r\n     * @param {?} pathOrRef\r\n     * @return {?}\r\n     */\r\n    doc(pathOrRef) {\r\n        /** @type {?} */\r\n        let ref;\r\n        if (typeof pathOrRef === 'string') {\r\n            ref = this.firestore.doc(pathOrRef);\r\n        }\r\n        else {\r\n            ref = pathOrRef;\r\n        }\r\n        /** @type {?} */\r\n        const refInZone = this.schedulers.ngZone.run((/**\r\n         * @return {?}\r\n         */\r\n        () => ref));\r\n        return new AngularFirestoreDocument(refInZone, this);\r\n    }\r\n    /**\r\n     * Returns a generated Firestore Document Id.\r\n     * @return {?}\r\n     */\r\n    createId() {\r\n        return this.firestore.collection('_').doc().id;\r\n    }\r\n}\r\nAngularFirestore.ɵfac = function AngularFirestore_Factory(t) { return new (t || AngularFirestore)(ɵngcc0.ɵɵinject(FIREBASE_OPTIONS), ɵngcc0.ɵɵinject(FIREBASE_APP_NAME, 8), ɵngcc0.ɵɵinject(ENABLE_PERSISTENCE, 8), ɵngcc0.ɵɵinject(SETTINGS, 8), ɵngcc0.ɵɵinject(PLATFORM_ID), ɵngcc0.ɵɵinject(ɵngcc0.NgZone), ɵngcc0.ɵɵinject(PERSISTENCE_SETTINGS, 8)); };\r\n/** @nocollapse */\r\nAngularFirestore.ctorParameters = () => [\r\n    { type: undefined, decorators: [{ type: Inject, args: [FIREBASE_OPTIONS,] }] },\r\n    { type: undefined, decorators: [{ type: Optional }, { type: Inject, args: [FIREBASE_APP_NAME,] }] },\r\n    { type: undefined, decorators: [{ type: Optional }, { type: Inject, args: [ENABLE_PERSISTENCE,] }] },\r\n    { type: undefined, decorators: [{ type: Optional }, { type: Inject, args: [SETTINGS,] }] },\r\n    { type: Object, decorators: [{ type: Inject, args: [PLATFORM_ID,] }] },\r\n    { type: NgZone },\r\n    { type: undefined, decorators: [{ type: Optional }, { type: Inject, args: [PERSISTENCE_SETTINGS,] }] }\r\n];\r\n/** @nocollapse */ AngularFirestore.ɵprov = ɵɵdefineInjectable({ factory: function AngularFirestore_Factory() { return new AngularFirestore(ɵɵinject(FIREBASE_OPTIONS), ɵɵinject(FIREBASE_APP_NAME, 8), ɵɵinject(ENABLE_PERSISTENCE, 8), ɵɵinject(SETTINGS, 8), ɵɵinject(PLATFORM_ID), ɵɵinject(NgZone), ɵɵinject(PERSISTENCE_SETTINGS, 8)); }, token: AngularFirestore, providedIn: \"any\" });\r\n/*@__PURE__*/ (function () { ɵngcc0.ɵsetClassMetadata(AngularFirestore, [{\r\n        type: Injectable,\r\n        args: [{\r\n                providedIn: 'any'\r\n            }]\r\n    }], function () { return [{ type: undefined, decorators: [{\r\n                type: Inject,\r\n                args: [FIREBASE_OPTIONS]\r\n            }] }, { type: undefined, decorators: [{\r\n                type: Optional\r\n            }, {\r\n                type: Inject,\r\n                args: [FIREBASE_APP_NAME]\r\n            }] }, { type: undefined, decorators: [{\r\n                type: Optional\r\n            }, {\r\n                type: Inject,\r\n                args: [ENABLE_PERSISTENCE]\r\n            }] }, { type: undefined, decorators: [{\r\n                type: Optional\r\n            }, {\r\n                type: Inject,\r\n                args: [SETTINGS]\r\n            }] }, { type: Object, decorators: [{\r\n                type: Inject,\r\n                args: [PLATFORM_ID]\r\n            }] }, { type: ɵngcc0.NgZone }, { type: undefined, decorators: [{\r\n                type: Optional\r\n            }, {\r\n                type: Inject,\r\n                args: [PERSISTENCE_SETTINGS]\r\n            }] }]; }, null); })();\r\nif (false) {\r\n    /** @type {?} */\r\n    AngularFirestore.prototype.firestore;\r\n    /** @type {?} */\r\n    AngularFirestore.prototype.persistenceEnabled$;\r\n    /** @type {?} */\r\n    AngularFirestore.prototype.schedulers;\r\n    /** @type {?} */\r\n    AngularFirestore.prototype.keepUnstableUntilFirst;\r\n}\r\n\r\n/**\r\n * @fileoverview added by tsickle\r\n * Generated from: firestore.module.ts\r\n * @suppress {checkTypes,constantProperty,extraRequire,missingOverride,missingRequire,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\r\n */\r\nclass AngularFirestoreModule {\r\n    /**\r\n     * Attempt to enable persistent storage, if possible\r\n     * @param {?=} persistenceSettings\r\n     * @return {?}\r\n     */\r\n    static enablePersistence(persistenceSettings) {\r\n        return {\r\n            ngModule: AngularFirestoreModule,\r\n            providers: [\r\n                { provide: ENABLE_PERSISTENCE, useValue: true },\r\n                { provide: PERSISTENCE_SETTINGS, useValue: persistenceSettings },\r\n            ]\r\n        };\r\n    }\r\n}\r\nAngularFirestoreModule.ɵmod = ɵngcc0.ɵɵdefineNgModule({ type: AngularFirestoreModule });\r\nAngularFirestoreModule.ɵinj = ɵngcc0.ɵɵdefineInjector({ factory: function AngularFirestoreModule_Factory(t) { return new (t || AngularFirestoreModule)(); }, providers: [AngularFirestore] });\r\n/*@__PURE__*/ (function () { ɵngcc0.ɵsetClassMetadata(AngularFirestoreModule, [{\r\n        type: NgModule,\r\n        args: [{\r\n                providers: [AngularFirestore]\r\n            }]\r\n    }], null, null); })();\r\n\r\n/**\r\n * @fileoverview added by tsickle\r\n * Generated from: interfaces.ts\r\n * @suppress {checkTypes,constantProperty,extraRequire,missingOverride,missingRequire,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\r\n */\r\n/**\r\n * @record\r\n * @template T\r\n */\r\nfunction DocumentSnapshotExists() { }\r\nif (false) {\r\n    /** @type {?} */\r\n    DocumentSnapshotExists.prototype.exists;\r\n    /**\r\n     * @param {?=} options\r\n     * @return {?}\r\n     */\r\n    DocumentSnapshotExists.prototype.data = function (options) { };\r\n}\r\n/**\r\n * @record\r\n */\r\nfunction DocumentSnapshotDoesNotExist() { }\r\nif (false) {\r\n    /** @type {?} */\r\n    DocumentSnapshotDoesNotExist.prototype.exists;\r\n    /**\r\n     * @param {?=} options\r\n     * @return {?}\r\n     */\r\n    DocumentSnapshotDoesNotExist.prototype.data = function (options) { };\r\n    /**\r\n     * @param {?} fieldPath\r\n     * @param {?=} options\r\n     * @return {?}\r\n     */\r\n    DocumentSnapshotDoesNotExist.prototype.get = function (fieldPath, options) { };\r\n}\r\n/**\r\n * @record\r\n * @template T\r\n */\r\nfunction QueryDocumentSnapshot() { }\r\nif (false) {\r\n    /**\r\n     * @param {?=} options\r\n     * @return {?}\r\n     */\r\n    QueryDocumentSnapshot.prototype.data = function (options) { };\r\n}\r\n/**\r\n * @record\r\n * @template T\r\n */\r\nfunction QuerySnapshot() { }\r\nif (false) {\r\n    /** @type {?} */\r\n    QuerySnapshot.prototype.docs;\r\n}\r\n/**\r\n * @record\r\n * @template T\r\n */\r\nfunction DocumentChange() { }\r\nif (false) {\r\n    /** @type {?} */\r\n    DocumentChange.prototype.doc;\r\n}\r\n/**\r\n * @record\r\n * @template T\r\n */\r\nfunction DocumentChangeAction() { }\r\nif (false) {\r\n    /** @type {?} */\r\n    DocumentChangeAction.prototype.type;\r\n    /** @type {?} */\r\n    DocumentChangeAction.prototype.payload;\r\n}\r\n/**\r\n * @record\r\n * @template T\r\n */\r\nfunction Action() { }\r\nif (false) {\r\n    /** @type {?} */\r\n    Action.prototype.type;\r\n    /** @type {?} */\r\n    Action.prototype.payload;\r\n}\r\n/**\r\n * @record\r\n * @template T\r\n */\r\nfunction Reference() { }\r\nif (false) {\r\n    /** @type {?} */\r\n    Reference.prototype.onSnapshot;\r\n}\r\n/**\r\n * A structure that provides an association between a reference\r\n * and a query on that reference. Note: Performing operations\r\n * on the reference can lead to confusing results with complicated\r\n * queries.\r\n *\r\n * Example:\r\n *\r\n * const query = ref.where('type', '==', 'Book').\r\n *                  .where('price', '>' 18.00)\r\n *                  .where('price', '<' 100.00)\r\n *                  .where('category', '==', 'Fiction')\r\n *                  .where('publisher', '==', 'BigPublisher')\r\n *\r\n * // This addition would not be a result of the query above\r\n * ref.add({\r\n *  type: 'Magazine',\r\n *  price: 4.99,\r\n *  category: 'Sports',\r\n *  publisher: 'SportsPublisher'\r\n * });\r\n * @record\r\n */\r\nfunction AssociatedReference() { }\r\nif (false) {\r\n    /** @type {?} */\r\n    AssociatedReference.prototype.ref;\r\n    /** @type {?} */\r\n    AssociatedReference.prototype.query;\r\n}\r\n\r\n/**\r\n * @fileoverview added by tsickle\r\n * Generated from: public_api.ts\r\n * @suppress {checkTypes,constantProperty,extraRequire,missingOverride,missingRequire,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\r\n */\r\n\r\n/**\r\n * @fileoverview added by tsickle\r\n * Generated from: angular-fire-firestore.ts\r\n * @suppress {checkTypes,constantProperty,extraRequire,missingOverride,missingRequire,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\r\n */\r\n\r\nexport { AngularFirestore, AngularFirestoreCollection, AngularFirestoreCollectionGroup, AngularFirestoreDocument, AngularFirestoreModule, ENABLE_PERSISTENCE, PERSISTENCE_SETTINGS, SETTINGS, associateQuery, combineChange, combineChanges, docChanges, fromCollectionRef, fromDocRef, fromRef, sortedChanges, validateEventsArray };\r\n\r\n//# sourceMappingURL=angular-fire-firestore.js.map"]}