{"version":3,"sources":["./src/app/firebase/auth/sign-up/firebase-sign-up.page.ts","./src/app/firebase/auth/sign-up/firebase-sign-up.page.html","./src/app/firebase/auth/sign-up/firebase-sign-up.module.ts"],"names":[],"mappings":"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","file":"sign-up-firebase-sign-up-module-es2015.js","sourcesContent":["import { Component, OnInit, NgZone } from '@angular/core';\r\nimport { Validators, FormGroup, FormControl } from '@angular/forms';\r\nimport { Location } from '@angular/common';\r\nimport { Router, ActivatedRoute } from '@angular/router';\r\nimport { MenuController, LoadingController } from '@ionic/angular';\r\nimport { PasswordValidator } from '../../../validators/password.validator';\r\nimport { FirebaseAuthService } from '../firebase-auth.service';\r\nimport { Subscription } from 'rxjs';\r\n\r\n@Component({\r\n  selector: 'app-firebase-sign-up',\r\n  templateUrl: './firebase-sign-up.page.html',\r\n  styleUrls: [\r\n    './styles/firebase-sign-up.page.scss'\r\n  ]\r\n})\r\nexport class FirebaseSignUpPage implements OnInit {\r\n  signupForm: FormGroup;\r\n  matching_passwords_group: FormGroup;\r\n  submitError: string;\r\n  redirectLoader: HTMLIonLoadingElement;\r\n  authRedirectResult: Subscription;\r\n\r\n  validation_messages = {\r\n    'email': [\r\n      { type: 'required', message: 'Email is required.' },\r\n      { type: 'pattern', message: 'Enter a valid email.' }\r\n    ],\r\n    'password': [\r\n      { type: 'required', message: 'Password is required.' },\r\n      { type: 'minlength', message: 'Password must be at least 6 characters long.' }\r\n    ],\r\n    'confirm_password': [\r\n      { type: 'required', message: 'Confirm password is required' }\r\n    ],\r\n    'matching_passwords': [\r\n      { type: 'areNotEqual', message: 'Password mismatch' }\r\n    ]\r\n  };\r\n\r\n  constructor(\r\n    public router: Router,\r\n    public route: ActivatedRoute,\r\n    public menu: MenuController,\r\n    public authService: FirebaseAuthService,\r\n    private ngZone: NgZone,\r\n    public loadingController: LoadingController,\r\n    public location: Location\r\n  ) {\r\n    this.matching_passwords_group = new FormGroup({\r\n      'password': new FormControl('', Validators.compose([\r\n        Validators.minLength(6),\r\n        Validators.required\r\n      ])),\r\n      'confirm_password': new FormControl('', Validators.required)\r\n    }, (formGroup: FormGroup) => {\r\n      return PasswordValidator.areNotEqual(formGroup);\r\n    });\r\n\r\n    this.signupForm = new FormGroup({\r\n      'email': new FormControl('', Validators.compose([\r\n        Validators.required,\r\n        Validators.pattern('^[a-zA-Z0-9_.+-]+@[a-zA-Z0-9-]+.[a-zA-Z0-9-.]+$')\r\n      ])),\r\n      'matching_passwords': this.matching_passwords_group\r\n    });\r\n\r\n    // Get firebase authentication redirect result invoken when using signInWithRedirect()\r\n    // signInWithRedirect() is only used when client is in web but not desktop\r\n    this.authRedirectResult = this.authService.getRedirectResult()\r\n    .subscribe(result => {\r\n      if (result.user) {\r\n        this.redirectLoggedUserToProfilePage();\r\n      } else if (result.error) {\r\n        this.manageAuthWithProvidersErrors(result.error);\r\n      }\r\n    });\r\n\r\n    // Check if url contains our custom 'auth-redirect' param, then show a loader while we receive the getRedirectResult notification\r\n    this.route.queryParams.subscribe(params => {\r\n      const authProvider = params['auth-redirect'];\r\n      if (authProvider) {\r\n        this.presentLoading(authProvider);\r\n      }\r\n    });\r\n  }\r\n\r\n  ngOnInit(): void {\r\n    this.menu.enable(false);\r\n  }\r\n\r\n  // Once the auth provider finished the authentication flow, and the auth redirect completes,\r\n  // hide the loader and redirect the user to the profile page\r\n  redirectLoggedUserToProfilePage() {\r\n    this.dismissLoading();\r\n\r\n    // As we are calling the Angular router navigation inside a subscribe method, the navigation will be triggered outside Angular zone.\r\n    // That's why we need to wrap the router navigation call inside an ngZone wrapper\r\n    this.ngZone.run(() => {\r\n      // Get previous URL from our custom History Helper\r\n      // If there's no previous page, then redirect to profile\r\n      // const previousUrl = this.historyHelper.previousUrl || 'firebase/auth/profile';\r\n      const previousUrl = 'firebase/auth/profile';\r\n\r\n      // No need to store in the navigation history the sign-in page with redirect params (it's justa a mandatory mid-step)\r\n      // Navigate to profile and replace current url with profile\r\n      this.router.navigate([previousUrl], { replaceUrl: true });\r\n    });\r\n  }\r\n\r\n  async presentLoading(authProvider?: string) {\r\n    const authProviderCapitalized = authProvider[0].toUpperCase() + authProvider.slice(1);\r\n    this.redirectLoader = await this.loadingController.create({\r\n      message: authProvider ? 'Signing up with ' + authProviderCapitalized : 'Signin up ...'\r\n    });\r\n    await this.redirectLoader.present();\r\n  }\r\n\r\n  async dismissLoading() {\r\n    if (this.redirectLoader) {\r\n      await this.redirectLoader.dismiss();\r\n    }\r\n  }\r\n\r\n  resetSubmitError() {\r\n    this.submitError = null;\r\n  }\r\n\r\n  // Before invoking auth provider redirect flow, present a loading indicator and add a flag to the path.\r\n  // The precense of the flag in the path indicates we should wait for the auth redirect to complete.\r\n  prepareForAuthWithProvidersRedirection(authProvider: string) {\r\n    this.presentLoading(authProvider);\r\n\r\n    this.location.go(this.location.path(), 'auth-redirect=' + authProvider, this.location.getState());\r\n  }\r\n\r\n  manageAuthWithProvidersErrors(errorMessage: string) {\r\n    this.submitError = errorMessage;\r\n    // remove auth-redirect param from url\r\n    this.location.replaceState(this.router.url.split('?')[0], '');\r\n    this.dismissLoading();\r\n  }\r\n\r\n  signUpWithEmail(): void {\r\n    this.resetSubmitError();\r\n    const values = this.signupForm.value;\r\n    this.authService.signUpWithEmail(values.email, values.matching_passwords.password)\r\n      .then(user => {\r\n        // navigate to user profile\r\n        this.redirectLoggedUserToProfilePage();\r\n      })\r\n      .catch(error => {\r\n        this.submitError = error.message;\r\n      });\r\n  }\r\n\r\n  doFacebookSignup(): void {\r\n    this.resetSubmitError();\r\n    this.prepareForAuthWithProvidersRedirection('facebook');\r\n\r\n    this.authService.signInWithFacebook()\r\n    .subscribe((result) => {\r\n      // This gives you a Facebook Access Token. You can use it to access the Facebook API.\r\n      // const token = result.credential.accessToken;\r\n      this.redirectLoggedUserToProfilePage();\r\n    }, (error) => {\r\n      this.manageAuthWithProvidersErrors(error.message);\r\n    });\r\n  }\r\n\r\n  doGoogleSignup(): void {\r\n    this.resetSubmitError();\r\n    this.prepareForAuthWithProvidersRedirection('google');\r\n\r\n    this.authService.signInWithGoogle()\r\n    .subscribe((result) => {\r\n      // This gives you a Google Access Token. You can use it to access the Google API.\r\n      // var token = result.credential.accessToken;\r\n      this.redirectLoggedUserToProfilePage();\r\n    }, (error) => {\r\n        console.log(error);\r\n      this.manageAuthWithProvidersErrors(error.message);\r\n    });\r\n  }\r\n\r\n  doTwitterSignup(): void {\r\n    this.resetSubmitError();\r\n    this.prepareForAuthWithProvidersRedirection('twitter');\r\n\r\n    this.authService.signInWithTwitter()\r\n    .subscribe((result) => {\r\n      // This gives you a Twitter Access Token. You can use it to access the Twitter API.\r\n      // var token = result.credential.accessToken;\r\n      this.redirectLoggedUserToProfilePage();\r\n    }, (error) => {\r\n      console.log(error);\r\n      this.manageAuthWithProvidersErrors(error.message);\r\n    });\r\n  }\r\n}\r\n","<ion-header class=\"ion-no-border\">\r\n  <ion-toolbar>\r\n    <ion-buttons slot=\"start\">\r\n      <ion-back-button></ion-back-button>\r\n    </ion-buttons>\r\n  </ion-toolbar>\r\n</ion-header>\r\n\r\n<ion-content class=\"signup-content\">\r\n  <h2 class=\"auth-title\">\r\n    Sign Up with Firebase\r\n  </h2>\r\n  <form [formGroup]=\"signupForm\" (ngSubmit)=\"signUpWithEmail()\">\r\n    <ion-list class=\"inputs-list\" lines=\"full\">\r\n      <ion-item class=\"input-item\">\r\n        <ion-input type=\"email\" placeholder=\"Email\" formControlName=\"email\" clearInput autocapitalize=\"off\" inputmode=\"email\"></ion-input>\r\n      </ion-item>\r\n      <div class=\"error-container\">\r\n        <ng-container *ngFor=\"let validation of validation_messages.email\">\r\n          <div class=\"error-message\" *ngIf=\"signupForm.get('email').hasError(validation.type) && (signupForm.get('email').dirty || signupForm.get('email').touched)\">\r\n            <ion-icon name=\"information-circle-outline\"></ion-icon>\r\n            <span>{{ validation.message }}</span>\r\n          </div>\r\n        </ng-container>\r\n      </div>\r\n\r\n      <div formGroupName=\"matching_passwords\">\r\n        <ion-item class=\"input-item\">\r\n          <app-show-hide-password>\r\n            <ion-input type=\"password\" placeholder=\"Password\" formControlName=\"password\"></ion-input>\r\n          </app-show-hide-password>\r\n        </ion-item>\r\n        <div class=\"error-container\">\r\n          <ng-container *ngFor=\"let validation of validation_messages.password\">\r\n            <div class=\"error-message\" *ngIf=\"signupForm.get('matching_passwords').get('password').hasError(validation.type) && (signupForm.get('matching_passwords').get('password').dirty || signupForm.get('matching_passwords').get('password').touched)\">\r\n              <ion-icon name=\"information-circle-outline\"></ion-icon>\r\n              <span>{{ validation.message }}</span>\r\n            </div>\r\n          </ng-container>\r\n        </div>\r\n\r\n        <ion-item class=\"input-item\">\r\n          <app-show-hide-password>\r\n            <ion-input type=\"password\" placeholder=\"Confirm Password\" formControlName=\"confirm_password\"></ion-input>\r\n          </app-show-hide-password>\r\n        </ion-item>\r\n        <div class=\"error-container\">\r\n          <ng-container *ngFor=\"let validation of validation_messages.confirm_password\">\r\n            <div class=\"error-message\" *ngIf=\"signupForm.get('matching_passwords').get('confirm_password').hasError(validation.type) && (signupForm.get('matching_passwords').get('confirm_password').dirty || signupForm.get('matching_passwords').get('confirm_password').touched)\">\r\n              <ion-icon name=\"information-circle-outline\"></ion-icon>\r\n              <span>{{ validation.message }}</span>\r\n            </div>\r\n          </ng-container>\r\n        </div>\r\n      </div>\r\n      <div class=\"error-container\">\r\n        <ng-container *ngFor=\"let validation of validation_messages.matching_passwords\">\r\n          <div class=\"error-message\" *ngIf=\"signupForm.get('matching_passwords').hasError(validation.type) && (signupForm.get('matching_passwords').get('confirm_password').dirty || signupForm.get('matching_passwords').get('confirm_password').touched)\">\r\n            <ion-icon name=\"information-circle-outline\"></ion-icon>\r\n            <span>{{ validation.message }}</span>\r\n          </div>\r\n        </ng-container>\r\n      </div>\r\n    </ion-list>\r\n\r\n    <ion-button class=\"signup-btn\" type=\"submit\" expand=\"block\" [disabled]=\"!signupForm.valid\">Sign Up</ion-button>\r\n    <div class=\"error-container\" *ngIf=\"submitError\">\r\n      <div class=\"error-message\">\r\n        <ion-icon name=\"information-circle-outline\"></ion-icon>\r\n        <span>{{ submitError }}</span>\r\n      </div>\r\n    </div>\r\n    <ion-row class=\"other-auth-options-row\">\r\n      <ion-button class=\"login-btn\" fill=\"clear\" [routerLink]=\"['/firebase/auth/sign-in']\">\r\n        Already have an account?\r\n      </ion-button>\r\n    </ion-row>\r\n  </form>\r\n\r\n  <div class=\"social-auth-options\">\r\n    <p class=\"options-divider\">Or</p>\r\n    <ion-button class=\"social-auth-btn facebook-auth-btn\" expand=\"block\" color=\"facebook\" (click)=\"doFacebookSignup()\">Sign Up with Facebook</ion-button>\r\n    <ion-button class=\"social-auth-btn google-auth-btn\" expand=\"block\" color=\"google\" (click)=\"doGoogleSignup()\">Sign Up with Google</ion-button>\r\n    <ion-button class=\"social-auth-btn twitter-auth-btn\" expand=\"block\" color=\"twitter\" (click)=\"doTwitterSignup()\">Sign Up with Twitter</ion-button>\r\n  </div>\r\n</ion-content>\r\n","import { NgModule } from '@angular/core';\r\nimport { CommonModule } from '@angular/common';\r\nimport { FormsModule, ReactiveFormsModule } from '@angular/forms';\r\nimport { Routes, RouterModule } from '@angular/router';\r\n\r\nimport { IonicModule } from '@ionic/angular';\r\nimport { FirebaseSignUpPage } from './firebase-sign-up.page';\r\nimport { ComponentsModule } from '../../../components/components.module';\r\n\r\n\r\nconst routes: Routes = [\r\n  {\r\n    path: '',\r\n    component: FirebaseSignUpPage\r\n  }\r\n];\r\n\r\n@NgModule({\r\n  imports: [\r\n    CommonModule,\r\n    FormsModule,\r\n    ReactiveFormsModule,\r\n    IonicModule,\r\n    RouterModule.forChild(routes),\r\n    ComponentsModule\r\n  ],\r\n  declarations: [FirebaseSignUpPage]\r\n})\r\nexport class FirebaseSignUpPageModule {}\r\n"],"sourceRoot":"webpack:///"}