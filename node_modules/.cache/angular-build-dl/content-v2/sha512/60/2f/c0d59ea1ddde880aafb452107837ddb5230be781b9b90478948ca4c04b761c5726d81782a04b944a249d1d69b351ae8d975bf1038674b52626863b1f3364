{"version":3,"sources":["./node_modules/firebase/app/dist/index.cjs.js","./node_modules/@angular/fire/__ivy_ngcc__/fesm2015/angular-fire.js"],"names":[],"mappings":";;;;;;;;;;AAAa;;AAEb,eAAe,mBAAO,CAAC,2BAAe;;AAEtC,oCAAoC,4DAA4D,gBAAgB;;AAEhH;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;;;;;;;;;;;;AC9BA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAsD;AACO;AACkE;AAC3F;;AAEpC;AACA;AACA;AACA,cAAc,uHAAuH;AACrI;AACA;AACA,YAAY;AACZ;AACwC;AACxC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,eAAe,EAAE;AACjB,eAAe,GAAG;AAClB;AACA,iCAAiC,mDAAc;AAC/C;AACA;AACA;AACA;AACA,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA,eAAe,EAAE;AACjB,eAAe,GAAG;AAClB,eAAe,GAAG;AAClB,gBAAgB;AAChB;AACA;AACA,mBAAmB,EAAE;AACrB;AACA;AACA;AACA,mBAAmB,EAAE;AACrB;AACA,kBAAkB;AAClB,mBAAmB,EAAE;AACrB,oBAAoB;AACpB;AACA;AACA;AACA,wBAAwB;AACxB;AACA;AACA;AACA,aAAa;AACb,SAAS;AACT;AACA;AACA;AACA;AACA;AACA;AACA,WAAW,EAWV;AACD;AACA;AACA;AACA;AACA;AACA;AACA,eAAe,EAAE;AACjB;AACA;AACA;AACA;AACA;AACA;AACA,eAAe,EAAE;AACjB,eAAe,EAAE;AACjB,gBAAgB;AAChB;AACA;AACA,mBAAmB,EAAE;AACrB;AACA;AACA,oBAAoB;AACpB;AACA,0EAA0E;AAC1E,2BAA2B,0DAAG,EAAE,wEAAwE;AACxG;AACA;AACA;AACA,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA,oBAAoB;AACpB;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA,WAAW,EAWV;AACD;AACA;AACA;AACA,eAAe,EAAE;AACjB;AACA;AACA;AACA;AACA,oBAAoB;AACpB;AACA;AACA;AACA,oBAAoB;AACpB;AACA,+CAA+C,mDAAc;AAC7D;AACA;AACA,WAAW,EAOV;AACD;AACA;AACA;AACA;AACA;AACA,WAAW,EAAE;AACb,YAAY;AACZ;AACA;AACA;AACA;AACA,eAAe,EAAE;AACjB,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA,QAAQ,kEAAW;AACnB;AACA,QAAQ,gEAAS;AACjB;AACA;AACA;AACA,KAAK;AACL;AACA;AACA,0EAA0E;AAC1E;AACA;AACA,2CAA2C,sBAAsB;AACjE;AACA,2BAA2B;AAC3B,WAAW,EAAE;AACb;AACA;AACA;AACA,WAAW,EAAE;AACb;AACA,WAAW,EAAE;AACb,WAAW,EAAE;AACb,WAAW,EAAE;AACb,YAAY;AACZ;AACA;AACA;AACA;AACA,mBAAmB,EAAE;AACrB,mBAAmB,EAAE;AACrB,oBAAoB;AACpB;AACA;AACA,oBAAoB;AACpB;AACA;AACA;AACA;AACA;AACA;AACA;AACA,4BAA4B;AAC5B;AACA;AACA,iBAAiB;AACjB;AACA,uBAAuB,EAAE;AACzB;AACA,uBAAuB,EAAE;AACzB,wBAAwB;AACxB;AACA;AACA,2BAA2B,EAAE;AAC7B;AACA;AACA;AACA;AACA;AACA;AACA;AACA,+BAA+B,EAAE;AACjC,gCAAgC;AAChC;AACA;AACA,gCAAgC;AAChC;AACA;AACA;AACA;AACA;AACA,gCAAgC;AAChC;AACA;AACA;AACA,aAAa;AACb;AACA;AACA,wBAAwB;AACxB;AACA;AACA;AACA,2BAA2B,EAAE;AAC7B,2BAA2B,EAAE;AAC7B,4BAA4B;AAC5B;AACA;AACA;AACA;AACA,2BAA2B,EAAE;AAC7B,2BAA2B,EAAE;AAC7B,2BAA2B,EAAE;AAC7B,4BAA4B;AAC5B;AACA;AACA,2BAA2B,EAAE;AAC7B,4BAA4B;AAC5B;AACA;AACA,aAAa;AACb,SAAS;AACT,KAAK;AACL,CAAC;;AAED;AACA;AACA;AACA,cAAc,uHAAuH;AACrI;AACA;AACA;AACA;AACA,4BAA4B;AAC5B;AACA;AACA;AACA,8BAA8B;AAC9B,WAAW,EAAE;AACb,6BAA6B,4DAAc;AAC3C,WAAW,EAAE;AACb,8BAA8B,4DAAc;AAC5C;AACA;AACA;AACA;AACA,WAAW,EAyBV;AACD,WAAW,EAAE;AACb,oBAAoB,qDAAO;AAC3B;AACA,WAAW,EAAE;AACb,WAAW,EAAE;AACb,WAAW,GAAG;AACd,YAAY;AACZ;AACA;AACA,eAAe,EAAE;AACjB;AACA,eAAe,EAAE;AACjB;AACA;AACA;AACA,eAAe,EAAE;AACjB,oCAAoC,EAAE,KAAK,mDAAQ;AACnD,eAAe,EAAE;AACjB,gBAAgB;AAChB;AACA;AACA,kFAAkF;AAClF;AACA,uBAAuB,EAAE;AACzB,gBAAgB;AAChB;AACA,UAAU,mDAAQ,oCAAoC,EAAE;AACxD;AACA,WAAW,EAAE;AACb;AACA;AACA;AACA;AACA;AACA,QAAQ,oDAAM;AACd,aAAa,sDAAQ;AACrB;AACA;AACA;AACA;AACA;AACA,eAAe,EAAE;AACjB;AACA;AACA,QAAQ,mDAAQ;AAChB,QAAQ,mDAAQ,4BAA4B,qDAAS;AACrD;AACA;AACA,eAAe,EAAE;AACjB,eAAe,GAAG;AAClB,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA,iBAAiB,+CAA+C;AAChE,iBAAiB;AACjB;AACA;AACA;AACA;AACA,yBAAyB,8DAAuB,EAAE,0BAA0B;AAC5E,yBAAyB,8DAAuB,EAAE,iDAAiD,qCAAqC,sDAAe,CAAC,yDAAW,GAAG,EAAE,sCAAsC;AAC9M;AACA;AACA,KAAK,6BAA6B,OAAO,oDAAM,SAAS,yDAAW,IAAI;AACvE;AACA,4BAA4B,CAAC,+DAAwB;AACrD,cAAc,sDAAQ;AACtB;AACA;AACA,aAAa;AACb,KAAK,gBAAgB,UAAU;AAC/B,sBAAsB,oDAAM;AAC5B,uBAAuB,yDAAW;AAClC,aAAa,GAAG,EAAE,EAAE,QAAQ,EAAE;;AAE9B;AACA;AACA;AACA,cAAc,uHAAuH;AACrI;;AAEA;AACA;AACA;AACA,cAAc,uHAAuH;AACrI;;AAE8N;;AAE9N,wC","file":"default~firebase-auth-firebase-auth-module~firebase-crud-firebase-crud-module-es2015.js","sourcesContent":["'use strict';\r\n\r\nvar firebase = require('@firebase/app');\r\n\r\nfunction _interopDefaultLegacy (e) { return e && typeof e === 'object' && 'default' in e ? e : { 'default': e }; }\r\n\r\nvar firebase__default = /*#__PURE__*/_interopDefaultLegacy(firebase);\r\n\r\nvar name = \"firebase\";\r\nvar version = \"7.21.1\";\r\n\r\n/**\r\n * @license\r\n * Copyright 2018 Google LLC\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\r\nfirebase__default['default'].registerVersion(name, version, 'app');\r\n\r\nmodule.exports = firebase__default['default'];\r\n//# sourceMappingURL=index.cjs.js.map\r\n","import { queueScheduler, asyncScheduler } from 'rxjs';\r\nimport { tap, subscribeOn, observeOn } from 'rxjs/operators';\r\nimport { InjectionToken, Version, NgZone, Optional, VERSION as VERSION$1, NgModule, Inject, PLATFORM_ID } from '@angular/core';\r\nimport firebase from 'firebase/app';\r\n\r\n/**\r\n * @fileoverview added by tsickle\r\n * Generated from: angularfire2.ts\r\n * @suppress {checkTypes,constantProperty,extraRequire,missingOverride,missingRequire,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\r\n */\r\n/**\r\n * @return {?}\r\n */\r\nimport * as ɵngcc0 from '@angular/core';\r\nfunction noop() {\r\n}\r\n/**\r\n * Schedules tasks so that they are invoked inside the Zone that is passed in the constructor.\r\n */\r\n// tslint:disable-next-line:class-name\r\nclass ɵZoneScheduler {\r\n    /**\r\n     * @param {?} zone\r\n     * @param {?=} delegate\r\n     */\r\n    constructor(zone, delegate = queueScheduler) {\r\n        this.zone = zone;\r\n        this.delegate = delegate;\r\n    }\r\n    /**\r\n     * @return {?}\r\n     */\r\n    now() {\r\n        return this.delegate.now();\r\n    }\r\n    /**\r\n     * @param {?} work\r\n     * @param {?=} delay\r\n     * @param {?=} state\r\n     * @return {?}\r\n     */\r\n    schedule(work, delay, state) {\r\n        /** @type {?} */\r\n        const targetZone = this.zone;\r\n        // Wrap the specified work function to make sure that if nested scheduling takes place the\r\n        // work is executed in the correct zone\r\n        /** @type {?} */\r\n        const workInZone = (/**\r\n         * @this {?}\r\n         * @param {?} state\r\n         * @return {?}\r\n         */\r\n        function (state) {\r\n            targetZone.runGuarded((/**\r\n             * @return {?}\r\n             */\r\n            () => {\r\n                work.apply(this, [state]);\r\n            }));\r\n        });\r\n        // Scheduling itself needs to be run in zone to ensure setInterval calls for async scheduling are done\r\n        // inside the correct zone. This scheduler needs to schedule asynchronously always to ensure that\r\n        // firebase emissions are never synchronous. Specifying a delay causes issues with the queueScheduler delegate.\r\n        return this.delegate.schedule(workInZone, delay, state);\r\n    }\r\n}\r\nif (false) {\r\n    /**\r\n     * @type {?}\r\n     * @private\r\n     */\r\n    ɵZoneScheduler.prototype.zone;\r\n    /**\r\n     * @type {?}\r\n     * @private\r\n     */\r\n    ɵZoneScheduler.prototype.delegate;\r\n}\r\n// tslint:disable-next-line:class-name\r\n/**\r\n * @template T\r\n */\r\nclass ɵBlockUntilFirstOperator {\r\n    /**\r\n     * @param {?} zone\r\n     */\r\n    constructor(zone) {\r\n        this.zone = zone;\r\n        this.task = null;\r\n    }\r\n    /**\r\n     * @param {?} subscriber\r\n     * @param {?} source\r\n     * @return {?}\r\n     */\r\n    call(subscriber, source) {\r\n        /** @type {?} */\r\n        const unscheduleTask = this.unscheduleTask.bind(this);\r\n        this.task = this.zone.run((/**\r\n         * @return {?}\r\n         */\r\n        () => Zone.current.scheduleMacroTask('firebaseZoneBlock', noop, {}, noop, noop)));\r\n        return source.pipe(tap({ next: unscheduleTask, complete: unscheduleTask, error: unscheduleTask })).subscribe(subscriber).add(unscheduleTask);\r\n    }\r\n    /**\r\n     * @private\r\n     * @return {?}\r\n     */\r\n    unscheduleTask() {\r\n        // maybe this is a race condition, invoke in a timeout\r\n        // hold for 10ms while I try to figure out what is going on\r\n        setTimeout((/**\r\n         * @return {?}\r\n         */\r\n        () => {\r\n            if (this.task != null && this.task.state === 'scheduled') {\r\n                this.task.invoke();\r\n                this.task = null;\r\n            }\r\n        }), 10);\r\n    }\r\n}\r\nif (false) {\r\n    /**\r\n     * @type {?}\r\n     * @private\r\n     */\r\n    ɵBlockUntilFirstOperator.prototype.task;\r\n    /**\r\n     * @type {?}\r\n     * @private\r\n     */\r\n    ɵBlockUntilFirstOperator.prototype.zone;\r\n}\r\n// tslint:disable-next-line:class-name\r\nclass ɵAngularFireSchedulers {\r\n    /**\r\n     * @param {?} ngZone\r\n     */\r\n    constructor(ngZone) {\r\n        this.ngZone = ngZone;\r\n        this.outsideAngular = ngZone.runOutsideAngular((/**\r\n         * @return {?}\r\n         */\r\n        () => new ɵZoneScheduler(Zone.current)));\r\n        this.insideAngular = ngZone.run((/**\r\n         * @return {?}\r\n         */\r\n        () => new ɵZoneScheduler(Zone.current, asyncScheduler)));\r\n    }\r\n}\r\nif (false) {\r\n    /** @type {?} */\r\n    ɵAngularFireSchedulers.prototype.outsideAngular;\r\n    /** @type {?} */\r\n    ɵAngularFireSchedulers.prototype.insideAngular;\r\n    /** @type {?} */\r\n    ɵAngularFireSchedulers.prototype.ngZone;\r\n}\r\n/**\r\n * Operator to block the zone until the first value has been emitted or the observable\r\n * has completed/errored. This is used to make sure that universal waits until the first\r\n * value from firebase but doesn't block the zone forever since the firebase subscription\r\n * is still alive.\r\n * @param {?} schedulers\r\n * @return {?}\r\n */\r\nfunction ɵkeepUnstableUntilFirstFactory(schedulers) {\r\n    return (/**\r\n     * @template T\r\n     * @param {?} obs$\r\n     * @return {?}\r\n     */\r\n    function keepUnstableUntilFirst(obs$) {\r\n        obs$ = obs$.lift(new ɵBlockUntilFirstOperator(schedulers.ngZone));\r\n        return obs$.pipe(\r\n        // Run the subscribe body outside of Angular (e.g. calling Firebase SDK to add a listener to a change event)\r\n        subscribeOn(schedulers.outsideAngular), \r\n        // Run operators inside the angular zone (e.g. side effects via tap())\r\n        observeOn(schedulers.insideAngular)\r\n        // INVESTIGATE https://github.com/angular/angularfire/pull/2315\r\n        // share()\r\n        );\r\n    });\r\n}\r\n// DEBUG quick debugger function for inline logging that typescript doesn't complain about\r\n//       wrote it for debugging the ɵlazySDKProxy, commenting out for now; should consider exposing a\r\n//       verbose mode for AngularFire in a future release that uses something like this in multiple places\r\n//       usage: () => log('something') || returnValue\r\n// const log = (...args: any[]): false => { console.log(...args); return false }\r\n// The problem here are things like ngOnDestroy are missing, then triggering the service\r\n// rather than dig too far; I'm capturing these as I go.\r\n/** @type {?} */\r\nconst noopFunctions = ['ngOnDestroy'];\r\n// INVESTIGATE should we make the Proxy revokable and do some cleanup?\r\n//             right now it's fairly simple but I'm sure this will grow in complexity\r\n/** @type {?} */\r\nconst ɵlazySDKProxy = (/**\r\n * @param {?} klass\r\n * @param {?} observable\r\n * @param {?} zone\r\n * @return {?}\r\n */\r\n(klass, observable, zone) => {\r\n    return new Proxy(klass, {\r\n        get: (/**\r\n         * @param {?} _\r\n         * @param {?} name\r\n         * @return {?}\r\n         */\r\n        (_, name) => zone.runOutsideAngular((/**\r\n         * @return {?}\r\n         */\r\n        () => {\r\n            if (klass[name]) {\r\n                return klass[name];\r\n            }\r\n            if (noopFunctions.includes(name)) {\r\n                return (/**\r\n                 * @return {?}\r\n                 */\r\n                () => {\r\n                });\r\n            }\r\n            /** @type {?} */\r\n            const promise = observable.toPromise().then((/**\r\n             * @param {?} mod\r\n             * @return {?}\r\n             */\r\n            mod => {\r\n                /** @type {?} */\r\n                const ret = mod && mod[name];\r\n                // TODO move to proper type guards\r\n                if (typeof ret === 'function') {\r\n                    return ret.bind(mod);\r\n                }\r\n                else if (ret && ret.then) {\r\n                    return ret.then((/**\r\n                     * @param {?} res\r\n                     * @return {?}\r\n                     */\r\n                    (res) => zone.run((/**\r\n                     * @return {?}\r\n                     */\r\n                    () => res))));\r\n                }\r\n                else {\r\n                    return zone.run((/**\r\n                     * @return {?}\r\n                     */\r\n                    () => ret));\r\n                }\r\n            }));\r\n            // recurse the proxy\r\n            return new Proxy((/**\r\n             * @return {?}\r\n             */\r\n            () => undefined), {\r\n                get: (/**\r\n                 * @param {?} _\r\n                 * @param {?} name\r\n                 * @return {?}\r\n                 */\r\n                (_, name) => promise[name]),\r\n                // TODO handle callbacks as transparently as I can\r\n                apply: (/**\r\n                 * @param {?} self\r\n                 * @param {?} _\r\n                 * @param {?} args\r\n                 * @return {?}\r\n                 */\r\n                (self, _, args) => promise.then((/**\r\n                 * @param {?} it\r\n                 * @return {?}\r\n                 */\r\n                it => it && it(...args))))\r\n            });\r\n        })))\r\n    });\r\n});\r\n\r\n/**\r\n * @fileoverview added by tsickle\r\n * Generated from: firebase.app.module.ts\r\n * @suppress {checkTypes,constantProperty,extraRequire,missingOverride,missingRequire,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\r\n */\r\n/**\r\n * @record\r\n */\r\nfunction FirebaseOptions() { }\r\n/**\r\n * @record\r\n */\r\nfunction FirebaseAppConfig() { }\r\n/** @type {?} */\r\nconst FIREBASE_OPTIONS = new InjectionToken('angularfire2.app.options');\r\n/** @type {?} */\r\nconst FIREBASE_APP_NAME = new InjectionToken('angularfire2.app.nameOrConfig');\r\n// Have to implement as we need to return a class from the provider, we should consider exporting\r\n// this in the firebase/app types as this is our highest risk of breaks\r\nclass FirebaseApp {\r\n}\r\nif (false) {\r\n    /** @type {?} */\r\n    FirebaseApp.prototype.name;\r\n    /** @type {?} */\r\n    FirebaseApp.prototype.options;\r\n    /** @type {?} */\r\n    FirebaseApp.prototype.analytics;\r\n    /** @type {?} */\r\n    FirebaseApp.prototype.auth;\r\n    /** @type {?} */\r\n    FirebaseApp.prototype.database;\r\n    /** @type {?} */\r\n    FirebaseApp.prototype.messaging;\r\n    /** @type {?} */\r\n    FirebaseApp.prototype.performance;\r\n    /** @type {?} */\r\n    FirebaseApp.prototype.storage;\r\n    /** @type {?} */\r\n    FirebaseApp.prototype.delete;\r\n    /** @type {?} */\r\n    FirebaseApp.prototype.firestore;\r\n    /** @type {?} */\r\n    FirebaseApp.prototype.functions;\r\n    /** @type {?} */\r\n    FirebaseApp.prototype.remoteConfig;\r\n}\r\n/** @type {?} */\r\nconst VERSION = new Version('6.0.3');\r\n/**\r\n * @param {?} options\r\n * @param {?} zone\r\n * @param {?=} nameOrConfig\r\n * @return {?}\r\n */\r\nfunction ɵfirebaseAppFactory(options, zone, nameOrConfig) {\r\n    /** @type {?} */\r\n    const name = typeof nameOrConfig === 'string' && nameOrConfig || '[DEFAULT]';\r\n    /** @type {?} */\r\n    const config = typeof nameOrConfig === 'object' && nameOrConfig || {};\r\n    config.name = config.name || name;\r\n    // Added any due to some inconsistency between @firebase/app and firebase types\r\n    /** @type {?} */\r\n    const existingApp = (/** @type {?} */ (firebase.apps.filter((/**\r\n     * @param {?} app\r\n     * @return {?}\r\n     */\r\n    app => app && app.name === config.name))[0]));\r\n    // We support FirebaseConfig, initializeApp's public type only accepts string; need to cast as any\r\n    // Could be solved with https://github.com/firebase/firebase-js-sdk/pull/1206\r\n    return (/** @type {?} */ ((existingApp || zone.runOutsideAngular((/**\r\n     * @return {?}\r\n     */\r\n    () => firebase.initializeApp(options, (/** @type {?} */ (config))))))));\r\n}\r\n/** @type {?} */\r\nconst FIREBASE_APP_PROVIDER = {\r\n    provide: FirebaseApp,\r\n    useFactory: ɵfirebaseAppFactory,\r\n    deps: [\r\n        FIREBASE_OPTIONS,\r\n        NgZone,\r\n        [new Optional(), FIREBASE_APP_NAME]\r\n    ]\r\n};\r\nclass AngularFireModule {\r\n    // tslint:disable-next-line:ban-types\r\n    /**\r\n     * @param {?} platformId\r\n     */\r\n    constructor(platformId) {\r\n        firebase.registerVersion('angularfire', VERSION.full, platformId.toString());\r\n        firebase.registerVersion('angular', VERSION$1.full);\r\n    }\r\n    /**\r\n     * @param {?} options\r\n     * @param {?=} nameOrConfig\r\n     * @return {?}\r\n     */\r\n    static initializeApp(options, nameOrConfig) {\r\n        return {\r\n            ngModule: AngularFireModule,\r\n            providers: [\r\n                { provide: FIREBASE_OPTIONS, useValue: options },\r\n                { provide: FIREBASE_APP_NAME, useValue: nameOrConfig }\r\n            ]\r\n        };\r\n    }\r\n}\r\nAngularFireModule.ɵmod = ɵngcc0.ɵɵdefineNgModule({ type: AngularFireModule });\r\nAngularFireModule.ɵinj = ɵngcc0.ɵɵdefineInjector({ factory: function AngularFireModule_Factory(t) { return new (t || AngularFireModule)(ɵngcc0.ɵɵinject(PLATFORM_ID)); }, providers: [FIREBASE_APP_PROVIDER] });\r\n/** @nocollapse */\r\nAngularFireModule.ctorParameters = () => [\r\n    { type: Object, decorators: [{ type: Inject, args: [PLATFORM_ID,] }] }\r\n];\r\n/*@__PURE__*/ (function () { ɵngcc0.ɵsetClassMetadata(AngularFireModule, [{\r\n        type: NgModule,\r\n        args: [{\r\n                providers: [FIREBASE_APP_PROVIDER]\r\n            }]\r\n    }], function () { return [{ type: Object, decorators: [{\r\n                type: Inject,\r\n                args: [PLATFORM_ID]\r\n            }] }]; }, null); })();\r\n\r\n/**\r\n * @fileoverview added by tsickle\r\n * Generated from: public_api.ts\r\n * @suppress {checkTypes,constantProperty,extraRequire,missingOverride,missingRequire,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\r\n */\r\n\r\n/**\r\n * @fileoverview added by tsickle\r\n * Generated from: angular-fire.ts\r\n * @suppress {checkTypes,constantProperty,extraRequire,missingOverride,missingRequire,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\r\n */\r\n\r\nexport { AngularFireModule, FIREBASE_APP_NAME, FIREBASE_OPTIONS, FirebaseApp, VERSION, ɵAngularFireSchedulers, ɵBlockUntilFirstOperator, ɵZoneScheduler, ɵfirebaseAppFactory, ɵkeepUnstableUntilFirstFactory, ɵlazySDKProxy };\r\n\r\n//# sourceMappingURL=angular-fire.js.map"],"sourceRoot":"webpack:///"}