{"version":3,"sources":["./node_modules/@videogular/ngx-videogular/__ivy_ngcc__/fesm2015/videogular-ngx-videogular-core.js","./src/app/video-playlist/video-playlist.page.ts","./src/app/video-playlist/video-playlist.page.html","./src/app/video-playlist/video-playlist.resolver.ts","./src/app/video-playlist/video-playlist.model.ts","./node_modules/@videogular/ngx-videogular/__ivy_ngcc__/fesm2015/videogular-ngx-videogular-buffering.js","./node_modules/@videogular/ngx-videogular/__ivy_ngcc__/fesm2015/videogular-ngx-videogular-overlay-play.js","./src/app/shell/data-store.ts","./src/app/video-playlist/video-playlist.service.ts","./node_modules/@videogular/ngx-videogular/__ivy_ngcc__/fesm2015/videogular-ngx-videogular-controls.js","./src/app/video-playlist/video-playlist.module.ts"],"names":[],"mappings":";;;;;;;;;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAA4M;AAC7J;AAC6B;AACvC;;AAErC;AACA;AACA;AACA,cAAc,uHAAuH;AACrI;AACwC;;AAExC;AACA;AACA;AACA,8CAA8C,8BAA8B;AAC5E;AACA;AACA;AACA;AACA,oCAAoC,wEAAkB,EAAE,uCAAuC,uBAAuB,EAAE,uCAAuC;AAC/J,4BAA4B,CAAC,+DAAwB;AACrD,cAAc,wDAAU;AACxB;AACA;AACA,aAAa;AACb,KAAK,eAAe,EAAE;AACtB,WAAW,EASV;;AAED;AACA;AACA;AACA,cAAc,uHAAuH;AACrI;AACA;AACA;AACA,yBAAyB;AACzB,oCAAoC,0DAAY;AAChD;AACA;AACA;AACA,eAAe,EAAE;AACjB,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA;AACA;AACA,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,gBAAgB;AAChB;AACA;AACA,mBAAmB,EAAE;AACrB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,gBAAgB;AAChB;AACA;AACA,mBAAmB,EAAE;AACrB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,eAAe,GAAG;AAClB,gBAAgB;AAChB;AACA;AACA,mBAAmB,EAAE;AACrB;AACA;AACA;AACA;AACA;AACA;AACA;AACA,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA,eAAe,EAAE;AACjB,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA,eAAe,EAAE;AACjB,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA,eAAe,EAAE;AACjB,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA,eAAe,EAAE;AACjB,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA,eAAe,EAAE;AACjB,eAAe,GAAG;AAClB,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,eAAe,EAAE;AACjB,eAAe,EAAE;AACjB,eAAe,GAAG;AAClB,gBAAgB;AAChB;AACA;AACA,mBAAmB,EAAE;AACrB;AACA,mBAAmB,EAAE;AACrB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,eAAe,EAAE;AACjB,eAAe,GAAG;AAClB,eAAe,GAAG;AAClB,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,eAAe,EAAE;AACjB,eAAe,EAAE;AACjB,eAAe,GAAG;AAClB,eAAe,GAAG;AAClB,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA,eAAe,EAAE;AACjB,gBAAgB;AAChB;AACA;AACA,mBAAmB,EAAE;AACrB;AACA,mBAAmB,EAAE;AACrB;AACA;AACA;AACA;AACA;AACA;AACA,mBAAmB,EAAE;AACrB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,kCAAkC;AAClC;AACA;AACA;AACA;AACA;AACA,2BAA2B,EAAE;AAC7B;AACA;AACA;AACA;AACA;AACA,2BAA2B,EAAE;AAC7B;AACA;AACA;AACA;AACA;AACA;AACA,eAAe,EAAE;AACjB,eAAe,EAAE;AACjB,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,eAAe,EAAE;AACjB,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA,eAAe,EAAE;AACjB,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA,eAAe,EAAE;AACjB,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA,sDAAsD,kCAAkC;AACxF;AACA;AACA,wCAAwC,wEAAkB,EAAE,2CAA2C,2BAA2B,EAAE,2CAA2C;AAC/K,4BAA4B,CAAC,+DAAwB;AACrD,cAAc,wDAAU;AACxB;AACA;AACA,aAAa;AACb,KAAK,gBAAgB,WAAW,EAAE,QAAQ,EAAE;AAC5C,WAAW,EAWV;;AAED;AACA;AACA;AACA,cAAc,uHAAuH;AACrI;AACA;AACA;AACA,mCAAmC,4CAAO;AAC1C;AACA;AACA;AACA,eAAe,EAAE;AACjB,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA,4EAA4E,6CAA6C;AACzH;AACA;AACA,mDAAmD,wEAAkB,EAAE,sDAAsD,sCAAsC,EAAE,sDAAsD;AAC3N,4BAA4B,CAAC,+DAAwB;AACrD,cAAc,wDAAU;AACxB;AACA;AACA,aAAa;AACb,KAAK,gBAAgB,WAAW,EAAE,QAAQ,EAAE;AAC5C,WAAW,EAQV;;AAED;AACA;AACA;AACA,cAAc,uHAAuH;AACrI;AACA;AACA;AACA;AACA;AACA,gBAAgB;AAChB;AACA;AACA,mBAAmB,EAAE;AACrB;AACA,mBAAmB,EAAE;AACrB;AACA,mBAAmB,EAAE;AACrB;AACA,wCAAwC,OAAO;AAC/C;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA;AACA,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA;AACA,0DAA0D,oCAAoC;AAC9F,0CAA0C,wEAAkB,EAAE,6CAA6C,6BAA6B,EAAE,6CAA6C;AACvL,4BAA4B,CAAC,+DAAwB;AACrD,cAAc,wDAAU;AACxB;AACA;AACA,aAAa;AACb,KAAK,eAAe,EAAE;;AAEtB;AACA;AACA;AACA,cAAc,uHAAuH;AACrI;AACA;AACA;AACA;AACA;AACA,sCAAsC,0DAAY;AAClD;AACA;AACA,eAAe,EAAE;AACjB,eAAe,EAAE;AACjB,gBAAgB;AAChB;AACA;AACA;AACA;AACA,mBAAmB,EAAE;AACrB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA;AACA;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA;AACA;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA;AACA;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA;AACA;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,mBAAmB,EAAE;AACrB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,oCAAoC,sDAAS;AAC7C,oBAAoB;AACpB;AACA;AACA;AACA,SAAS;AACT;AACA;AACA,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA;AACA,eAAe,GAAG;AAClB,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,eAAe,EAAE;AACjB,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,eAAe,EAAE;AACjB,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,0EAA0E,4CAA4C;AACtH;AACA;AACA,kDAAkD,wEAAkB,EAAE,qDAAqD,qCAAqC,EAAE,qDAAqD;AACvN,4BAA4B,CAAC,+DAAwB;AACrD,cAAc,wDAAU;AACxB;AACA;AACA,aAAa;AACb,KAAK,gBAAgB,WAAW,EAAE,QAAQ,EAAE;AAC5C,WAAW,EAqBV;;AAED;AACA;AACA;AACA,cAAc,uHAAuH;AACrI;AACA;AACA;AACA,8CAA8C,8BAA8B;AAC5E;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,oCAAoC,wEAAkB,EAAE,uCAAuC,uBAAuB,EAAE,uCAAuC;AAC/J,4BAA4B,CAAC,+DAAwB;AACrD,cAAc,wDAAU;AACxB;AACA;AACA,aAAa;AACb,KAAK,eAAe,EAAE;AACtB,WAAW,EA2DV;;AAED;AACA;AACA;AACA,cAAc,uHAAuH;AACrI;AACA;AACA;AACA,eAAe,EAAE;AACjB;AACA;AACA;AACA,mCAAmC,0DAAY;AAC/C,oCAAoC,0DAAY;AAChD,kCAAkC,0DAAY;AAC9C,sCAAsC,0DAAY;AAClD;AACA;AACA;AACA;AACA;AACA,gBAAgB;AAChB;AACA;AACA,uBAAuB,sDAAS;AAChC;AACA;AACA;AACA,eAAe,EAAE;AACjB,gBAAgB;AAChB;AACA;AACA,mBAAmB,EAAE;AACrB;AACA;AACA;AACA;AACA;AACA,eAAe,EAAE;AACjB,gBAAgB;AAChB;AACA;AACA;AACA,mBAAmB,EAAE;AACrB,oBAAoB;AACpB;AACA;AACA,wCAAwC,OAAO;AAC/C,4BAA4B,sDAAS;AACrC;AACA,2BAA2B,sDAAS;AACpC;AACA;AACA;AACA;AACA,eAAe,EAAE;AACjB,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA,eAAe,EAAE;AACjB,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA,gBAAgB;AAChB;AACA;AACA;AACA,uBAAuB,EAAE;AACzB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,gBAAgB;AAChB;AACA;AACA;AACA,mBAAmB,EAAE;AACrB,oBAAoB;AACpB;AACA;AACA;AACA;AACA,sEAAsE,wCAAwC,+DAAwB,CAAC,wDAAiB,GAAG;AAC3J,4BAA4B,+DAAwB,EAAE,6EAA6E,uJAAuJ,EAAE;AAC5R;AACA;AACA,KAAK,OAAO,wDAAU;AACtB;AACA;AACA,uBAAuB,OAAO,oDAAM,EAAE;AACtC,wBAAwB,OAAO,oDAAM,EAAE;AACvC,sBAAsB,OAAO,oDAAM,EAAE;AACrC,0BAA0B,OAAO,oDAAM,EAAE;AACzC;AACA,4BAA4B,CAAC,+DAAwB;AACrD,cAAc,uDAAS;AACvB;AACA;AACA,aAAa;AACb,KAAK,gBAAgB,UAAU,OAAO,wDAAiB,EAAE,EAAE,EAAE,GAAG;AAChE,kBAAkB,oDAAM;AACxB,SAAS;AACT,kBAAkB,oDAAM;AACxB,SAAS;AACT,kBAAkB,oDAAM;AACxB,SAAS;AACT,kBAAkB,oDAAM;AACxB,SAAS,GAAG,EAAE,EAAE;AAChB,WAAW,EAuBV;;AAED;AACA;AACA;AACA,cAAc,uHAAuH;AACrI;AACA;AACA;AACA,eAAe,EAAE;AACjB,eAAe,EAAE;AACjB;AACA;AACA;AACA;AACA;AACA,qBAAqB;AACrB,uBAAuB;AACvB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,kCAAkC,4CAAO;AACzC;AACA;AACA,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,mBAAmB,sDAAS,aAAa,EAAE;AAC3C,qBAAqB,sDAAS,aAAa,EAAE;AAC7C,4BAA4B,sDAAS,aAAa,EAAE;AACpD,4BAA4B,sDAAS,aAAa,EAAE;AACpD,qBAAqB,sDAAS,aAAa,EAAE;AAC7C,uBAAuB,sDAAS,aAAa,EAAE;AAC/C,mBAAmB,sDAAS,aAAa,EAAE;AAC3C,mBAAmB,sDAAS,aAAa,EAAE;AAC3C,wBAAwB,sDAAS,aAAa,EAAE;AAChD,4BAA4B,sDAAS,aAAa,EAAE;AACpD,uBAAuB,sDAAS,aAAa,EAAE;AAC/C,mBAAmB,sDAAS,aAAa,EAAE;AAC3C,kBAAkB,sDAAS,aAAa,EAAE;AAC1C,qBAAqB,sDAAS,aAAa,EAAE;AAC7C,sBAAsB,sDAAS,aAAa,EAAE;AAC9C,wBAAwB,sDAAS,aAAa,EAAE;AAChD,oBAAoB,sDAAS,aAAa,EAAE;AAC5C,qBAAqB,sDAAS,aAAa,EAAE;AAC7C,qBAAqB,sDAAS,aAAa,EAAE;AAC7C,qBAAqB,sDAAS,aAAa,EAAE;AAC7C,wBAAwB,sDAAS,aAAa,EAAE;AAChD,0BAA0B,sDAAS,aAAa,EAAE;AAClD,qBAAqB,sDAAS,aAAa,EAAE;AAC7C;AACA,sBAAsB,sDAAS,aAAa,EAAE;AAC9C,oBAAoB,sDAAS,aAAa,EAAE;AAC5C;AACA,0BAA0B,+CAAU;AACpC,uBAAuB,EAAE;AACzB,wBAAwB;AACxB;AACA;AACA,2BAA2B,EAAE;AAC7B;AACA,2BAA2B,EAAE;AAC7B,4BAA4B;AAC5B;AACA;AACA;AACA,iBAAiB;AACjB,2CAA2C,EAAE,mBAAmB,oCAAoC;AACpG;AACA,4BAA4B;AAC5B;AACA;AACA;AACA,iBAAiB;AACjB,aAAa;AACb;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,wBAAwB;AACxB;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA,gBAAgB;AAChB;AACA;AACA,mBAAmB,EAAE;AACrB;AACA;AACA;AACA;AACA;AACA;AACA,sCAAsC,0DAAa;AACnD,kBAAkB,0DAAG;AACrB,mBAAmB,KAAK;AACxB,oBAAoB;AACpB;AACA;AACA,uBAAuB,EAAE;AACzB;AACA,uBAAuB,EAAE;AACzB,wBAAwB;AACxB;AACA;AACA;AACA,aAAa;AACb,uBAAuB,EAAE;AACzB;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA,gBAAgB;AAChB;AACA;AACA,gCAAgC,kDAAK;AACrC,oBAAoB;AACpB;AACA;AACA;AACA;AACA,+BAA+B,EAAE;AACjC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA,eAAe,EAAE;AACjB,gBAAgB;AAChB;AACA;AACA;AACA,6CAA6C,OAAO;AACpD,uBAAuB,EAAE;AACzB;AACA;AACA;AACA,iCAAiC,EAAE;AACnC,iCAAiC,EAAE;AACnC,iCAAiC,EAAE;AACnC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,oBAAoB;AACpB;AACA;AACA;AACA;AACA,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,wBAAwB;AACxB;AACA;AACA;AACA,aAAa;AACb;AACA,wBAAwB;AACxB;AACA;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA;AACA,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA,wBAAwB;AACxB;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA;AACA;AACA;AACA,gBAAgB;AAChB;AACA;AACA;AACA,mBAAmB,EAAE;AACrB;AACA;AACA;AACA;AACA;AACA;AACA;AACA,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA;AACA;AACA,eAAe,EAAE;AACjB,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA;AACA,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA,eAAe,EAAE;AACjB,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA,eAAe,EAAE;AACjB,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA;AACA,eAAe,EAAE;AACjB,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,eAAe,EAAE;AACjB,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,eAAe,EAAE;AACjB,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,mBAAmB,EAAE;AACrB;AACA;AACA;AACA;AACA;AACA;AACA,eAAe,EAAE;AACjB,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA;AACA;AACA,eAAe,EAAE;AACjB,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,eAAe,EAAE;AACjB,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA;AACA;AACA,eAAe,EAAE;AACjB,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,eAAe,EAAE;AACjB,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,eAAe,EAAE;AACjB,gBAAgB;AAChB;AACA;AACA,mBAAmB,EAAE;AACrB;AACA;AACA;AACA;AACA;AACA;AACA;AACA,2BAA2B;AAC3B;AACA;AACA;AACA;AACA;AACA,eAAe,EAAE;AACjB,gBAAgB;AAChB;AACA;AACA,mBAAmB,EAAE;AACrB;AACA;AACA,2BAA2B;AAC3B;AACA;AACA;AACA;AACA;AACA,eAAe,EAAE;AACjB,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA;AACA;AACA,eAAe,EAAE;AACjB,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA;AACA;AACA,gBAAgB;AAChB;AACA;AACA,mBAAmB,EAAE;AACrB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,gBAAgB;AAChB;AACA;AACA,uCAAuC,kDAAK;AAC5C,oBAAoB;AACpB;AACA;AACA;AACA,SAAS;AACT;AACA;AACA,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,eAAe,EAAE;AACjB,eAAe,GAAG;AAClB,gBAAgB;AAChB;AACA;AACA,mBAAmB,EAAE;AACrB;AACA,mBAAmB,EAAE;AACrB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,eAAe,EAAE;AACjB,eAAe,GAAG;AAClB,eAAe,GAAG;AAClB,eAAe,GAAG;AAClB,gBAAgB;AAChB;AACA;AACA,mBAAmB,EAAE;AACrB;AACA;AACA;AACA;AACA;AACA;AACA;AACA,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,8DAA8D,oCAAoC,+DAAwB,gBAAgB,+DAAwB,CAAC,+DAAwB,GAAG;AAC9L,wBAAwB,+DAAwB,EAAE,oEAAoE,2CAA2C,EAAE;AACnK;AACA;AACA,KAAK,qBAAqB;AAC1B,KAAK,OAAO,+DAAiB;AAC7B;AACA;AACA,eAAe,OAAO,mDAAK,EAAE;AAC7B,gBAAgB,OAAO,mDAAK,EAAE;AAC9B;AACA,4BAA4B,CAAC,+DAAwB;AACrD,cAAc,uDAAS;AACvB;AACA;AACA,aAAa;AACb,KAAK,gBAAgB,UAAU,qBAAqB,GAAG,OAAO,+DAAwB,EAAE,EAAE,EAAE,GAAG;AAC/F,kBAAkB,mDAAK;AACvB,SAAS;AACT,kBAAkB,mDAAK;AACvB,SAAS,GAAG,EAAE,EAAE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C3B,WAAW,EAaV;;AAED;AACA;AACA;AACA,cAAc,uHAAuH;AACrI;AACA;AACA;AACA;AACA,0BAA0B;AAC1B,WAAW,EAgRV;;AAED;AACA;AACA;AACA,cAAc,uHAAuH;AACrI;AACA;AACA;AACA;AACA,8BAA8B;;AAE9B;AACA;AACA;AACA,cAAc,uHAAuH;AACrI;AACA;AACA;AACA;AACA,uBAAuB;AACvB,WAAW,EAqGV;;AAED;AACA;AACA;AACA,cAAc,uHAAuH;AACrI;AACA;AACA;AACA;AACA,sBAAsB;AACtB,WAAW,EAyCV;AACD;AACA;AACA;AACA,gCAAgC;AAChC,WAAW,EAqDV;;AAED;AACA;AACA;AACA,cAAc,uHAAuH;AACrI;AACA;AACA;AACA;AACA,uBAAuB;AACvB,WAAW,EAaV;AACD;AACA;AACA;AACA,mCAAmC;AACnC,WAAW,EAOV;AACD;AACA;AACA;AACA;AACA,2BAA2B;AAC3B,WAAW,EAkDV;AACD;AACA;AACA;AACA;AACA,uBAAuB;AACvB,WAAW,EAaV;AACD;AACA;AACA;AACA,mCAAmC;AACnC,WAAW,EAOV;AACD;AACA;AACA;AACA;AACA,2BAA2B;AAC3B,WAAW,EAoDV;;AAED;AACA;AACA;AACA,cAAc,uHAAuH;AACrI;AACA;AACA;AACA,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA;AACA,eAAe,EAAE;AACjB,eAAe,GAAG;AAClB,eAAe,GAAG;AAClB,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA;AACA,eAAe,EAAE;AACjB,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA,gBAAgB;AAChB;AACA,YAAY;AACZ;AACA,gBAAgB;AAChB;AACA,sBAAsB;AACtB;AACA,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA;AACA,eAAe,EAAE;AACjB,eAAe,EAAE;AACjB,eAAe,GAAG;AAClB,gBAAgB;AAChB;AACA,wEAAwE;AACxE;AACA;AACA,eAAe,EAAE;AACjB,gBAAgB;AAChB;AACA,+BAA+B;AAC/B;AACA;AACA,eAAe,GAAG;AAClB,gBAAgB;AAChB;AACA,yDAAyD;AACzD;AACA,gBAAgB;AAChB;AACA,aAAa;AACb;AACA,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA;AACA,eAAe,EAAE;AACjB,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA;AACA,eAAe,EAAE;AACjB,eAAe,EAAE;AACjB,eAAe,GAAG;AAClB,gBAAgB;AAChB;AACA,qDAAqD;AACrD;AACA,WAAW,EAmGV;;AAED;AACA;AACA;AACA,cAAc,uHAAuH;AACrI;;AAEA;AACA;AACA;AACA,cAAc,uHAAuH;AACrI;;AAEsM;;AAEtM,0D;;;;;;;;;;;;ACjwFA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAoF;AAGnC;AACP;AACC;AACS;;;;;;;;;;ICY9C,wEACF;;;IAD8E,0IAAiB;;;IAD/F,4EACE;IAAA,6HACF;IAAA,4DAAQ;;;IADE,0DAAmE;IAAnE,gOAAmE;;;IAK1E,wEACF;;;IAD8E,0IAAiB;;;;IAFhG,gFACD;IAD8C,+VAAuC;IACrF,gFACI;IAAA,iIACF;IAAA,4DAAQ;IACT,4DAAY;;;;IAHiB,0DAAwB;IAAxB,wEAAwB;IAC1C,0DAAmE;IAAnE,gOAAmE;;;;;IAe9E,8EACE;IAAA,8EACE;IAAA,sFACE;IAD6H,gXAA0B;IACvJ,sFACE;IAAA,wEACE;IAD2B,kWAA0B;IACrD,0EAAmD;IACrD,4DAAI;IACN,4DAAmB;IACrB,4DAAkB;IACpB,4DAAU;IACV,8EACE;IAAA,yEACE;IAAA,gFAA2E;IAC7E,4DAAK;IACL,wEACE;IAAA,iFAA2F;IAC7F,4DAAI;IACN,4DAAU;IACZ,4DAAU;;;IAhBW,0DAAmB;IAAnB,4EAAmB;IAChB,0DAAqB;IAArB,wIAAqB;IASF,0DAAoB;IAApB,iFAAoB;IAGV,0DAA0B;IAA1B,uFAA0B;;;AD9CnF,MAAM,EAAE,KAAK,EAAE,GAAG,uDAAO,CAAC;AAUnB,MAAM,iBAAiB;IAU5B,YACU,KAAqB,EACA,UAAkB;QADvC,UAAK,GAAL,KAAK,CAAgB;QACA,eAAU,GAAV,UAAU,CAAQ;QAXjD,QAAG,GAAG,IAAI,CAAC;QACX,kBAAa,GAAG,KAAK,CAAC;IAWlB,CAAC;IAPL,IAAmC,OAAO;QACxC,OAAO,CAAC,IAAI,CAAC,oBAAoB,IAAI,IAAI,CAAC,oBAAoB,CAAC,OAAO,CAAC,CAAC,CAAC,CAAC,IAAI,CAAC,CAAC,CAAC,KAAK,CAAC;IACzF,CAAC;IAOD,QAAQ;QACN,gDAAgD;QAChD,IAAI,yEAAiB,CAAC,IAAI,CAAC,UAAU,CAAC,EAAE;YACtC,IAAI,CAAC,GAAG,GAAG,KAAK,CAAC;SAClB;QAED,IAAI,CAAC,KAAK,CAAC,IAAI;aACd,IAAI;QACH,6BAA6B;QAC7B,gEAAS,CAAC,CAAC,iBAAiB,EAAE,EAAE,CAAC,iBAAiB,CAAC,MAAM,CAAC,CAAC,KAAK,CAAC,CAClE;aACA,SAAS,CAAC,CAAC,KAAU,EAAE,EAAE;YACxB,IAAI,CAAC,oBAAoB,GAAG,KAAK,CAAC;YAClC,IAAI,CAAC,KAAK,CAAC,OAAO,EAAE;gBAClB,IAAI,CAAC,oBAAoB,CAAC,cAAc,GAAG,KAAK,CAAC,MAAM,CAAC;gBACxD,IAAI,CAAC,oBAAoB,CAAC,cAAc,GAAG,KAAK,CAAC,MAAM,CAAC,CAAC,CAAC,CAAC;aAC5D;QACH,CAAC,EAAE,CAAC,KAAK,EAAE,EAAE,CAAC,OAAO,CAAC,GAAG,CAAC,KAAK,CAAC,CAAC,CAAC;IACpC,CAAC;IAED,SAAS,CAAC,KAAK;QACb,+DAA+D;QAC/D,IAAI,KAAK,KAAK,IAAI,CAAC,oBAAoB,CAAC,cAAc,EAAE;YACtD,iBAAiB;YACjB,IAAI,CAAC,oBAAoB,CAAC,cAAc,GAAG,KAAK,CAAC;YACjD,iGAAiG;SAClG;IACH,CAAC;IAED,aAAa,CAAC,GAAiB;QAC7B,IAAI,CAAC,GAAG,GAAG,GAAG,CAAC;QACf,IAAI,CAAC,GAAG,CAAC,eAAe,EAAE,CAAC,aAAa,CAAC,cAAc,CAAC,SAAS,CAAC,IAAI,CAAC,SAAS,CAAC,IAAI,CAAC,IAAI,CAAC,CAAC,CAAC;IAC/F,CAAC;IAED,SAAS;QACP,IAAI,IAAI,CAAC,aAAa,EAAE;YACtB,IAAI,CAAC,GAAG,CAAC,IAAI,EAAE,CAAC;SACjB;aAAM;YACL,IAAI,CAAC,aAAa,GAAG,IAAI,CAAC;SAC3B;IACH,CAAC;IAED,UAAU;QACR,MAAM,aAAa,GAAG,IAAI,CAAC,oBAAoB,CAAC,cAAc,CAAC;QAC/D,KAAK,CAAC,KAAK,CAAC;YACV,KAAK,EAAE,aAAa,CAAC,KAAK;YAC1B,IAAI,EAAE,aAAa,CAAC,WAAW;YAC/B,GAAG,EAAE,0BAA0B;YAC/B,WAAW,EAAE,aAAa;SAC3B,CAAC;aACD,IAAI,CAAC,GAAG,EAAE,CAAC,OAAO,CAAC,GAAG,CAAC,kBAAkB,CAAC,CAAC;aAC3C,KAAK,CAAC,CAAC,KAAK,EAAE,EAAE,CAAC,OAAO,CAAC,GAAG,CAAC,eAAe,EAAE,KAAK,CAAC,CAAC,CAAC;IACzD,CAAC;;kFAnEU,iBAAiB,mMAYlB,yDAAW;iGAZV,iBAAiB;;;QCjB9B,6EACE;QAAA,iFACE;QAAA,iFACE;QAAA,6EAAmC;QACrC,4DAAc;QACd,4EAAW;QAAA,yEAAc;QAAA,4DAAY;QACrC,iFACE;QAAA,gFACE;QADU,6IAAS,gBAAY,IAAC;QAChC,yEAAmD;QACrD,4DAAa;QACf,4DAAc;QAChB,4DAAc;QAChB,4DAAa;QAEb,iFACE;QAAA,uFACE;QACA,mHACE;QAGF,2HACD;QAID,4DAAmB;QAEnB,8EACE;QAAA,0EACE;QAAA,iFAA2G;QAC7G,4DAAK;QACL,yEACE;QAAA,iFAA2H;QAC7H,4DAAI;QACN,4DAAU;QAEV,+EACE;QAAA,yHACE;QAkBJ,4DAAU;QACZ,4DAAc;;QA3CM,2DAAuB;QAAvB,wIAAuB;QAEhC,0DAAW;QAAX,yEAAW;QAIP,0DAAY;QAAZ,0EAAY;QASgB,0DAAoD;QAApD,kNAAoD;QAG1C,0DAA0D;QAA1D,wNAA0D;QAKxE,0DAA0D;QAA1D,sJAA0D;;6FDrBpF,iBAAiB;cAR7B,uDAAS;eAAC;gBACT,QAAQ,EAAE,oBAAoB;gBAC9B,WAAW,EAAE,4BAA4B;gBACzC,SAAS,EAAE;oBACT,mCAAmC;oBACnC,oCAAoC;iBACrC;aACF;;sBAaI,oDAAM;uBAAC,yDAAW;wBANc,OAAO;kBAAzC,yDAAW;mBAAC,gBAAgB;;;;;;;;;;;;;;AEvB/B;AAAA;AAAA;AAAA;AAA2C;AAEqB;;;AAMzD,MAAM,qBAAqB;IAEhC,YAAoB,oBAA0C;QAA1C,yBAAoB,GAApB,oBAAoB,CAAsB;IAAI,CAAC;IAEnE,OAAO;QACL,MAAM,UAAU,GAAmC,IAAI,CAAC,oBAAoB,CAAC,0BAA0B,EAAE,CAAC;QAE1G,MAAM,SAAS,GAAkC,IAAI,CAAC,oBAAoB,CAAC,qBAAqB,CAAC,UAAU,CAAC,CAAC;QAE7G,OAAO,SAAS,CAAC;IACnB,CAAC;;0FAVU,qBAAqB;wGAArB,qBAAqB,WAArB,qBAAqB;6FAArB,qBAAqB;cADjC,wDAAU;;;;;;;;;;;;;;ACPX;AAAA;AAAA;AAAA;AAAiD;AAE1C,MAAM,UAAU;CAKtB;AAEM,MAAM,kBAAmB,SAAQ,4DAAU;IAShD;QACE,KAAK,EAAE,CAAC;QATV,mBAAc,GAAe,IAAI,UAAU,EAAE,CAAC;QAE9C,mBAAc,GAAsB;YAClC,IAAI,UAAU,EAAE;YAChB,IAAI,UAAU,EAAE;YAChB,IAAI,UAAU,EAAE;SACjB,CAAC;IAIF,CAAC;CACF;;;;;;;;;;;;;ACrBD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAuG;AACxD;AAC8B;;AAE7E;AACA;AACA;AACA,cAAc,uHAAuH;AACrI;AACwC;AACkB;AAC1D;AACA;AACA,eAAe,EAAE;AACjB,eAAe,EAAE;AACjB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA;AACA;AACA,wBAAwB;AACxB;AACA;AACA;AACA;AACA;AACA,gBAAgB;AAChB;AACA;AACA;AACA;AACA,mBAAmB,EAAE;AACrB,oBAAoB;AACpB;AACA;AACA;AACA;AACA,eAAe,EAAE;AACjB,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA,gBAAgB;AAChB;AACA;AACA;AACA,mBAAmB,EAAE;AACrB,oBAAoB;AACpB;AACA;AACA;AACA;AACA,sEAAsE,wCAAwC,+DAAwB,CAAC,wDAAiB,GAAG,+DAAwB,CAAC,4EAAmB,GAAG;AAC1M,4BAA4B,+DAAwB,EAAE,4IAA4I;AAClM,QAAQ,yDAAkB;AAC1B,KAAK,EAAE,WAAW,iBAAiB,iKAAiK;AACpM,QAAQ,4DAAqB;AAC7B,QAAQ,4DAAqB;AAC7B,QAAQ,uDAAgB;AACxB,QAAQ,0DAAmB;AAC3B,QAAQ,0DAAmB;AAC3B,KAAK,EAAE,kCAAkC,wBAAwB,uBAAuB,SAAS,mCAAmC,yBAAyB,SAAS,yBAAyB,6BAA6B,yBAAyB,sBAAsB,uBAAuB,SAAS,2CAA2C,sBAAsB,6BAA6B,0BAA0B,mBAAmB,4BAA4B,kBAAkB,oCAAoC,uBAAuB,SAAS,uJAAuJ,6CAA6C,mDAAmD,uBAAuB,iDAAiD,kDAAkD,8BAA8B,uCAAuC,sBAAsB,uBAAuB,yBAAyB,oDAAoD,uDAAuD,SAAS,6CAA6C,+CAA+C,4CAA4C,SAAS,8BAA8B,cAAc,yCAAyC,WAAW,gBAAgB,2CAA2C,WAAW,SAAS,iCAAiC,cAAc,yCAAyC,WAAW,gBAAgB,4CAA4C,WAAW,SAAS,iCAAiC,cAAc,4CAA4C,WAAW,gBAAgB,8CAA8C,WAAW,SAAS,oCAAoC,cAAc,4CAA4C,WAAW,gBAAgB,+CAA+C,WAAW,SAAS,4BAA4B;AAC3hE;AACA;AACA,KAAK,OAAO,wDAAU,EAAE;AACxB,KAAK,OAAO,4EAAY;AACxB;AACA;AACA,aAAa,OAAO,mDAAK,EAAE;AAC3B,mBAAmB,OAAO,yDAAW,iCAAiC;AACtE;AACA,4BAA4B,CAAC,+DAAwB;AACrD,cAAc,uDAAS;AACvB;AACA;AACA,+BAA+B,+DAAiB;AAChD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,aAAa;AACb,KAAK,gBAAgB,UAAU,OAAO,wDAAiB,EAAE,GAAG,OAAO,4EAAmB,EAAE,EAAE,EAAE,GAAG;AAC/F,kBAAkB,yDAAW;AAC7B;AACA,SAAS;AACT,kBAAkB,mDAAK;AACvB,SAAS,GAAG,EAAE,EAAE;AAChB,WAAW,EAmBV;;AAED;AACA;AACA;AACA,cAAc,uHAAuH;AACrI;AACA;AACA;AACA,yBAAyB,8DAAuB,EAAE,0BAA0B;AAC5E,yBAAyB,8DAAuB,EAAE,iDAAiD,uCAAuC,EAAE,aAAa,4DAAY,EAAE,4EAAY,IAAI;AACvL,cAAc,oDAAoD,gEAAyB,qBAAqB,4BAA4B,+BAA+B,EAAE,wBAAwB,SAAS,4DAAY,EAAE,4EAAY,EAAE,EAAE,wBAAwB,+BAA+B,EAAE,EAAE,EAAE,EAAE;AAC3S,4BAA4B,CAAC,+DAAwB;AACrD,cAAc,sDAAQ;AACtB;AACA,0BAA0B,4DAAY,EAAE,4EAAY;AACpD;AACA;AACA,aAAa;AACb,KAAK,eAAe,EAAE;;AAEtB;AACA;AACA;AACA,cAAc,uHAAuH;AACrI;;AAEA;AACA;AACA;AACA,cAAc,uHAAuH;AACrI;;AAEmD;;AAEnD,+D;;;;;;;;;;;;AC7OA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAqH;AACtE;AACyF;;AAExI;AACA;AACA;AACA,cAAc,uHAAuH;AACrI;AACwC;AACkB;AAC1D;AACA;AACA,eAAe,EAAE;AACjB,eAAe,EAAE;AACjB,eAAe,EAAE;AACjB,eAAe,EAAE;AACjB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA;AACA;AACA,wBAAwB;AACxB;AACA;AACA;AACA;AACA;AACA,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA;AACA,mBAAmB,EAAE;AACrB,oBAAoB;AACpB;AACA;AACA;AACA;AACA,eAAe,EAAE;AACjB,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA,eAAe,EAAE;AACjB,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA;AACA;AACA,eAAe,EAAE;AACjB,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA,gBAAgB;AAChB;AACA;AACA,mBAAmB,EAAE;AACrB;AACA;AACA,iBAAiB,wEAAQ;AACzB;AACA;AACA,iBAAiB,wEAAQ;AACzB,iBAAiB,wEAAQ;AACzB;AACA;AACA;AACA;AACA;AACA,gBAAgB;AAChB;AACA;AACA,mBAAmB,EAAE;AACrB,oBAAoB,wEAAQ;AAC5B;AACA;AACA,6DAA6D,OAAO;AACpE,iDAAiD,wEAAQ;AACzD,gCAAgC,wEAAQ;AACxC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,gBAAgB;AAChB;AACA;AACA;AACA,mBAAmB,EAAE;AACrB,oBAAoB;AACpB;AACA;AACA;AACA;AACA,0EAA0E,0CAA0C,+DAAwB,CAAC,wDAAiB,GAAG,+DAAwB,CAAC,4EAAmB,GAAG,+DAAwB,CAAC,sFAA6B,GAAG,+DAAwB,CAAC,uFAA8B,GAAG;AACnU,8BAA8B,+DAAwB,EAAE,mJAAmJ;AAC3M,QAAQ,wDAAiB,sEAAsE,sBAAsB,EAAE;AACvH,KAAK;AACL,QAAQ,yDAAkB;AAC1B,KAAK,EAAE,WAAW,iBAAiB,mJAAmJ;AACtL,QAAQ,4DAAqB;AAC7B,QAAQ,uDAAgB;AACxB,QAAQ,0DAAmB;AAC3B,KAAK;AACL,QAAQ,yDAAkB;AAC1B,QAAQ,uDAAgB;AACxB,QAAQ,yDAAkB;AAC1B,KAAK,EAAE,qCAAqC,uBAAuB,SAAS,sCAAsC,wBAAwB,SAAS,0CAA0C,+BAA+B,0BAA0B,6BAA6B,yBAAyB,uBAAuB,sBAAsB,uBAAuB,0BAA0B,oCAAoC,uBAAuB,SAAS,4EAA4E,uBAAuB,SAAS,uGAAuG,+BAA+B,sBAAsB,uBAAuB,6BAA6B,wBAAwB,8BAA8B,kCAAkC,0BAA0B,SAAS,gDAAgD,qCAAqC,qBAAqB,SAAS,oHAAoH,gCAAgC,SAAS,4BAA4B;AACjrC;AACA;AACA,KAAK,OAAO,wDAAU,EAAE;AACxB,KAAK,OAAO,4EAAY,EAAE;AAC1B,KAAK,OAAO,sFAAsB,EAAE;AACpC,KAAK,OAAO,uFAAuB;AACnC;AACA;AACA,aAAa,OAAO,mDAAK,EAAE;AAC3B,mBAAmB,OAAO,yDAAW,iCAAiC;AACtE,eAAe,OAAO,0DAAY,oBAAoB;AACtD;AACA,4BAA4B,CAAC,+DAAwB;AACrD,cAAc,uDAAS;AACvB;AACA;AACA,+BAA+B,+DAAiB;AAChD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,aAAa;AACb,KAAK,gBAAgB,UAAU,OAAO,wDAAiB,EAAE,GAAG,OAAO,4EAAmB,EAAE,GAAG,OAAO,sFAA6B,EAAE,GAAG,OAAO,uFAA8B,EAAE,EAAE,EAAE,GAAG;AAClL,kBAAkB,yDAAW;AAC7B;AACA,SAAS;AACT;AACA,gBAAgB;AAChB;AACA;AACA,kBAAkB,0DAAY;AAC9B;AACA,SAAS;AACT,kBAAkB,mDAAK;AACvB,SAAS,GAAG,EAAE,EAAE;AAChB,WAAW,EAwBV;;AAED;AACA;AACA;AACA,cAAc,uHAAuH;AACrI;AACA;AACA;AACA,2BAA2B,8DAAuB,EAAE,4BAA4B;AAChF,2BAA2B,8DAAuB,EAAE,mDAAmD,yCAAyC,EAAE,aAAa,4DAAY,EAAE,4EAAY,IAAI;AAC7L,cAAc,oDAAoD,gEAAyB,uBAAuB,4BAA4B,iCAAiC,EAAE,wBAAwB,SAAS,4DAAY,EAAE,4EAAY,EAAE,EAAE,wBAAwB,iCAAiC,EAAE,EAAE,EAAE,EAAE;AACjT,4BAA4B,CAAC,+DAAwB;AACrD,cAAc,sDAAQ;AACtB;AACA,0BAA0B,4DAAY,EAAE,4EAAY;AACpD;AACA;AACA,aAAa;AACb,KAAK,eAAe,EAAE;;AAEtB;AACA;AACA;AACA,cAAc,uHAAuH;AACrI;;AAEA;AACA;AACA;AACA,cAAc,uHAAuH;AACrI;;AAEuD;;AAEvD,kE;;;;;;;;;;;;AC5RA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAoE;AACb;AACM;AAEtD,MAAM,UAAU;IAAvB;QACE,YAAO,GAAG,KAAK,CAAC;IAClB,CAAC;CAAA;AAEM,MAAM,SAAS;IAQpB,YAAoB,UAAa;QAAb,eAAU,GAAV,UAAU,CAAG;QAPjC,4GAA4G;QAC5G,sFAAsF;QACtF,2CAA2C;QACnC,iBAAY,GAAG,CAAC,qEAAW,CAAC,cAAc,IAAI,qEAAW,CAAC,cAAc,CAAC,YAAY,CAAC,CAAC,CAAC,CAAC,qEAAW,CAAC,cAAc,CAAC,YAAY,CAAC,CAAC,CAAC,CAAC,CAAC;QAErI,aAAQ,GAAkC,IAAI,kDAAa,CAAC,CAAC,CAAC,CAAC;IAElC,CAAC;IAEtC,gCAAgC;IAChC,sDAAsD;IACtD,6EAA6E;IACtE,MAAM,CAAC,WAAW,CAAI,cAA6B,EAAE,UAAa,EAAE,YAAY,GAAG,GAAG;QAC3F,MAAM,eAAe,GAAG,+CAAE,CAAC,IAAI,CAAC,CAAC,IAAI,CACnC,4DAAK,CAAC,YAAY,CAAC,CACpB,CAAC;QAEF,gCAAgC;QAChC,wGAAwG;QACxG,OAAO,0DAAa,CAAC;YACnB,eAAe;YACf,cAAc;SACf,CAAC,CAAC,IAAI;QACL,iCAAiC;QACjC,0DAAG,CAAC,CAAC,CAAC,UAAU,EAAE,SAAS,CAAe,EAAoB,EAAE,CAAC,MAAM,CAAC,MAAM,CAAC,SAAS,EAAE,EAAC,OAAO,EAAE,KAAK,EAAC,CAAC,CAAC;QAC5G,2CAA2C;QAC3C,gEAAS,CAAC,MAAM,CAAC,MAAM,CAAC,UAAU,EAAE,EAAC,OAAO,EAAE,IAAI,EAAC,CAAC,CAAC,CACtD,CAAC;IACJ,CAAC;IAED,IAAI,CAAC,oBAAmC,EAAE,YAAqB;QAC7D,gDAAgD;QAChD,MAAM,KAAK,GAAG,CAAC,OAAO,YAAY,KAAK,QAAQ,CAAC,CAAC,CAAC,CAAC,YAAY,CAAC,CAAC,CAAC,IAAI,CAAC,YAAY,CAAC;QAEpF,IAAI,mBAAoC,CAAC;QAEzC,6CAA6C;QAC7C,IAAI,KAAK,KAAK,CAAC,EAAE;YACf,mBAAmB,GAAG,oBAAoB,CAAC;SAC5C;aAAM;YACL,mBAAmB,GAAG,SAAS,CAAC,WAAW,CAAC,oBAAoB,EAAE,IAAI,CAAC,UAAU,EAAE,KAAK,CAAC,CAAC;SAC3F;QAED,mBAAmB;aAClB,SAAS,CAAC,CAAC,SAAyB,EAAE,EAAE;YACvC,IAAI,CAAC,QAAQ,CAAC,IAAI,CAAC,SAAS,CAAC,CAAC;QAChC,CAAC,CAAC,CAAC;IACL,CAAC;IAED,IAAW,KAAK;QACd,OAAO,IAAI,CAAC,QAAQ,CAAC,YAAY,EAAE,CAAC;IACtC,CAAC;CACF;;;;;;;;;;;;;AC7DD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAgE;AACd;AAGU;AACZ;AACqB;AAClB;;;;AAG5C,MAAM,oBAAoB;IAI/B,YAC+B,UAAkB,EACvC,mBAAwC,EACxC,IAAgB;QAFK,eAAU,GAAV,UAAU,CAAQ;QACvC,wBAAmB,GAAnB,mBAAmB,CAAqB;QACxC,SAAI,GAAJ,IAAI,CAAY;IACtB,CAAC;IAEE,0BAA0B;QAC/B,MAAM,aAAa,GAAG,IAAI,CAAC,IAAI,CAAC,GAAG,CAAqB,yDAAyD,CAAC,CAAC;QAEnH,0GAA0G;QAC1G,4HAA4H;QAC5H,2BAA2B;QAC3B,MAAM,gBAAgB,GAAG,IAAI,CAAC,mBAAmB,CAAC,oBAAoB,CAAC,sBAAsB,EAAE,aAAa,CAAC,CAAC;QAE9G,OAAO,gBAAgB,CAAC;IAC1B,CAAC;IAEM,qBAAqB,CAAC,UAA0C;QACrE,yBAAyB;QACzB,IAAI,CAAC,IAAI,CAAC,sBAAsB,EAAE;YAChC,2DAA2D;YAC3D,MAAM,UAAU,GAAuB,IAAI,wEAAkB,EAAE,CAAC;YAChE,IAAI,CAAC,sBAAsB,GAAG,IAAI,2DAAS,CAAC,UAAU,CAAC,CAAC;YAExD,mEAAmE;YACnE,qIAAqI;YACrI,IAAI,wEAAgB,CAAC,IAAI,CAAC,UAAU,CAAC,IAAI,UAAU,CAAC,WAAW,CAAC,EAAE;gBAChE,mFAAmF;gBACnF,IAAI,CAAC,sBAAsB,CAAC,IAAI,CAAC,UAAU,EAAE,CAAC,CAAC,CAAC;aACjD;iBAAM,EAAE,yBAAyB;gBAChC,6CAA6C;gBAC7C,IAAI,CAAC,sBAAsB,CAAC,IAAI,CAAC,UAAU,CAAC,CAAC;aAC9C;SACF;QAED,OAAO,IAAI,CAAC,sBAAsB,CAAC;IACrC,CAAC;;wFAxCU,oBAAoB,yDAKrB,yDAAW;uGALV,oBAAoB,WAApB,oBAAoB;6FAApB,oBAAoB;cADhC,wDAAU;;sBAMN,oDAAM;uBAAC,yDAAW;;;;;;;;;;;;;;ACfvB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAA+K;AAChI;AACd;AACuG;;AAExI;AACA;AACA;AACA,cAAc,uHAAuH;AACrI;AACwC;AACkB;AAChB;;AAE1C;AACA;AACA,2BAA2B,SAAS,gBAAgB;AACpD,8DAA8D;AAC9D,IAAI,4DAAqB;AACzB,IAAI,oDAAa;AACjB,IAAI,0DAAmB;AACvB,CAAC;AACD;AACA,IAAI,wDAAiB;AACrB,IAAI,uDAAgB;AACpB,IAAI,gEAAyB;AAC7B,CAAC;AACD,0DAA0D;AAC1D,IAAI,4DAAqB;AACzB,IAAI,oDAAa;AACjB,IAAI,0DAAmB;AACvB,CAAC;AACD,0DAA0D;AAC1D,IAAI,4DAAqB;AACzB,IAAI,oDAAa;AACjB,IAAI,oDAAa;AACjB,IAAI,0DAAmB;AACvB,CAAC;AACD,mBAAmB,2DAAoB;AACvC,IAAI,uDAAgB;AACpB,IAAI,+DAAwB,CAAC,yDAAkB;AAC/C,CAAC;AACD,gEAAgE;AAChE,IAAI,4DAAqB;AACzB,IAAI,oDAAa;AACjB,IAAI,0DAAmB;AACvB,CAAC;AACD;AACA,mBAAmB,2DAAoB;AACvC,IAAI,wDAAiB;AACrB,IAAI,uDAAgB;AACpB,IAAI,gEAAyB;AAC7B,CAAC;AACD,gEAAgE;AAChE,IAAI,uDAAgB;AACpB,CAAC;AACD;AACA,IAAI,yDAAkB;AACtB,CAAC;AACD,kEAAkE;AAClE,IAAI,uDAAgB;AACpB,CAAC;AACD;AACA;AACA;AACA,eAAe,EAAE;AACjB,eAAe,EAAE;AACjB,eAAe,EAAE;AACjB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,gBAAgB;AAChB;AACA;AACA,0BAA0B,sDAAS;AACnC;AACA,2BAA2B,sDAAS;AACpC;AACA;AACA;AACA;AACA;AACA;AACA,wBAAwB;AACxB;AACA;AACA;AACA;AACA;AACA,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA;AACA;AACA,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA;AACA;AACA,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,gBAAgB;AAChB;AACA;AACA,+BAA+B,wEAAQ;AACvC;AACA,wBAAwB;AACxB;AACA;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA,gBAAgB;AAChB;AACA;AACA;AACA,mBAAmB,EAAE;AACrB,oBAAoB;AACpB;AACA;AACA;AACA;AACA,oEAAoE,uCAAuC,+DAAwB,CAAC,4EAAmB,GAAG,+DAAwB,CAAC,wDAAiB,GAAG,+DAAwB,CAAC,uFAA8B,GAAG;AACjQ,2BAA2B,+DAAwB,EAAE,yIAAyI;AAC9L,QAAQ,yDAAkB;AAC1B,QAAQ,yDAAkB;AAC1B,KAAK,EAAE,WAAW,6EAA6E,wGAAwG;AACvM,QAAQ,6DAAsB;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gB;AAChB;AACA;AACA,kBAAkB,0DAAY;AAC9B;AACA,SAAS;AACT;AACA,eAAe,EAAE;AACjB,gBAAgB;AAChB;AACA;AACA,kBAAkB,0DAAY;AAC9B;AACA,SAAS;AACT;AACA,eAAe,EAAE;AACjB,gBAAgB;AAChB;AACA;AACA,kBAAkB,0DAAY;AAC9B;AACA,SAAS;AACT,kBAAkB,mDAAK;AACvB,SAAS;AACT,kBAAkB,uDAAS;AAC3B,iCAAiC,eAAe;AAChD,SAAS,GAAG,EAAE,EAAE;AAChB,WAAW,EAmBV;;AAED;AACA;AACA;AACA,cAAc,uHAAuH;AACrI;AACA;AACA;AACA;AACA,mBAAmB;AACnB,WAAW,EAOV;AACD;AACA;AACA,eAAe,EAAE;AACjB,eAAe,EAAE;AACjB;AACA;AACA;AACA;AACA;AACA;AACA;AACA,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA;AACA;AACA,wBAAwB;AACxB;AACA;AACA;AACA;AACA;AACA,gBAAgB;AAChB;AACA;AACA;AACA,mBAAmB,EAAE;AACrB,6CAA6C,EAAE;AAC/C;AACA,mBAAmB,EAAE;AACrB,oBAAoB;AACpB;AACA;AACA;AACA,mBAAmB,EAAE;AACrB,oBAAoB;AACpB;AACA;AACA;AACA,mBAAmB,EAAE;AACrB,oBAAoB;AACpB;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA;AACA;AACA,2BAA2B,EAAE;AAC7B,4BAA4B;AAC5B;AACA;AACA,aAAa;AACb;AACA,mBAAmB,EAAE;AACrB;AACA,mBAAmB,EAAE;AACrB,oBAAoB;AACpB;AACA;AACA;AACA;AACA;AACA;AACA,eAAe,EAAE;AACjB,gBAAgB;AAChB;AACA;AACA;AACA;AACA,gCAAgC,EAAE;AAClC,mBAAmB,EAAE;AACrB,oBAAoB;AACpB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA,gBAAgB;AAChB;AACA;AACA;AACA,mBAAmB,EAAE;AACrB,oBAAoB;AACpB;AACA;AACA;AACA;AACA,8EAA8E,4CAA4C,+DAAwB,CAAC,wDAAiB,GAAG,+DAAwB,CAAC,4EAAmB,GAAG;AACtN,gCAAgC,+DAAwB,EAAE,8EAA8E,iBAAiB,sSAAsS;AAC/b,QAAQ,4DAAqB;AAC7B,QAAQ,4DAAqB;AAC7B,QAAQ,oDAAa;AACrB,QAAQ,0DAAmB;AAC3B,QAAQ,4DAAqB;AAC7B,QAAQ,wDAAiB,wFAAwF,6CAA6C,EAAE;AAChK,QAAQ,wDAAiB;AACzB,QAAQ,0DAAmB;AAC3B,QAAQ,0DAAmB;AAC3B,KAAK;AACL,QAAQ,uDAAgB;AACxB,QAAQ,yDAAkB;AAC1B,QAAQ,uDAAgB;AACxB,QAAQ,gEAAyB;AACjC,QAAQ,uDAAgB;AACxB,QAAQ,yDAAkB;AAC1B,QAAQ,uDAAgB;AACxB,QAAQ,wDAAiB;AACzB,KAAK,EAAE,eAAe,uDAAc,wCAAwC,sCAAsC,oCAAoC,iCAAiC,gCAAgC,4BAA4B,wBAAwB,kCAAkC,sBAAsB,uBAAuB,0BAA0B,uBAAuB,4BAA4B,SAAS,sCAAsC,6BAA6B,wBAAwB,uBAAuB,8BAA8B,qBAAqB,sBAAsB,SAAS,gDAAgD,sBAAsB,2BAA2B,uBAAuB,2BAA2B,mCAAmC,gCAAgC,2BAA2B,6BAA6B,0BAA0B,SAAS,4DAA4D,wBAAwB,SAAS,uDAAuD,sBAAsB,SAAS,2CAA2C,6BAA6B,sBAAsB,uBAAuB,oBAAoB,6BAA6B,oCAAoC,oEAAoE,2BAA2B,+BAA+B,SAAS,0DAA0D,sBAAsB,SAAS,4BAA4B;AAC9hD;AACA;AACA,KAAK,OAAO,wDAAU,EAAE;AACxB,KAAK,OAAO,4EAAY;AACxB;AACA;AACA,aAAa,OAAO,mDAAK,EAAE;AAC3B;AACA,4BAA4B,CAAC,+DAAwB;AACrD,cAAc,uDAAS;AACvB;AACA;AACA,+BAA+B,+DAAiB;AAChD;AACA;AACA;AACA;AACA;AACA;AACA,UAAU;AACV;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,YAAY;AACZ;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,aAAa;AACb,KAAK,gBAAgB,UAAU,OAAO,wDAAiB,EAAE,GAAG,OAAO,4EAAmB,EAAE,EAAE,EAAE,GAAG;AAC/F,kBAAkB,mDAAK;AACvB,SAAS,GAAG,EAAE,EAAE;AAChB,WAAW,EAiBV;;AAED;AACA;AACA;AACA,cAAc,uHAAuH;AACrI;AACA;AACA;AACA;AACA,eAAe,EAAE;AACjB,eAAe,EAAE;AACjB,gBAAgB;AAChB;AACA;AACA,mBAAmB,EAAE;AACrB;AACA,mBAAmB,EAAE;AACrB;AACA,mBAAmB,EAAE;AACrB;AACA,mBAAmB,EAAE;AACrB;AACA,mBAAmB,EAAE;AACrB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,mDAAmD,EAAE;AACrD,mDAAmD,EAAE;AACrD,mDAAmD,EAAE;AACrD;AACA;AACA;AACA,gDAAgD,+BAA+B;AAC/E,kBAAkB,0DAAmB,EAAE,6CAA6C;AACpF,4BAA4B,CAAC,+DAAwB;AACrD,cAAc,kDAAI;AAClB,gBAAgB,gBAAgB;AAChC,KAAK,eAAe,EAAE;AACtB;AACA;AACA,eAAe,EAAE;AACjB,eAAe,EAAE;AACjB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA;AACA;AACA,wBAAwB;AACxB;AACA;AACA;AACA;AACA;AACA,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA,gBAAgB;AAChB;AACA;AACA,mBAAmB,EAAE;AACrB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,gBAAgB;AAChB;AACA;AACA;AACA,mBAAmB,EAAE;AACrB,oBAAoB;AACpB;AACA;AACA;AACA;AACA,0EAA0E,0CAA0C,+DAAwB,CAAC,wDAAiB,GAAG,+DAAwB,CAAC,4EAAmB,GAAG;AAChN,8BAA8B,+DAAwB,EAAE,0EAA0E,iEAAiE,kIAAkI;AACrU,QAAQ,6DAAsB;AAC9B,QAAQ,wDAAiB;AACzB,QAAQ,wDAAiB;AACzB,QAAQ,0DAAmB;AAC3B,KAAK;AACL,QAAQ,wDAAiB;AACzB,QAAQ,uDAAgB;AACxB,QAAQ,wDAAiB;AACzB,KAAK,EAAE,eAAe,oDAAW,0DAA0D,sCAAsC,oCAAoC,iCAAiC,gCAAgC,4BAA4B,wBAAwB,kCAAkC,uBAAuB,sBAAsB,0BAA0B,uBAAuB,4BAA4B,+BAA+B,oEAAoE,SAAS,4BAA4B;AAC9jB;AACA;AACA,KAAK,OAAO,wDAAU,EAAE;AACxB,KAAK,OAAO,4EAAY;AACxB;AACA;AACA,aAAa,OAAO,mDAAK,EAAE;AAC3B,kBAAkB,OAAO,mDAAK,EAAE;AAChC,gBAAgB,OAAO,mDAAK,EAAE;AAC9B;AACA,4BAA4B,CAAC,+DAAwB;AACrD,cAAc,uDAAS;AACvB;AACA;AACA,+BAA+B,+DAAiB;AAChD;AACA;AACA,oCAAoC,+BAA+B;AACnE;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,aAAa;AACb,KAAK,gBAAgB,UAAU,OAAO,wDAAiB,EAAE,GAAG,OAAO,4EAAmB,EAAE,EAAE,EAAE,GAAG;AAC/F,kBAAkB,mDAAK;AACvB,SAAS;AACT,kBAAkB,mDAAK;AACvB,SAAS;AACT,kBAAkB,mDAAK;AACvB,SAAS,GAAG,EAAE,EAAE;AAChB,WAAW,EAeV;;AAED;AACA;AACA;AACA,cAAc,uHAAuH;AACrI;AACA;AACA;AACA,eAAe,EAAE;AACjB,eAAe,EAAE;AACjB,eAAe,EAAE;AACjB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,mBAAmB,EAAE;AACrB,oBAAoB;AACpB;AACA;AACA;AACA;AACA,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA;AACA;AACA,wBAAwB;AACxB;AACA;AACA;AACA;AACA;AACA,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA;AACA,gBAAgB;AAChB;AACA;AACA;AACA;AACA,sCAAsC,wEAAQ;AAC9C;AACA;AACA;AACA;AACA;AACA;AACA;AACA,eAAe,EAAE;AACjB,gBAAgB;AAChB;AACA;AACA;AACA,uBAAuB,EAAE;AACzB;AACA;AACA;AACA;AACA;AACA;AACA;AACA,eAAe,EAAE;AACjB,gBAAgB;AAChB;AACA;AACA;AACA;AACA,uBAAuB,EAAE;AACzB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,eAAe,EAAE;AACjB,gBAAgB;AAChB;AACA;AACA,mBAAmB,EAAE;AACrB;AACA,mBAAmB,EAAE;AACrB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,eAAe,EAAE;AACjB,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,eAAe,EAAE;AACjB,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,eAAe,EAAE;AACjB,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,eAAe,EAAE;AACjB,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,eAAe,EAAE;AACjB,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,eAAe,EAAE;AACjB,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,eAAe,EAAE;AACjB,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,eAAe,EAAE;AACjB,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA;AACA;AACA,eAAe,EAAE;AACjB,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA,gBAAgB;AAChB;AACA;AACA;AACA,mBAAmB,EAAE;AACrB,oBAAoB;AACpB;AACA;AACA;AACA;AACA,oEAAoE,uCAAuC,+DAAwB,CAAC,wDAAiB,GAAG,+DAAwB,CAAC,4EAAmB,GAAG,+DAAwB,CAAC,uFAA8B,GAAG;AACjQ,2BAA2B,+DAAwB,EAAE,0IAA0I;AAC/L,QAAQ,wDAAiB,iFAAiF,wCAAwC,EAAE,kFAAkF,wCAAwC,EAAE,SAAS,+DAAwB,8EAA8E,sCAAsC,EAAE,SAAS,+DAAwB,oFAAoF,yCAAyC,EAAE,kFAAkF,wCAAwC,EAAE,SAAS,+DAAwB,sFAAsF,0CAA0C,EAAE,SAAS,+DAAwB,gFAAgF,uCAAuC,EAAE,SAAS,+DAAwB,8EAA8E,sCAAsC,EAAE;AACvpC,KAAK;AACL,QAAQ,yDAAkB;AAC1B,KAAK,EAAE,WAAW,uCAAuC,uQAAuQ;AAChU,QAAQ,6DAAsB;AAC9B,QAAQ,4DAAqB;AAC7B,QAAQ,0DAAmB;AAC3B,QAAQ,0DAAmB;AAC3B,KAAK;AACL,QAAQ,yDAAkB;AAC1B,KAAK,EAAE,kCAAkC,sCAAsC,oCAAoC,iCAAiC,gCAAgC,4BAA4B,6BAA6B,sBAAsB,sBAAsB,uBAAuB,oBAAoB,0BAA0B,8BAA8B,0CAA0C,uBAAuB,sDAAsD,qDAAqD,mDAAmD,kDAAkD,8CAA8C,SAAS,gCAAgC,6BAA6B,wBAAwB,uBAAuB,8BAA8B,uBAAuB,SAAS,kCAAkC,6BAA6B,oBAAoB,kCAAkC,uBAAuB,uBAAuB,wBAAwB,yBAAyB,sCAAsC,qCAAqC,mCAAmC,kCAAkC,8BAA8B,SAAS,2BAA2B,oBAAoB,qBAAqB,SAAS,uCAAuC,0BAA0B,2BAA2B,SAAS,4BAA4B;AACv8C;AACA;AACA,KAAK,OAAO,wDAAU,EAAE;AACxB,KAAK,OAAO,4EAAY,EAAE;AAC1B,KAAK,OAAO,uFAAuB;AACnC;AACA;AACA,oBAAoB,OAAO,yDAAW,yBAAyB;AAC/D,aAAa,OAAO,mDAAK,EAAE;AAC3B,gBAAgB,OAAO,mDAAK,EAAE;AAC9B,2BAA2B,OAAO,0DAAY,oCAAoC;AAClF,2BAA2B,OAAO,0DAAY,6CAA6C;AAC3F,yBAAyB,OAAO,0DAAY,2CAA2C;AACvF,4BAA4B,OAAO,0DAAY,qCAAqC;AACpF,2BAA2B,OAAO,0DAAY,6CAA6C;AAC3F,6BAA6B,OAAO,0DAAY,+CAA+C;AAC/F,0BAA0B,OAAO,0DAAY,4CAA4C;AACzF,yBAAyB,OAAO,0DAAY,kCAAkC;AAC9E;AACA,4BAA4B,CAAC,+DAAwB;AACrD,cAAc,uDAAS;AACvB;AACA;AACA,+BAA+B,+DAAiB;AAChD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,aAAa;AACb,KAAK,gBAAgB,UAAU,OAAO,wDAAiB,EAAE,GAAG,OAAO,4EAAmB,EAAE,GAAG,OAAO,uFAA8B,EAAE,EAAE,EAAE,GAAG;AACzI,kBAAkB,yDAAW;AAC7B;AACA,SAAS;AACT,kBAAkB,mDAAK;AACvB,SAAS;AACT;AACA,eAAe,EAAE;AACjB,gBAAgB;AAChB;AACA;AACA,kBAAkB,0DAAY;AAC9B;AACA,SAAS;AACT;AACA,eAAe,EAAE;AACjB,gBAAgB;AAChB;AACA;AACA,kBAAkB,0DAAY;AAC9B;AACA,SAAS;AACT;AACA,eAAe,EAAE;AACjB,gBAAgB;AAChB;AACA;AACA,kBAAkB,0DAAY;AAC9B;AACA,SAAS;AACT;AACA,eAAe,EAAE;AACjB,gBAAgB;AAChB;AACA;AACA,kBAAkB,0DAAY;AAC9B;AACA,SAAS;AACT;AACA,eAAe,EAAE;AACjB,gBAAgB;AAChB;AACA;AACA,kBAAkB,0DAAY;AAC9B;AACA,SAAS;AACT;AACA;AACA,eAAe,EAAE;AACjB,gBAAgB;AAChB;AACA;AACA,kBAAkB,0DAAY;AAC9B;AACA,SAAS;AACT;AACA;AACA,eAAe,EAAE;AACjB,gBAAgB;AAChB;AACA;AACA,kBAAkB,0DAAY;AAC9B;AACA,SAAS;AACT;AACA,eAAe,EAAE;AACjB,gBAAgB;AAChB;AACA;AACA,kBAAkB,0DAAY;AAC9B;AACA,SAAS;AACT,kBAAkB,mDAAK;AACvB,SAAS,GAAG,EAAE,EAAE;AAChB,WAAW,EAmBV;;AAED;AACA;AACA;AACA,cAAc,uHAAuH;AACrI;AACA;AACA;AACA,eAAe,EAAE;AACjB,eAAe,EAAE;AACjB;AACA;AACA;AACA,mCAAmC,0DAAY;AAC/C;AACA;AACA;AACA;AACA,gBAAgB;AAChB;AACA,gBAAgB;AAChB;AACA,eAAe,EAAE;AACjB,gBAAgB;AAChB;AACA;AACA;AACA;AACA,uBAAuB,EAAE;AACzB,wBAAwB;AACxB;AACA;AACA;AACA;AACA;AACA;AACA,eAAe,EAAE;AACjB,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA;AACA,gBAAgB;AAChB;AACA;AACA;AACA,mBAAmB,EAAE;AACrB,oBAAoB;AACpB;AACA;AACA;AACA;AACA,kFAAkF,8CAA8C,+DAAwB,CAAC,wDAAiB,GAAG,+DAAwB,CAAC,4EAAmB,GAAG;AAC5N,kCAAkC,+DAAwB,EAAE,kFAAkF,uBAAuB,YAAY,qCAAqC,aAAa,kEAA2B,gTAAgT;AAC9iB,QAAQ,4DAAqB;AAC7B,QAAQ,4DAAqB;AAC7B,QAAQ,oDAAa;AACrB,QAAQ,0DAAmB;AAC3B,QAAQ,4DAAqB;AAC7B,QAAQ,wDAAiB,0FAA0F,+CAA+C,EAAE;AACpK,QAAQ,wDAAiB;AACzB,QAAQ,0DAAmB;AAC3B,QAAQ,0DAAmB;AAC3B,KAAK;AACL,QAAQ,uDAAgB;AACxB,QAAQ,yDAAkB;AAC1B,QAAQ,uDAAgB;AACxB,QAAQ,gEAAyB;AACjC,QAAQ,uDAAgB;AACxB,QAAQ,yDAAkB;AAC1B,QAAQ,uDAAgB;AACxB,QAAQ,wDAAiB;AACzB,KAAK,EAAE,eAAe,uDAAc,0CAA0C,sCAAsC,oCAAoC,iCAAiC,gCAAgC,4BAA4B,wBAAwB,kCAAkC,sBAAsB,uBAAuB,0BAA0B,uBAAuB,4BAA4B,SAAS,wCAAwC,6BAA6B,wBAAwB,uBAAuB,8BAA8B,qBAAqB,sBAAsB,SAAS,qDAAqD,sBAAsB,2BAA2B,uBAAuB,2BAA2B,mCAAmC,gCAAgC,2BAA2B,6BAA6B,0BAA0B,SAAS,iEAAiE,wBAAwB,SAAS,4DAA4D,sBAAsB,SAAS,+CAA+C,6BAA6B,sBAAsB,uBAAuB,oBAAoB,6BAA6B,oCAAoC,oEAAoE,2BAA2B,+BAA+B,SAAS,4DAA4D,sBAAsB,SAAS,4BAA4B;AACvjD;AACA;AACA,KAAK,OAAO,wDAAU,EAAE;AACxB,KAAK,OAAO,4EAAY;AACxB;AACA;AACA,gBAAgB,OAAO,mDAAK,EAAE;AAC9B,uBAAuB,OAAO,oDAAM,EAAE;AACtC;AACA,4BAA4B,CAAC,+DAAwB;AACrD,cAAc,uDAAS;AACvB;AACA;AACA,+BAA+B,+DAAiB;AAChD;AACA;AACA;AACA,UAAU;AACV;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,YAAY;AACZ;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,aAAa;AACb,KAAK,gBAAgB,UAAU,OAAO,wDAAiB,EAAE,GAAG,OAAO,4EAAmB,EAAE,EAAE,EAAE,GAAG;AAC/F,kBAAkB,oDAAM;AACxB,SAAS;AACT,kBAAkB,mDAAK;AACvB,SAAS,GAAG,EAAE,EAAE;AAChB,WAAW,EAiBV;;AAED;AACA;AACA;AACA,cAAc,uHAAuH;AACrI;AACA;AACA;AACA,eAAe,EAAE;AACjB,eAAe,EAAE;AACjB,eAAe,EAAE;AACjB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA;AACA;AACA,wBAAwB;AACxB;AACA;AACA;AACA;AACA;AACA,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA,eAAe,EAAE;AACjB,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,gBAAgB;AAChB;AACA;AACA;AACA,mCAAmC,4EAAY;AAC/C;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA;AACA,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,gBAAgB;AAChB;AACA;AACA;AACA,mBAAmB,EAAE;AACrB,oBAAoB;AACpB;AACA;AACA;AACA;AACA,gFAAgF,6CAA6C,+DAAwB,CAAC,wDAAiB,GAAG,+DAAwB,CAAC,4EAAmB,GAAG,+DAAwB,CAAC,+DAAwB,GAAG;AAC7Q,iCAAiC,+DAAwB,EAAE,+IAA+I;AAC1M,QAAQ,wDAAiB,yEAAyE,sBAAsB,EAAE,oFAAoF,8BAA8B,EAAE;AAC9O,KAAK,EAAE,WAAW,mDAAmD,wLAAwL;AAC7P,QAAQ,4DAAqB;AAC7B,QAAQ,oDAAa;AACrB,QAAQ,0DAAmB;AAC3B,KAAK;AACL,QAAQ,yDAAkB;AAC1B,QAAQ,uDAAgB;AACxB,QAAQ,gEAAyB;AACjC,KAAK,EAAE,wCAAwC,sCAAsC,oCAAoC,iCAAiC,gCAAgC,4BAA4B,wBAAwB,kCAAkC,uBAAuB,sBAAsB,0BAA0B,uBAAuB,4BAA4B,oEAAoE,SAAS,oCAAoC,wBAAwB,8BAA8B,kCAAkC,sBAAsB,SAAS,4BAA4B;AAC9oB;AACA;AACA,KAAK,OAAO,wDAAU,EAAE;AACxB,KAAK,OAAO,4EAAY,EAAE;AAC1B,KAAK,OAAO,+DAAiB;AAC7B;AACA;AACA,aAAa,OAAO,mDAAK,EAAE;AAC3B,sBAAsB,OAAO,mDAAK,EAAE;AACpC,eAAe,OAAO,0DAAY,oBAAoB;AACtD,iBAAiB,OAAO,0DAAY,kCAAkC;AACtE;AACA,4BAA4B,CAAC,+DAAwB;AACrD,cAAc,uDAAS;AACvB;AACA;AACA,+BAA+B,+DAAiB;AAChD;AACA;AACA;AACA;AACA;AACA;AACA;AACA,MAAM,qBAAqB;AAC3B;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,aAAa;AACb,KAAK,gBAAgB,UAAU,OAAO,wDAAiB,EAAE,GAAG,OAAO,4EAAmB,EAAE,GAAG,OAAO,+DAAwB,EAAE,EAAE,EAAE,GAAG;AACnI,kBAAkB,mDAAK;AACvB,SAAS;AACT;AACA,gBAAgB;AAChB;AACA;AACA,kBAAkB,0DAAY;AAC9B;AACA,SAAS;AACT;AACA,eAAe,EAAE;AACjB,gBAAgB;AAChB;AACA;AACA,kBAAkB,0DAAY;AAC9B;AACA,SAAS;AACT,kBAAkB,mDAAK;AACvB,SAAS,GAAG,EAAE,EAAE;AAChB,WAAW,EAmBV;;AAED;AACA;AACA;AACA,cAAc,uHAAuH;AACrI;AACA;AACA;AACA,eAAe,EAAE;AACjB,eAAe,EAAE;AACjB;AACA;AACA;AACA;AACA,yBAAyB,wEAAQ;AACjC;AACA;AACA;AACA,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA;AACA;AACA,wBAAwB;AACxB;AACA;AACA;AACA;AACA;AACA,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA,eAAe,EAAE;AACjB,gBAAgB;AAChB;AACA;AACA;AACA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A;AACA,KAAK,OAAO,wDAAU,EAAE;AACxB,KAAK,OAAO,4EAAY;AACxB;AACA;AACA,aAAa,OAAO,mDAAK,EAAE;AAC3B,eAAe,OAAO,0DAAY,oBAAoB;AACtD,iBAAiB,OAAO,0DAAY,kCAAkC;AACtE;AACA,4BAA4B,CAAC,+DAAwB;AACrD,cAAc,uDAAS;AACvB;AACA;AACA,+BAA+B,+DAAiB;AAChD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,aAAa;AACb,KAAK,gBAAgB,UAAU,OAAO,wDAAiB,EAAE,GAAG,OAAO,4EAAmB,EAAE,EAAE,EAAE,G;AAC5F;AACA,gBAAgB;AAChB;AACA;AACA,kBAAkB,0DAAY;AAC9B;AACA,SAAS;AACT;AACA,eAAe,EAAE;AACjB,gBAAgB;AAChB;AACA;AACA,kBAAkB,0DAAY;AAC9B;AACA,SAAS;AACT,kBAAkB,mDAAK;AACvB,SAAS,GAAG,EAAE,EAAE;AAChB,WAAW,EAeV;;AAED;AACA;AACA;AACA,cAAc,uHAAuH;AACrI;AACA;AACA;AACA,eAAe,EAAE;AACjB,eAAe,EAAE;AACjB,eAAe,EAAE;AACjB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA;AACA;AACA,wBAAwB;AACxB;AACA;AACA;AACA;AACA;AACA,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA,eAAe,EAAE;AACjB,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA;AACA,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA,eAAe,EAAE;AACjB,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,gBAAgB;AAChB;AACA;AACA,mBAAmB,EAAE;AACrB;AACA,mCAAmC,4EAAY;AAC/C;AACA;AACA;AACA;AACA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ACjB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA;AACA;AACA,wBAAwB;AACxB;AACA;AACA;AACA;AACA;AACA,gBAAgB;AAChB;AACA;AACA;AACA,mBAAmB,EAAE;AACrB;AACA;AACA;AACA;AACA;AACA;AACA;AACA,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA;AACA,wDAAwD,OAAO;AAC/D,2BAA2B,EAAE;AAC7B;AACA;AACA;AACA,2BAA2B,EAAE;AAC7B;AACA,2BAA2B,EAAE;AAC7B;AACA,2BAA2B,EAAE;AAC7B;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,6BAA6B,EAAE;AAC/B;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,eAAe,EAAE;AACjB,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA;AACA;AACA,gBAAgB;AAChB;AACA;AACA;AACA,uBAAuB,EAAE;AACzB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,gBAAgB;AAChB;AACA;AACA;AACA,mBAAmB,EAAE;AACrB,oBAAoB;AACpB;AACA;AACA;AACA;AACA,sFAAsF,gDAAgD,+DAAwB,CAAC,wDAAiB,GAAG,+DAAwB,CAAC,4EAAmB,GAAG;AAClO,oCAAoC,+DAAwB,EAAE,wFAAwF,6CAA6C,aAAa,kEAA2B,oNAAoN;AAC/b,QAAQ,4DAAqB;AAC7B,QAAQ,wDAAiB;AACzB,QAAQ,0DAAmB;AAC3B,KAAK;AACL,QAAQ,uDAAgB;AACxB,QAAQ,wDAAiB;AACzB,KAAK,EAAE,eAAe,uDAAc,8CAA8C,wBAAwB,sBAAsB,sBAAsB,+BAA+B,6BAA6B,SAAS,iEAAiE,6BAA6B,sBAAsB,mDAAmD,SAAS,6CAA6C,6BAA6B,+BAA+B,SAAS,4BAA4B;AACzhB;AACA;AACA,KAAK,OAAO,wDAAU,EAAE;AACxB,KAAK,OAAO,4EAAY;AACxB;AACA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","file":"video-playlist-video-playlist-module-es2015.js","sourcesContent":["import { Injectable, ɵɵdefineInjectable, EventEmitter, Directive, ElementRef, Output, ChangeDetectorRef, Input, Component, ViewEncapsulation, HostBinding, ContentChildren, NgModule } from '@angular/core';\r\nimport { CommonModule } from '@angular/common';\r\nimport { Subject, fromEvent, Observable, combineLatest, timer } from 'rxjs';\r\nimport { map } from 'rxjs/operators';\r\n\r\n/**\r\n * @fileoverview added by tsickle\r\n * Generated from: lib/services/states/vg-states.service.ts\r\n * @suppress {checkTypes,constantProperty,extraRequire,missingOverride,missingRequire,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\r\n */\r\nimport * as ɵngcc0 from '@angular/core';\r\n\r\nconst _c0 = [\"*\"];\r\nclass VgStates {\r\n}\r\nVgStates.ɵfac = function VgStates_Factory(t) { return new (t || VgStates)(); };\r\nVgStates.VG_ENDED = 'ended';\r\nVgStates.VG_PAUSED = 'paused';\r\nVgStates.VG_PLAYING = 'playing';\r\nVgStates.VG_LOADING = 'waiting';\r\n/** @nocollapse */ VgStates.ɵprov = ɵɵdefineInjectable({ factory: function VgStates_Factory() { return new VgStates(); }, token: VgStates, providedIn: \"root\" });\r\n/*@__PURE__*/ (function () { ɵngcc0.ɵsetClassMetadata(VgStates, [{\r\n        type: Injectable,\r\n        args: [{\r\n                providedIn: 'root'\r\n            }]\r\n    }], null, null); })();\r\nif (false) {\r\n    /** @type {?} */\r\n    VgStates.VG_ENDED;\r\n    /** @type {?} */\r\n    VgStates.VG_PAUSED;\r\n    /** @type {?} */\r\n    VgStates.VG_PLAYING;\r\n    /** @type {?} */\r\n    VgStates.VG_LOADING;\r\n}\r\n\r\n/**\r\n * @fileoverview added by tsickle\r\n * Generated from: lib/services/vg-api/vg-api.service.ts\r\n * @suppress {checkTypes,constantProperty,extraRequire,missingOverride,missingRequire,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\r\n */\r\nclass VgApiService {\r\n    constructor() {\r\n        this.medias = {}; // TODO: refactor to Set<IPlayable>\r\n        this.playerReadyEvent = new EventEmitter(true);\r\n        this.isPlayerReady = false;\r\n    }\r\n    /**\r\n     * @param {?} fsAPI\r\n     * @return {?}\r\n     */\r\n    onPlayerReady(fsAPI) {\r\n        this.fsAPI = fsAPI;\r\n        this.isPlayerReady = true;\r\n        this.playerReadyEvent.emit(this);\r\n    }\r\n    /**\r\n     * @return {?}\r\n     */\r\n    getDefaultMedia() {\r\n        for (const item in this.medias) {\r\n            if (this.medias[item]) {\r\n                return this.medias[item];\r\n            }\r\n        }\r\n    }\r\n    /**\r\n     * @return {?}\r\n     */\r\n    getMasterMedia() {\r\n        /** @type {?} */\r\n        let master;\r\n        for (const id in this.medias) {\r\n            if (this.medias[id].vgMaster === 'true' ||\r\n                this.medias[id].vgMaster === true) {\r\n                master = this.medias[id];\r\n                break;\r\n            }\r\n        }\r\n        return master || this.getDefaultMedia();\r\n    }\r\n    /**\r\n     * @return {?}\r\n     */\r\n    isMasterDefined() {\r\n        /** @type {?} */\r\n        let result = false;\r\n        for (const id in this.medias) {\r\n            if (this.medias[id].vgMaster === 'true' ||\r\n                this.medias[id].vgMaster === true) {\r\n                result = true;\r\n                break;\r\n            }\r\n        }\r\n        return result;\r\n    }\r\n    /**\r\n     * @param {?=} id\r\n     * @return {?}\r\n     */\r\n    getMediaById(id = null) {\r\n        /** @type {?} */\r\n        let media = this.medias[id];\r\n        if (!id || id === '*') {\r\n            media = this;\r\n        }\r\n        return media;\r\n    }\r\n    /**\r\n     * @return {?}\r\n     */\r\n    play() {\r\n        for (const id in this.medias) {\r\n            if (this.medias[id]) {\r\n                this.medias[id].play();\r\n            }\r\n        }\r\n    }\r\n    /**\r\n     * @return {?}\r\n     */\r\n    pause() {\r\n        for (const id in this.medias) {\r\n            if (this.medias[id]) {\r\n                this.medias[id].pause();\r\n            }\r\n        }\r\n    }\r\n    /**\r\n     * @return {?}\r\n     */\r\n    get duration() {\r\n        return this.$$getAllProperties('duration');\r\n    }\r\n    /**\r\n     * @param {?} seconds\r\n     * @return {?}\r\n     */\r\n    set currentTime(seconds) {\r\n        this.$$setAllProperties('currentTime', seconds);\r\n    }\r\n    /**\r\n     * @return {?}\r\n     */\r\n    get currentTime() {\r\n        return this.$$getAllProperties('currentTime');\r\n    }\r\n    /**\r\n     * @param {?} state\r\n     * @return {?}\r\n     */\r\n    set state(state) {\r\n        this.$$setAllProperties('state', state);\r\n    }\r\n    /**\r\n     * @return {?}\r\n     */\r\n    get state() {\r\n        return this.$$getAllProperties('state');\r\n    }\r\n    /**\r\n     * @param {?} volume\r\n     * @return {?}\r\n     */\r\n    set volume(volume) {\r\n        this.$$setAllProperties('volume', volume);\r\n    }\r\n    /**\r\n     * @return {?}\r\n     */\r\n    get volume() {\r\n        return this.$$getAllProperties('volume');\r\n    }\r\n    /**\r\n     * @param {?} rate\r\n     * @return {?}\r\n     */\r\n    set playbackRate(rate) {\r\n        this.$$setAllProperties('playbackRate', rate);\r\n    }\r\n    /**\r\n     * @return {?}\r\n     */\r\n    get playbackRate() {\r\n        return this.$$getAllProperties('playbackRate');\r\n    }\r\n    /**\r\n     * @return {?}\r\n     */\r\n    get canPlay() {\r\n        return this.$$getAllProperties('canPlay');\r\n    }\r\n    /**\r\n     * @return {?}\r\n     */\r\n    get canPlayThrough() {\r\n        return this.$$getAllProperties('canPlayThrough');\r\n    }\r\n    /**\r\n     * @return {?}\r\n     */\r\n    get isMetadataLoaded() {\r\n        return this.$$getAllProperties('isMetadataLoaded');\r\n    }\r\n    /**\r\n     * @return {?}\r\n     */\r\n    get isWaiting() {\r\n        return this.$$getAllProperties('isWaiting');\r\n    }\r\n    /**\r\n     * @return {?}\r\n     */\r\n    get isCompleted() {\r\n        return this.$$getAllProperties('isCompleted');\r\n    }\r\n    /**\r\n     * @return {?}\r\n     */\r\n    get isLive() {\r\n        return this.$$getAllProperties('isLive');\r\n    }\r\n    /**\r\n     * @return {?}\r\n     */\r\n    get isMaster() {\r\n        return this.$$getAllProperties('isMaster');\r\n    }\r\n    /**\r\n     * @return {?}\r\n     */\r\n    get time() {\r\n        return this.$$getAllProperties('time');\r\n    }\r\n    /**\r\n     * @return {?}\r\n     */\r\n    get buffer() {\r\n        return this.$$getAllProperties('buffer');\r\n    }\r\n    /**\r\n     * @return {?}\r\n     */\r\n    get buffered() {\r\n        return this.$$getAllProperties('buffered');\r\n    }\r\n    /**\r\n     * @return {?}\r\n     */\r\n    get subscriptions() {\r\n        return this.$$getAllProperties('subscriptions');\r\n    }\r\n    /**\r\n     * @return {?}\r\n     */\r\n    get textTracks() {\r\n        return this.$$getAllProperties('textTracks');\r\n    }\r\n    /**\r\n     * @param {?} value\r\n     * @param {?=} byPercent\r\n     * @return {?}\r\n     */\r\n    seekTime(value, byPercent = false) {\r\n        for (const id in this.medias) {\r\n            if (this.medias[id]) {\r\n                this.$$seek(this.medias[id], value, byPercent);\r\n            }\r\n        }\r\n    }\r\n    /**\r\n     * @param {?} media\r\n     * @param {?} value\r\n     * @param {?=} byPercent\r\n     * @return {?}\r\n     */\r\n    $$seek(media, value, byPercent = false) {\r\n        /** @type {?} */\r\n        let second;\r\n        /** @type {?} */\r\n        let duration = media.duration;\r\n        if (byPercent) {\r\n            if (this.isMasterDefined()) {\r\n                duration = this.getMasterMedia().duration;\r\n            }\r\n            second = (value * duration) / 100;\r\n        }\r\n        else {\r\n            second = value;\r\n        }\r\n        media.currentTime = second;\r\n    }\r\n    /**\r\n     * @param {?} type\r\n     * @param {?=} label\r\n     * @param {?=} language\r\n     * @return {?}\r\n     */\r\n    addTextTrack(type, label, language) {\r\n        for (const id in this.medias) {\r\n            if (this.medias[id]) {\r\n                this.$$addTextTrack(this.medias[id], type, label, language);\r\n            }\r\n        }\r\n    }\r\n    /**\r\n     * @param {?} media\r\n     * @param {?} type\r\n     * @param {?=} label\r\n     * @param {?=} language\r\n     * @return {?}\r\n     */\r\n    $$addTextTrack(media, type, label, language) {\r\n        media.addTextTrack(type, label, language);\r\n    }\r\n    /**\r\n     * @param {?} property\r\n     * @return {?}\r\n     */\r\n    $$getAllProperties(property) {\r\n        /** @type {?} */\r\n        const medias = {};\r\n        /** @type {?} */\r\n        let result;\r\n        for (const id in this.medias) {\r\n            if (this.medias[id]) {\r\n                medias[id] = this.medias[id];\r\n            }\r\n        }\r\n        /** @type {?} */\r\n        const nMedias = Object.keys(medias).length;\r\n        switch (nMedias) {\r\n            case 0:\r\n                // Return default values until vgMedia is initialized\r\n                switch (property) {\r\n                    case 'state':\r\n                        result = VgStates.VG_PAUSED;\r\n                        break;\r\n                    case 'playbackRate':\r\n                    case 'volume':\r\n                        result = 1;\r\n                        break;\r\n                    case 'time':\r\n                        result = { current: 0, total: 0, left: 0 };\r\n                        break;\r\n                }\r\n                break;\r\n            case 1:\r\n                // If there's only one media element then return the plain value\r\n                /** @type {?} */\r\n                const firstMediaId = Object.keys(medias)[0];\r\n                result = medias[firstMediaId][property];\r\n                break;\r\n            default:\r\n                // TODO: return 'master' value\r\n                /** @type {?} */\r\n                const master = this.getMasterMedia();\r\n                result = medias[master.id][property];\r\n        }\r\n        return result;\r\n    }\r\n    /**\r\n     * @param {?} property\r\n     * @param {?} value\r\n     * @return {?}\r\n     */\r\n    $$setAllProperties(property, value) {\r\n        for (const id in this.medias) {\r\n            if (this.medias[id]) {\r\n                this.medias[id][property] = value;\r\n            }\r\n        }\r\n    }\r\n    /**\r\n     * @param {?} elem\r\n     * @return {?}\r\n     */\r\n    registerElement(elem) {\r\n        this.videogularElement = elem;\r\n    }\r\n    /**\r\n     * @param {?} media\r\n     * @return {?}\r\n     */\r\n    registerMedia(media) {\r\n        this.medias[media.id] = media;\r\n    }\r\n    /**\r\n     * @param {?} media\r\n     * @return {?}\r\n     */\r\n    unregisterMedia(media) {\r\n        delete this.medias[media.id];\r\n    }\r\n}\r\nVgApiService.ɵfac = function VgApiService_Factory(t) { return new (t || VgApiService)(); };\r\n/** @nocollapse */\r\nVgApiService.ctorParameters = () => [];\r\n/** @nocollapse */ VgApiService.ɵprov = ɵɵdefineInjectable({ factory: function VgApiService_Factory() { return new VgApiService(); }, token: VgApiService, providedIn: \"root\" });\r\n/*@__PURE__*/ (function () { ɵngcc0.ɵsetClassMetadata(VgApiService, [{\r\n        type: Injectable,\r\n        args: [{\r\n                providedIn: 'root'\r\n            }]\r\n    }], function () { return []; }, null); })();\r\nif (false) {\r\n    /** @type {?} */\r\n    VgApiService.prototype.medias;\r\n    /** @type {?} */\r\n    VgApiService.prototype.videogularElement;\r\n    /** @type {?} */\r\n    VgApiService.prototype.playerReadyEvent;\r\n    /** @type {?} */\r\n    VgApiService.prototype.isPlayerReady;\r\n    /** @type {?} */\r\n    VgApiService.prototype.fsAPI;\r\n}\r\n\r\n/**\r\n * @fileoverview added by tsickle\r\n * Generated from: lib/services/vg-controls-hidden/vg-controls-hidden.service.ts\r\n * @suppress {checkTypes,constantProperty,extraRequire,missingOverride,missingRequire,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\r\n */\r\nclass VgControlsHiddenService {\r\n    constructor() {\r\n        this.isHiddenSubject = new Subject();\r\n        this.isHidden = this.isHiddenSubject.asObservable();\r\n    }\r\n    /**\r\n     * @param {?} hidden\r\n     * @return {?}\r\n     */\r\n    state(hidden) {\r\n        this.isHiddenSubject.next(hidden);\r\n    }\r\n}\r\nVgControlsHiddenService.ɵfac = function VgControlsHiddenService_Factory(t) { return new (t || VgControlsHiddenService)(); };\r\n/** @nocollapse */\r\nVgControlsHiddenService.ctorParameters = () => [];\r\n/** @nocollapse */ VgControlsHiddenService.ɵprov = ɵɵdefineInjectable({ factory: function VgControlsHiddenService_Factory() { return new VgControlsHiddenService(); }, token: VgControlsHiddenService, providedIn: \"root\" });\r\n/*@__PURE__*/ (function () { ɵngcc0.ɵsetClassMetadata(VgControlsHiddenService, [{\r\n        type: Injectable,\r\n        args: [{\r\n                providedIn: 'root'\r\n            }]\r\n    }], function () { return []; }, null); })();\r\nif (false) {\r\n    /** @type {?} */\r\n    VgControlsHiddenService.prototype.isHidden;\r\n    /**\r\n     * @type {?}\r\n     * @private\r\n     */\r\n    VgControlsHiddenService.prototype.isHiddenSubject;\r\n}\r\n\r\n/**\r\n * @fileoverview added by tsickle\r\n * Generated from: lib/services/vg-utils/vg-utils.service.ts\r\n * @suppress {checkTypes,constantProperty,extraRequire,missingOverride,missingRequire,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\r\n */\r\nclass VgUtilsService {\r\n    /**\r\n     * Inspired by Paul Irish\r\n     * https://gist.github.com/paulirish/211209\r\n     * @return {?}\r\n     */\r\n    static getZIndex() {\r\n        /** @type {?} */\r\n        let zIndex = 1;\r\n        /** @type {?} */\r\n        let elementZIndex;\r\n        /** @type {?} */\r\n        const tags = document.getElementsByTagName('*');\r\n        for (let i = 0, l = tags.length; i < l; i++) {\r\n            elementZIndex = parseInt(window.getComputedStyle(tags[i])['z-index'], 10);\r\n            if (elementZIndex > zIndex) {\r\n                zIndex = elementZIndex + 1;\r\n            }\r\n        }\r\n        return zIndex;\r\n    }\r\n    // Very simple mobile detection, not 100% reliable\r\n    /**\r\n     * @return {?}\r\n     */\r\n    static isMobileDevice() {\r\n        // return (\r\n        //   typeof window.screen.orientation !== 'undefined' ||\r\n        //   navigator.userAgent.indexOf('IEMobile') !== -1\r\n        // );\r\n        // window.orientation is deprecated and we should use window.screen.orientation\r\n        return (typeof window.orientation !== 'undefined' ||\r\n            navigator.userAgent.indexOf('IEMobile') !== -1);\r\n    }\r\n    /**\r\n     * @return {?}\r\n     */\r\n    static isiOSDevice() {\r\n        return (navigator.userAgent.match(/ip(hone|ad|od)/i) &&\r\n            !navigator.userAgent.match(/(iemobile)[\\/\\s]?([\\w\\.]*)/i));\r\n    }\r\n    /**\r\n     * @return {?}\r\n     */\r\n    static isCordova() {\r\n        return (document.URL.indexOf('http://') === -1 &&\r\n            document.URL.indexOf('https://') === -1);\r\n    }\r\n}\r\nVgUtilsService.ɵfac = function VgUtilsService_Factory(t) { return new (t || VgUtilsService)(); };\r\n/** @nocollapse */ VgUtilsService.ɵprov = ɵɵdefineInjectable({ factory: function VgUtilsService_Factory() { return new VgUtilsService(); }, token: VgUtilsService, providedIn: \"root\" });\r\n/*@__PURE__*/ (function () { ɵngcc0.ɵsetClassMetadata(VgUtilsService, [{\r\n        type: Injectable,\r\n        args: [{\r\n                providedIn: 'root'\r\n            }]\r\n    }], null, null); })();\r\n\r\n/**\r\n * @fileoverview added by tsickle\r\n * Generated from: lib/services/vg-fullscreen-api/vg-fullscreen-api.service.ts\r\n * @suppress {checkTypes,constantProperty,extraRequire,missingOverride,missingRequire,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\r\n */\r\nclass VgFullscreenApiService {\r\n    constructor() {\r\n        this.nativeFullscreen = true;\r\n        this.isFullscreen = false;\r\n        this.onChangeFullscreen = new EventEmitter();\r\n    }\r\n    /**\r\n     * @param {?} elem\r\n     * @param {?} medias\r\n     * @return {?}\r\n     */\r\n    init(elem, medias) {\r\n        this.videogularElement = elem;\r\n        this.medias = medias;\r\n        /** @type {?} */\r\n        const APIs = {\r\n            w3: {\r\n                enabled: 'fullscreenEnabled',\r\n                element: 'fullscreenElement',\r\n                request: 'requestFullscreen',\r\n                exit: 'exitFullscreen',\r\n                onchange: 'fullscreenchange',\r\n                onerror: 'fullscreenerror',\r\n            },\r\n            newWebkit: {\r\n                enabled: 'webkitFullscreenEnabled',\r\n                element: 'webkitFullscreenElement',\r\n                request: 'webkitRequestFullscreen',\r\n                exit: 'webkitExitFullscreen',\r\n                onchange: 'webkitfullscreenchange',\r\n                onerror: 'webkitfullscreenerror',\r\n            },\r\n            oldWebkit: {\r\n                enabled: 'webkitIsFullScreen',\r\n                element: 'webkitCurrentFullScreenElement',\r\n                request: 'webkitRequestFullScreen',\r\n                exit: 'webkitCancelFullScreen',\r\n                onchange: 'webkitfullscreenchange',\r\n                onerror: 'webkitfullscreenerror',\r\n            },\r\n            moz: {\r\n                enabled: 'mozFullScreen',\r\n                element: 'mozFullScreenElement',\r\n                request: 'mozRequestFullScreen',\r\n                exit: 'mozCancelFullScreen',\r\n                onchange: 'mozfullscreenchange',\r\n                onerror: 'mozfullscreenerror',\r\n            },\r\n            ios: {\r\n                enabled: 'webkitFullscreenEnabled',\r\n                element: 'webkitFullscreenElement',\r\n                request: 'webkitEnterFullscreen',\r\n                exit: 'webkitExitFullscreen',\r\n                onchange: 'webkitendfullscreen',\r\n                // Hack for iOS: webkitfullscreenchange it's not firing\r\n                onerror: 'webkitfullscreenerror',\r\n            },\r\n            ms: {\r\n                enabled: 'msFullscreenEnabled',\r\n                element: 'msFullscreenElement',\r\n                request: 'msRequestFullscreen',\r\n                exit: 'msExitFullscreen',\r\n                onchange: 'MSFullscreenChange',\r\n                onerror: 'MSFullscreenError',\r\n            },\r\n        };\r\n        for (const browser in APIs) {\r\n            if (APIs[browser].enabled in document) {\r\n                this.polyfill = APIs[browser];\r\n                break;\r\n            }\r\n        }\r\n        if (VgUtilsService.isiOSDevice()) {\r\n            this.polyfill = APIs.ios;\r\n        }\r\n        this.isAvailable = this.polyfill != null;\r\n        if (this.polyfill == null) {\r\n            return;\r\n        }\r\n        /** @type {?} */\r\n        let fsElemDispatcher;\r\n        switch (this.polyfill.onchange) {\r\n            // Mozilla dispatches the fullscreen change event from document, not the element\r\n            // See: https://bugzilla.mozilla.org/show_bug.cgi?id=724816#c3\r\n            case 'mozfullscreenchange':\r\n                fsElemDispatcher = document;\r\n                break;\r\n            // iOS dispatches the fullscreen change event from video element\r\n            case 'webkitendfullscreen':\r\n                fsElemDispatcher = this.medias.toArray()[0].elem;\r\n                break;\r\n            // HTML5 implementation dispatches the fullscreen change event from the element\r\n            default:\r\n                fsElemDispatcher = elem;\r\n        }\r\n        this.fsChangeSubscription = fromEvent(fsElemDispatcher, this.polyfill.onchange).subscribe((/**\r\n         * @return {?}\r\n         */\r\n        () => {\r\n            this.onFullscreenChange();\r\n        }));\r\n    }\r\n    /**\r\n     * @return {?}\r\n     */\r\n    onFullscreenChange() {\r\n        this.isFullscreen = !!document[this.polyfill.element];\r\n        this.onChangeFullscreen.emit(this.isFullscreen);\r\n    }\r\n    /**\r\n     * @param {?=} element\r\n     * @return {?}\r\n     */\r\n    toggleFullscreen(element = null) {\r\n        if (this.isFullscreen) {\r\n            this.exit();\r\n        }\r\n        else {\r\n            this.request(element);\r\n        }\r\n    }\r\n    /**\r\n     * @param {?} elem\r\n     * @return {?}\r\n     */\r\n    request(elem) {\r\n        if (!elem) {\r\n            elem = this.videogularElement;\r\n        }\r\n        this.isFullscreen = true;\r\n        this.onChangeFullscreen.emit(true);\r\n        // Perform native full screen support\r\n        if (this.isAvailable && this.nativeFullscreen) {\r\n            // Fullscreen for mobile devices\r\n            if (VgUtilsService.isMobileDevice()) {\r\n                // We should make fullscreen the video object if it doesn't have native fullscreen support\r\n                // Fallback! We can't set vg-player on fullscreen, only video/audio objects\r\n                if ((!this.polyfill.enabled && elem === this.videogularElement) ||\r\n                    VgUtilsService.isiOSDevice()) {\r\n                    elem = this.medias.toArray()[0].elem;\r\n                }\r\n                this.enterElementInFullScreen(elem);\r\n            }\r\n            else {\r\n                this.enterElementInFullScreen(this.videogularElement);\r\n            }\r\n        }\r\n    }\r\n    /**\r\n     * @param {?} elem\r\n     * @return {?}\r\n     */\r\n    enterElementInFullScreen(elem) {\r\n        elem[this.polyfill.request]();\r\n    }\r\n    /**\r\n     * @return {?}\r\n     */\r\n    exit() {\r\n        this.isFullscreen = false;\r\n        this.onChangeFullscreen.emit(false);\r\n        // Exit from native fullscreen\r\n        if (this.isAvailable && this.nativeFullscreen) {\r\n            document[this.polyfill.exit]();\r\n        }\r\n    }\r\n}\r\nVgFullscreenApiService.ɵfac = function VgFullscreenApiService_Factory(t) { return new (t || VgFullscreenApiService)(); };\r\n/** @nocollapse */\r\nVgFullscreenApiService.ctorParameters = () => [];\r\n/** @nocollapse */ VgFullscreenApiService.ɵprov = ɵɵdefineInjectable({ factory: function VgFullscreenApiService_Factory() { return new VgFullscreenApiService(); }, token: VgFullscreenApiService, providedIn: \"root\" });\r\n/*@__PURE__*/ (function () { ɵngcc0.ɵsetClassMetadata(VgFullscreenApiService, [{\r\n        type: Injectable,\r\n        args: [{\r\n                providedIn: 'root'\r\n            }]\r\n    }], function () { return []; }, null); })();\r\nif (false) {\r\n    /** @type {?} */\r\n    VgFullscreenApiService.prototype.polyfill;\r\n    /** @type {?} */\r\n    VgFullscreenApiService.prototype.onchange;\r\n    /** @type {?} */\r\n    VgFullscreenApiService.prototype.onerror;\r\n    /** @type {?} */\r\n    VgFullscreenApiService.prototype.nativeFullscreen;\r\n    /** @type {?} */\r\n    VgFullscreenApiService.prototype.isFullscreen;\r\n    /** @type {?} */\r\n    VgFullscreenApiService.prototype.isAvailable;\r\n    /** @type {?} */\r\n    VgFullscreenApiService.prototype.videogularElement;\r\n    /** @type {?} */\r\n    VgFullscreenApiService.prototype.medias;\r\n    /** @type {?} */\r\n    VgFullscreenApiService.prototype.fsChangeSubscription;\r\n    /** @type {?} */\r\n    VgFullscreenApiService.prototype.onChangeFullscreen;\r\n}\r\n\r\n/**\r\n * @fileoverview added by tsickle\r\n * Generated from: lib/services/events/vg-events.service.ts\r\n * @suppress {checkTypes,constantProperty,extraRequire,missingOverride,missingRequire,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\r\n */\r\nclass VgEvents {\r\n}\r\nVgEvents.ɵfac = function VgEvents_Factory(t) { return new (t || VgEvents)(); };\r\nVgEvents.VG_ABORT = 'abort';\r\nVgEvents.VG_CAN_PLAY = 'canplay';\r\nVgEvents.VG_CAN_PLAY_THROUGH = 'canplaythrough';\r\nVgEvents.VG_DURATION_CHANGE = 'durationchange';\r\nVgEvents.VG_EMPTIED = 'emptied';\r\nVgEvents.VG_ENCRYPTED = 'encrypted';\r\nVgEvents.VG_ENDED = 'ended';\r\nVgEvents.VG_ERROR = 'error';\r\nVgEvents.VG_LOADED_DATA = 'loadeddata';\r\nVgEvents.VG_LOADED_METADATA = 'loadedmetadata';\r\nVgEvents.VG_LOAD_START = 'loadstart';\r\nVgEvents.VG_PAUSE = 'pause';\r\nVgEvents.VG_PLAY = 'play';\r\nVgEvents.VG_PLAYING = 'playing';\r\nVgEvents.VG_PROGRESS = 'progress';\r\nVgEvents.VG_RATE_CHANGE = 'ratechange';\r\nVgEvents.VG_SEEK = 'seek';\r\nVgEvents.VG_SEEKED = 'seeked';\r\nVgEvents.VG_SEEKING = 'seeking';\r\nVgEvents.VG_STALLED = 'stalled';\r\nVgEvents.VG_SUSPEND = 'suspend';\r\nVgEvents.VG_TIME_UPDATE = 'timeupdate';\r\nVgEvents.VG_VOLUME_CHANGE = 'volumechange';\r\nVgEvents.VG_WAITING = 'waiting';\r\nVgEvents.VG_LOAD = 'load';\r\nVgEvents.VG_ENTER = 'enter';\r\nVgEvents.VG_EXIT = 'exit';\r\nVgEvents.VG_START_ADS = 'startads';\r\nVgEvents.VG_END_ADS = 'endads';\r\n/** @nocollapse */ VgEvents.ɵprov = ɵɵdefineInjectable({ factory: function VgEvents_Factory() { return new VgEvents(); }, token: VgEvents, providedIn: \"root\" });\r\n/*@__PURE__*/ (function () { ɵngcc0.ɵsetClassMetadata(VgEvents, [{\r\n        type: Injectable,\r\n        args: [{\r\n                providedIn: 'root'\r\n            }]\r\n    }], null, null); })();\r\nif (false) {\r\n    /** @type {?} */\r\n    VgEvents.VG_ABORT;\r\n    /** @type {?} */\r\n    VgEvents.VG_CAN_PLAY;\r\n    /** @type {?} */\r\n    VgEvents.VG_CAN_PLAY_THROUGH;\r\n    /** @type {?} */\r\n    VgEvents.VG_DURATION_CHANGE;\r\n    /** @type {?} */\r\n    VgEvents.VG_EMPTIED;\r\n    /** @type {?} */\r\n    VgEvents.VG_ENCRYPTED;\r\n    /** @type {?} */\r\n    VgEvents.VG_ENDED;\r\n    /** @type {?} */\r\n    VgEvents.VG_ERROR;\r\n    /** @type {?} */\r\n    VgEvents.VG_LOADED_DATA;\r\n    /** @type {?} */\r\n    VgEvents.VG_LOADED_METADATA;\r\n    /** @type {?} */\r\n    VgEvents.VG_LOAD_START;\r\n    /** @type {?} */\r\n    VgEvents.VG_PAUSE;\r\n    /** @type {?} */\r\n    VgEvents.VG_PLAY;\r\n    /** @type {?} */\r\n    VgEvents.VG_PLAYING;\r\n    /** @type {?} */\r\n    VgEvents.VG_PROGRESS;\r\n    /** @type {?} */\r\n    VgEvents.VG_RATE_CHANGE;\r\n    /** @type {?} */\r\n    VgEvents.VG_SEEK;\r\n    /** @type {?} */\r\n    VgEvents.VG_SEEKED;\r\n    /** @type {?} */\r\n    VgEvents.VG_SEEKING;\r\n    /** @type {?} */\r\n    VgEvents.VG_STALLED;\r\n    /** @type {?} */\r\n    VgEvents.VG_SUSPEND;\r\n    /** @type {?} */\r\n    VgEvents.VG_TIME_UPDATE;\r\n    /** @type {?} */\r\n    VgEvents.VG_VOLUME_CHANGE;\r\n    /** @type {?} */\r\n    VgEvents.VG_WAITING;\r\n    /** @type {?} */\r\n    VgEvents.VG_LOAD;\r\n    /** @type {?} */\r\n    VgEvents.VG_ENTER;\r\n    /** @type {?} */\r\n    VgEvents.VG_EXIT;\r\n    /** @type {?} */\r\n    VgEvents.VG_START_ADS;\r\n    /** @type {?} */\r\n    VgEvents.VG_END_ADS;\r\n}\r\n\r\n/**\r\n * @fileoverview added by tsickle\r\n * Generated from: lib/directives/vg-cue-points/vg-cue-points.directive.ts\r\n * @suppress {checkTypes,constantProperty,extraRequire,missingOverride,missingRequire,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\r\n */\r\nclass VgCuePointsDirective {\r\n    /**\r\n     * @param {?} ref\r\n     */\r\n    constructor(ref) {\r\n        this.ref = ref;\r\n        this.onEnterCuePoint = new EventEmitter();\r\n        this.onUpdateCuePoint = new EventEmitter();\r\n        this.onExitCuePoint = new EventEmitter();\r\n        this.onCompleteCuePoint = new EventEmitter();\r\n        this.subscriptions = [];\r\n        this.cuesSubscriptions = [];\r\n        this.totalCues = 0;\r\n    }\r\n    /**\r\n     * @return {?}\r\n     */\r\n    ngOnInit() {\r\n        this.onLoad$ = fromEvent(this.ref.nativeElement, VgEvents.VG_LOAD);\r\n        this.subscriptions.push(this.onLoad$.subscribe(this.onLoad.bind(this)));\r\n    }\r\n    /**\r\n     * @param {?} event\r\n     * @return {?}\r\n     */\r\n    onLoad(event) {\r\n        /** @type {?} */\r\n        const cues = event.target.track.cues;\r\n        this.ref.nativeElement.cues = cues;\r\n        this.updateCuePoints(cues);\r\n    }\r\n    /**\r\n     * @param {?} cues\r\n     * @return {?}\r\n     */\r\n    updateCuePoints(cues) {\r\n        this.cuesSubscriptions.forEach((/**\r\n         * @param {?} s\r\n         * @return {?}\r\n         */\r\n        (s) => s.unsubscribe()));\r\n        for (let i = 0, l = cues.length; i < l; i++) {\r\n            this.onEnter$ = fromEvent(cues[i], VgEvents.VG_ENTER);\r\n            this.cuesSubscriptions.push(this.onEnter$.subscribe(this.onEnter.bind(this)));\r\n            this.onExit$ = fromEvent(cues[i], VgEvents.VG_EXIT);\r\n            this.cuesSubscriptions.push(this.onExit$.subscribe(this.onExit.bind(this)));\r\n        }\r\n    }\r\n    /**\r\n     * @param {?} event\r\n     * @return {?}\r\n     */\r\n    onEnter(event) {\r\n        this.onEnterCuePoint.emit(event.target);\r\n    }\r\n    /**\r\n     * @param {?} event\r\n     * @return {?}\r\n     */\r\n    onExit(event) {\r\n        this.onExitCuePoint.emit(event.target);\r\n    }\r\n    /**\r\n     * @return {?}\r\n     */\r\n    ngDoCheck() {\r\n        if (this.ref.nativeElement.track && this.ref.nativeElement.track.cues) {\r\n            /** @type {?} */\r\n            const changes = this.totalCues !== this.ref.nativeElement.track.cues.length;\r\n            if (changes) {\r\n                this.totalCues = this.ref.nativeElement.track.cues.length;\r\n                this.ref.nativeElement.cues = this.ref.nativeElement.track.cues;\r\n                this.updateCuePoints(this.ref.nativeElement.track.cues);\r\n            }\r\n        }\r\n    }\r\n    /**\r\n     * @return {?}\r\n     */\r\n    ngOnDestroy() {\r\n        this.subscriptions.forEach((/**\r\n         * @param {?} s\r\n         * @return {?}\r\n         */\r\n        (s) => s.unsubscribe()));\r\n    }\r\n}\r\nVgCuePointsDirective.ɵfac = function VgCuePointsDirective_Factory(t) { return new (t || VgCuePointsDirective)(ɵngcc0.ɵɵdirectiveInject(ɵngcc0.ElementRef)); };\r\nVgCuePointsDirective.ɵdir = ɵngcc0.ɵɵdefineDirective({ type: VgCuePointsDirective, selectors: [[\"\", \"vgCuePoints\", \"\"]], outputs: { onEnterCuePoint: \"onEnterCuePoint\", onUpdateCuePoint: \"onUpdateCuePoint\", onExitCuePoint: \"onExitCuePoint\", onCompleteCuePoint: \"onCompleteCuePoint\" } });\r\n/** @nocollapse */\r\nVgCuePointsDirective.ctorParameters = () => [\r\n    { type: ElementRef }\r\n];\r\nVgCuePointsDirective.propDecorators = {\r\n    onEnterCuePoint: [{ type: Output }],\r\n    onUpdateCuePoint: [{ type: Output }],\r\n    onExitCuePoint: [{ type: Output }],\r\n    onCompleteCuePoint: [{ type: Output }]\r\n};\r\n/*@__PURE__*/ (function () { ɵngcc0.ɵsetClassMetadata(VgCuePointsDirective, [{\r\n        type: Directive,\r\n        args: [{\r\n                selector: '[vgCuePoints]'\r\n            }]\r\n    }], function () { return [{ type: ɵngcc0.ElementRef }]; }, { onEnterCuePoint: [{\r\n            type: Output\r\n        }], onUpdateCuePoint: [{\r\n            type: Output\r\n        }], onExitCuePoint: [{\r\n            type: Output\r\n        }], onCompleteCuePoint: [{\r\n            type: Output\r\n        }] }); })();\r\nif (false) {\r\n    /** @type {?} */\r\n    VgCuePointsDirective.prototype.onEnterCuePoint;\r\n    /** @type {?} */\r\n    VgCuePointsDirective.prototype.onUpdateCuePoint;\r\n    /** @type {?} */\r\n    VgCuePointsDirective.prototype.onExitCuePoint;\r\n    /** @type {?} */\r\n    VgCuePointsDirective.prototype.onCompleteCuePoint;\r\n    /** @type {?} */\r\n    VgCuePointsDirective.prototype.subscriptions;\r\n    /** @type {?} */\r\n    VgCuePointsDirective.prototype.cuesSubscriptions;\r\n    /** @type {?} */\r\n    VgCuePointsDirective.prototype.onLoad$;\r\n    /** @type {?} */\r\n    VgCuePointsDirective.prototype.onEnter$;\r\n    /** @type {?} */\r\n    VgCuePointsDirective.prototype.onExit$;\r\n    /** @type {?} */\r\n    VgCuePointsDirective.prototype.totalCues;\r\n    /** @type {?} */\r\n    VgCuePointsDirective.prototype.ref;\r\n}\r\n\r\n/**\r\n * @fileoverview added by tsickle\r\n * Generated from: lib/directives/vg-media/vg-media.directive.ts\r\n * @suppress {checkTypes,constantProperty,extraRequire,missingOverride,missingRequire,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\r\n */\r\nclass VgMediaDirective {\r\n    /**\r\n     * @param {?} api\r\n     * @param {?} ref\r\n     */\r\n    constructor(api, ref) {\r\n        this.api = api;\r\n        this.ref = ref;\r\n        this.state = VgStates.VG_PAUSED;\r\n        this.time = { current: 0, total: 0, left: 0 };\r\n        this.buffer = { end: 0 };\r\n        this.canPlay = false;\r\n        this.canPlayThrough = false;\r\n        this.isMetadataLoaded = false;\r\n        this.isWaiting = false;\r\n        this.isCompleted = false;\r\n        this.isLive = false;\r\n        this.isBufferDetected = false;\r\n        this.checkInterval = 200;\r\n        this.currentPlayPos = 0;\r\n        this.lastPlayPos = 0;\r\n        this.playAtferSync = false;\r\n        this.bufferDetected = new Subject();\r\n    }\r\n    /**\r\n     * @return {?}\r\n     */\r\n    ngOnInit() {\r\n        if (this.vgMedia.nodeName) {\r\n            // It's a native element\r\n            this.elem = this.vgMedia;\r\n        }\r\n        else {\r\n            // It's an Angular Class\r\n            this.elem = this.vgMedia.elem;\r\n        }\r\n        // Just in case we're creating this vgMedia dynamically register again into API\r\n        this.api.registerMedia(this);\r\n        this.subscriptions = {\r\n            // Native events\r\n            abort: fromEvent((/** @type {?} */ (this.elem)), VgEvents.VG_ABORT),\r\n            canPlay: fromEvent((/** @type {?} */ (this.elem)), VgEvents.VG_CAN_PLAY),\r\n            canPlayThrough: fromEvent((/** @type {?} */ (this.elem)), VgEvents.VG_CAN_PLAY_THROUGH),\r\n            durationChange: fromEvent((/** @type {?} */ (this.elem)), VgEvents.VG_DURATION_CHANGE),\r\n            emptied: fromEvent((/** @type {?} */ (this.elem)), VgEvents.VG_EMPTIED),\r\n            encrypted: fromEvent((/** @type {?} */ (this.elem)), VgEvents.VG_ENCRYPTED),\r\n            ended: fromEvent((/** @type {?} */ (this.elem)), VgEvents.VG_ENDED),\r\n            error: fromEvent((/** @type {?} */ (this.elem)), VgEvents.VG_ERROR),\r\n            loadedData: fromEvent((/** @type {?} */ (this.elem)), VgEvents.VG_LOADED_DATA),\r\n            loadedMetadata: fromEvent((/** @type {?} */ (this.elem)), VgEvents.VG_LOADED_METADATA),\r\n            loadStart: fromEvent((/** @type {?} */ (this.elem)), VgEvents.VG_LOAD_START),\r\n            pause: fromEvent((/** @type {?} */ (this.elem)), VgEvents.VG_PAUSE),\r\n            play: fromEvent((/** @type {?} */ (this.elem)), VgEvents.VG_PLAY),\r\n            playing: fromEvent((/** @type {?} */ (this.elem)), VgEvents.VG_PLAYING),\r\n            progress: fromEvent((/** @type {?} */ (this.elem)), VgEvents.VG_PROGRESS),\r\n            rateChange: fromEvent((/** @type {?} */ (this.elem)), VgEvents.VG_RATE_CHANGE),\r\n            seeked: fromEvent((/** @type {?} */ (this.elem)), VgEvents.VG_SEEKED),\r\n            seeking: fromEvent((/** @type {?} */ (this.elem)), VgEvents.VG_SEEKING),\r\n            stalled: fromEvent((/** @type {?} */ (this.elem)), VgEvents.VG_STALLED),\r\n            suspend: fromEvent((/** @type {?} */ (this.elem)), VgEvents.VG_SUSPEND),\r\n            timeUpdate: fromEvent((/** @type {?} */ (this.elem)), VgEvents.VG_TIME_UPDATE),\r\n            volumeChange: fromEvent((/** @type {?} */ (this.elem)), VgEvents.VG_VOLUME_CHANGE),\r\n            waiting: fromEvent((/** @type {?} */ (this.elem)), VgEvents.VG_WAITING),\r\n            // Advertisement only events\r\n            startAds: fromEvent((/** @type {?} */ (window)), VgEvents.VG_START_ADS),\r\n            endAds: fromEvent((/** @type {?} */ (window)), VgEvents.VG_END_ADS),\r\n            // See changes on <source> child elements to reload the video file\r\n            mutation: new Observable((/**\r\n             * @param {?} observer\r\n             * @return {?}\r\n             */\r\n            (observer) => {\r\n                /** @type {?} */\r\n                const domObs = new MutationObserver((/**\r\n                 * @param {?} mutations\r\n                 * @return {?}\r\n                 */\r\n                (mutations) => {\r\n                    observer.next(mutations);\r\n                }));\r\n                domObs.observe((/** @type {?} */ (this.elem)), { childList: true, attributes: true });\r\n                return (/**\r\n                 * @return {?}\r\n                 */\r\n                () => {\r\n                    domObs.disconnect();\r\n                });\r\n            })),\r\n            // Custom buffering detection\r\n            bufferDetected: this.bufferDetected,\r\n        };\r\n        this.mutationObs = this.subscriptions.mutation.subscribe(this.onMutation.bind(this));\r\n        this.canPlayObs = this.subscriptions.canPlay.subscribe(this.onCanPlay.bind(this));\r\n        this.canPlayThroughObs = this.subscriptions.canPlayThrough.subscribe(this.onCanPlayThrough.bind(this));\r\n        this.loadedMetadataObs = this.subscriptions.loadedMetadata.subscribe(this.onLoadMetadata.bind(this));\r\n        this.waitingObs = this.subscriptions.waiting.subscribe(this.onWait.bind(this));\r\n        this.progressObs = this.subscriptions.progress.subscribe(this.onProgress.bind(this));\r\n        this.endedObs = this.subscriptions.ended.subscribe(this.onComplete.bind(this));\r\n        this.playingObs = this.subscriptions.playing.subscribe(this.onStartPlaying.bind(this));\r\n        this.playObs = this.subscriptions.play.subscribe(this.onPlay.bind(this));\r\n        this.pauseObs = this.subscriptions.pause.subscribe(this.onPause.bind(this));\r\n        this.timeUpdateObs = this.subscriptions.timeUpdate.subscribe(this.onTimeUpdate.bind(this));\r\n        this.volumeChangeObs = this.subscriptions.volumeChange.subscribe(this.onVolumeChange.bind(this));\r\n        this.errorObs = this.subscriptions.error.subscribe(this.onError.bind(this));\r\n        if (this.vgMaster) {\r\n            this.api.playerReadyEvent.subscribe((/**\r\n             * @return {?}\r\n             */\r\n            () => {\r\n                this.prepareSync();\r\n            }));\r\n        }\r\n    }\r\n    /**\r\n     * @return {?}\r\n     */\r\n    prepareSync() {\r\n        /** @type {?} */\r\n        const canPlayAll = [];\r\n        for (const media in this.api.medias) {\r\n            if (this.api.medias[media]) {\r\n                canPlayAll.push(this.api.medias[media].subscriptions.canPlay);\r\n            }\r\n        }\r\n        this.canPlayAllSubscription = combineLatest(canPlayAll)\r\n            .pipe(map((/**\r\n         * @param {...?} params\r\n         * @return {?}\r\n         */\r\n        (...params) => {\r\n            /** @type {?} */\r\n            const checkReadyState = (/**\r\n             * @param {?} event\r\n             * @return {?}\r\n             */\r\n            (event) => {\r\n                return event.target.readyState === 4;\r\n            });\r\n            /** @type {?} */\r\n            const allReady = params.some(checkReadyState);\r\n            if (allReady && !this.syncSubscription) {\r\n                this.startSync();\r\n                this.syncSubscription.unsubscribe();\r\n            }\r\n        })))\r\n            .subscribe();\r\n    }\r\n    /**\r\n     * @return {?}\r\n     */\r\n    startSync() {\r\n        this.syncSubscription = timer(0, 1000).subscribe((/**\r\n         * @return {?}\r\n         */\r\n        () => {\r\n            for (const media in this.api.medias) {\r\n                if (this.api.medias[media] !== this) {\r\n                    /** @type {?} */\r\n                    const diff = this.api.medias[media].currentTime - this.currentTime;\r\n                    if (diff < -0.3 || diff > 0.3) {\r\n                        this.playAtferSync = this.state === VgStates.VG_PLAYING;\r\n                        this.pause();\r\n                        this.api.medias[media].pause();\r\n                        this.api.medias[media].currentTime = this.currentTime;\r\n                    }\r\n                    else {\r\n                        if (this.playAtferSync) {\r\n                            this.play();\r\n                            this.api.medias[media].play();\r\n                            this.playAtferSync = false;\r\n                        }\r\n                    }\r\n                }\r\n            }\r\n        }));\r\n    }\r\n    /**\r\n     * @param {?} mutations\r\n     * @return {?}\r\n     */\r\n    onMutation(mutations) {\r\n        // Detect changes only for source elements or src attribute\r\n        for (let i = 0, l = mutations.length; i < l; i++) {\r\n            /** @type {?} */\r\n            const mut = mutations[i];\r\n            if (mut.type === 'attributes' && mut.attributeName === 'src') {\r\n                // Only load src file if it's not a blob (for DASH / HLS sources)\r\n                if (((/** @type {?} */ (mut.target))).src &&\r\n                    ((/** @type {?} */ (mut.target))).src.length > 0 &&\r\n                    ((/** @type {?} */ (mut.target))).src.indexOf('blob:') < 0) {\r\n                    this.loadMedia();\r\n                    break;\r\n                }\r\n            }\r\n            else if (mut.type === 'childList' &&\r\n                mut.removedNodes.length &&\r\n                mut.removedNodes[0].nodeName.toLowerCase() === 'source') {\r\n                this.loadMedia();\r\n                break;\r\n            }\r\n        }\r\n    }\r\n    /**\r\n     * @return {?}\r\n     */\r\n    loadMedia() {\r\n        this.vgMedia.pause();\r\n        this.vgMedia.currentTime = 0;\r\n        // Start buffering until we can play the media file\r\n        this.stopBufferCheck();\r\n        this.isBufferDetected = true;\r\n        this.bufferDetected.next(this.isBufferDetected);\r\n        // TODO: This is ugly, we should find something cleaner. For some reason a TimerObservable doesn't works.\r\n        setTimeout((/**\r\n         * @return {?}\r\n         */\r\n        () => this.vgMedia.load()), 10);\r\n    }\r\n    /**\r\n     * @return {?}\r\n     */\r\n    play() {\r\n        // short-circuit if already playing\r\n        if (this.playPromise ||\r\n            (this.state !== VgStates.VG_PAUSED && this.state !== VgStates.VG_ENDED)) {\r\n            return;\r\n        }\r\n        this.playPromise = this.vgMedia.play();\r\n        // browser has async play promise\r\n        if (this.playPromise && this.playPromise.then && this.playPromise.catch) {\r\n            this.playPromise\r\n                .then((/**\r\n             * @return {?}\r\n             */\r\n            () => {\r\n                this.playPromise = null;\r\n            }))\r\n                .catch((/**\r\n             * @return {?}\r\n             */\r\n            () => {\r\n                this.playPromise = null;\r\n                // deliberately empty for the sake of eating console noise\r\n            }));\r\n        }\r\n        return this.playPromise;\r\n    }\r\n    /**\r\n     * @return {?}\r\n     */\r\n    pause() {\r\n        // browser has async play promise\r\n        if (this.playPromise) {\r\n            this.playPromise.then((/**\r\n             * @return {?}\r\n             */\r\n            () => {\r\n                this.vgMedia.pause();\r\n            }));\r\n        }\r\n        else {\r\n            this.vgMedia.pause();\r\n        }\r\n    }\r\n    /**\r\n     * @return {?}\r\n     */\r\n    get id() {\r\n        // We should return undefined if vgMedia still doesn't exist\r\n        /** @type {?} */\r\n        let result;\r\n        if (this.vgMedia) {\r\n            result = this.vgMedia.id;\r\n        }\r\n        return result;\r\n    }\r\n    /**\r\n     * @return {?}\r\n     */\r\n    get duration() {\r\n        return this.vgMedia.duration === Infinity\r\n            ? this.specifiedDuration\r\n            : this.vgMedia.duration;\r\n    }\r\n    /**\r\n     * @param {?} seconds\r\n     * @return {?}\r\n     */\r\n    set currentTime(seconds) {\r\n        this.vgMedia.currentTime = seconds;\r\n        // this.elem.dispatchEvent(new CustomEvent(VgEvents.VG_SEEK));\r\n    }\r\n    /**\r\n     * @return {?}\r\n     */\r\n    get currentTime() {\r\n        return this.vgMedia.currentTime;\r\n    }\r\n    /**\r\n     * @param {?} volume\r\n     * @return {?}\r\n     */\r\n    set volume(volume) {\r\n        this.vgMedia.volume = volume;\r\n    }\r\n    /**\r\n     * @return {?}\r\n     */\r\n    get volume() {\r\n        return this.vgMedia.volume;\r\n    }\r\n    /**\r\n     * @param {?} rate\r\n     * @return {?}\r\n     */\r\n    set playbackRate(rate) {\r\n        this.vgMedia.playbackRate = rate;\r\n    }\r\n    /**\r\n     * @return {?}\r\n     */\r\n    get playbackRate() {\r\n        return this.vgMedia.playbackRate;\r\n    }\r\n    /**\r\n     * @return {?}\r\n     */\r\n    get buffered() {\r\n        return this.vgMedia.buffered;\r\n    }\r\n    /**\r\n     * @return {?}\r\n     */\r\n    get textTracks() {\r\n        return this.vgMedia.textTracks;\r\n    }\r\n    // @ts-ignore\r\n    /**\r\n     * @param {?} event\r\n     * @return {?}\r\n     */\r\n    onCanPlay(event) {\r\n        this.isBufferDetected = false;\r\n        this.bufferDetected.next(this.isBufferDetected);\r\n        this.canPlay = true;\r\n        this.ref.detectChanges();\r\n    }\r\n    // @ts-ignore\r\n    /**\r\n     * @param {?} event\r\n     * @return {?}\r\n     */\r\n    onCanPlayThrough(event) {\r\n        this.isBufferDetected = false;\r\n        this.bufferDetected.next(this.isBufferDetected);\r\n        this.canPlayThrough = true;\r\n        this.ref.detectChanges();\r\n    }\r\n    // @ts-ignore\r\n    /**\r\n     * @param {?} event\r\n     * @return {?}\r\n     */\r\n    onLoadMetadata(event) {\r\n        this.isMetadataLoaded = true;\r\n        this.time = {\r\n            current: 0,\r\n            left: 0,\r\n            total: this.duration * 1000,\r\n        };\r\n        this.state = VgStates.VG_PAUSED;\r\n        // Live streaming check\r\n        /** @type {?} */\r\n        const t = Math.round(this.time.total);\r\n        this.isLive = t === Infinity;\r\n        this.ref.detectChanges();\r\n    }\r\n    // @ts-ignore\r\n    /**\r\n     * @param {?} event\r\n     * @return {?}\r\n     */\r\n    onWait(event) {\r\n        this.isWaiting = true;\r\n        this.ref.detectChanges();\r\n    }\r\n    // @ts-ignore\r\n    /**\r\n     * @param {?} event\r\n     * @return {?}\r\n     */\r\n    onComplete(event) {\r\n        this.isCompleted = true;\r\n        this.state = VgStates.VG_ENDED;\r\n        this.ref.detectChanges();\r\n    }\r\n    // @ts-ignore\r\n    /**\r\n     * @param {?} event\r\n     * @return {?}\r\n     */\r\n    onStartPlaying(event) {\r\n        this.state = VgStates.VG_PLAYING;\r\n        this.ref.detectChanges();\r\n    }\r\n    // @ts-ignore\r\n    /**\r\n     * @param {?} event\r\n     * @return {?}\r\n     */\r\n    onPlay(event) {\r\n        this.state = VgStates.VG_PLAYING;\r\n        if (this.vgMaster) {\r\n            if (!this.syncSubscription || this.syncSubscription.closed) {\r\n                this.startSync();\r\n            }\r\n        }\r\n        this.startBufferCheck();\r\n        this.ref.detectChanges();\r\n    }\r\n    // @ts-ignore\r\n    /**\r\n     * @param {?} event\r\n     * @return {?}\r\n     */\r\n    onPause(event) {\r\n        this.state = VgStates.VG_PAUSED;\r\n        if (this.vgMaster) {\r\n            if (!this.playAtferSync) {\r\n                this.syncSubscription.unsubscribe();\r\n            }\r\n        }\r\n        this.stopBufferCheck();\r\n        this.ref.detectChanges();\r\n    }\r\n    // @ts-ignore\r\n    /**\r\n     * @param {?} event\r\n     * @return {?}\r\n     */\r\n    onTimeUpdate(event) {\r\n        /** @type {?} */\r\n        const end = this.buffered.length - 1;\r\n        this.time = {\r\n            current: this.currentTime * 1000,\r\n            total: this.time.total,\r\n            left: (this.duration - this.currentTime) * 1000,\r\n        };\r\n        if (end >= 0) {\r\n            this.buffer = { end: this.buffered.end(end) * 1000 };\r\n        }\r\n        this.ref.detectChanges();\r\n    }\r\n    // @ts-ignore\r\n    /**\r\n     * @param {?} event\r\n     * @return {?}\r\n     */\r\n    onProgress(event) {\r\n        /** @type {?} */\r\n        const end = this.buffered.length - 1;\r\n        if (end >= 0) {\r\n            this.buffer = { end: this.buffered.end(end) * 1000 };\r\n        }\r\n        this.ref.detectChanges();\r\n    }\r\n    // @ts-ignore\r\n    /**\r\n     * @param {?} event\r\n     * @return {?}\r\n     */\r\n    onVolumeChange(event) {\r\n        // TODO: Save to localstorage the current volume\r\n        this.ref.detectChanges();\r\n    }\r\n    // @ts-ignore\r\n    /**\r\n     * @param {?} event\r\n     * @return {?}\r\n     */\r\n    onError(event) {\r\n        // TODO: Handle error messages\r\n        this.ref.detectChanges();\r\n    }\r\n    // http://stackoverflow.com/a/23828241/779529\r\n    /**\r\n     * @return {?}\r\n     */\r\n    bufferCheck() {\r\n        /** @type {?} */\r\n        const offset = 1 / this.checkInterval;\r\n        this.currentPlayPos = this.currentTime;\r\n        if (!this.isBufferDetected &&\r\n            this.currentPlayPos < this.lastPlayPos + offset) {\r\n            this.isBufferDetected = true;\r\n        }\r\n        if (this.isBufferDetected &&\r\n            this.currentPlayPos > this.lastPlayPos + offset) {\r\n            this.isBufferDetected = false;\r\n        }\r\n        // Prevent calls to bufferCheck after ngOnDestroy have been called\r\n        if (!this.bufferDetected.closed) {\r\n            this.bufferDetected.next(this.isBufferDetected);\r\n        }\r\n        this.lastPlayPos = this.currentPlayPos;\r\n    }\r\n    /**\r\n     * @return {?}\r\n     */\r\n    startBufferCheck() {\r\n        this.checkBufferSubscription = timer(0, this.checkInterval).subscribe((/**\r\n         * @return {?}\r\n         */\r\n        () => {\r\n            this.bufferCheck();\r\n        }));\r\n    }\r\n    /**\r\n     * @return {?}\r\n     */\r\n    stopBufferCheck() {\r\n        if (this.checkBufferSubscription) {\r\n            this.checkBufferSubscription.unsubscribe();\r\n        }\r\n        this.isBufferDetected = false;\r\n        this.bufferDetected.next(this.isBufferDetected);\r\n    }\r\n    /**\r\n     * @param {?} value\r\n     * @param {?=} byPercent\r\n     * @return {?}\r\n     */\r\n    seekTime(value, byPercent = false) {\r\n        /** @type {?} */\r\n        let second;\r\n        /** @type {?} */\r\n        const duration = this.duration;\r\n        if (byPercent) {\r\n            second = (value * duration) / 100;\r\n        }\r\n        else {\r\n            second = value;\r\n        }\r\n        this.currentTime = second;\r\n    }\r\n    /**\r\n     * @param {?} type\r\n     * @param {?=} label\r\n     * @param {?=} language\r\n     * @param {?=} mode\r\n     * @return {?}\r\n     */\r\n    addTextTrack(type, label, language, mode) {\r\n        /** @type {?} */\r\n        const newTrack = this.vgMedia.addTextTrack(type, label, language);\r\n        if (mode) {\r\n            newTrack.mode = mode;\r\n        }\r\n        return newTrack;\r\n    }\r\n    /**\r\n     * @return {?}\r\n     */\r\n    ngOnDestroy() {\r\n        this.vgMedia.src = '';\r\n        this.mutationObs.unsubscribe();\r\n        this.canPlayObs.unsubscribe();\r\n        this.canPlayThroughObs.unsubscribe();\r\n        this.loadedMetadataObs.unsubscribe();\r\n        this.waitingObs.unsubscribe();\r\n        this.progressObs.unsubscribe();\r\n        this.endedObs.unsubscribe();\r\n        this.playingObs.unsubscribe();\r\n        this.playObs.unsubscribe();\r\n        this.pauseObs.unsubscribe();\r\n        this.timeUpdateObs.unsubscribe();\r\n        this.volumeChangeObs.unsubscribe();\r\n        this.errorObs.unsubscribe();\r\n        if (this.checkBufferSubscription) {\r\n            this.checkBufferSubscription.unsubscribe();\r\n        }\r\n        if (this.syncSubscription) {\r\n            this.syncSubscription.unsubscribe();\r\n        }\r\n        this.bufferDetected.complete();\r\n        this.bufferDetected.unsubscribe();\r\n        this.api.unregisterMedia(this);\r\n    }\r\n}\r\nVgMediaDirective.ɵfac = function VgMediaDirective_Factory(t) { return new (t || VgMediaDirective)(ɵngcc0.ɵɵdirectiveInject(VgApiService), ɵngcc0.ɵɵdirectiveInject(ɵngcc0.ChangeDetectorRef)); };\r\nVgMediaDirective.ɵdir = ɵngcc0.ɵɵdefineDirective({ type: VgMediaDirective, selectors: [[\"\", \"vgMedia\", \"\"]], inputs: { vgMedia: \"vgMedia\", vgMaster: \"vgMaster\" } });\r\n/** @nocollapse */\r\nVgMediaDirective.ctorParameters = () => [\r\n    { type: VgApiService },\r\n    { type: ChangeDetectorRef }\r\n];\r\nVgMediaDirective.propDecorators = {\r\n    vgMedia: [{ type: Input }],\r\n    vgMaster: [{ type: Input }]\r\n};\r\n/*@__PURE__*/ (function () { ɵngcc0.ɵsetClassMetadata(VgMediaDirective, [{\r\n        type: Directive,\r\n        args: [{\r\n                selector: '[vgMedia]'\r\n            }]\r\n    }], function () { return [{ type: VgApiService }, { type: ɵngcc0.ChangeDetectorRef }]; }, { vgMedia: [{\r\n            type: Input\r\n        }], vgMaster: [{\r\n            type: Input\r\n        }] }); })();\r\nif (false) {\r\n    /** @type {?} */\r\n    VgMediaDirective.prototype.elem;\r\n    /** @type {?} */\r\n    VgMediaDirective.prototype.vgMedia;\r\n    /** @type {?} */\r\n    VgMediaDirective.prototype.vgMaster;\r\n    /** @type {?} */\r\n    VgMediaDirective.prototype.state;\r\n    /** @type {?} */\r\n    VgMediaDirective.prototype.time;\r\n    /** @type {?} */\r\n    VgMediaDirective.prototype.buffer;\r\n    /** @type {?} */\r\n    VgMediaDirective.prototype.track;\r\n    /** @type {?} */\r\n    VgMediaDirective.prototype.subscriptions;\r\n    /** @type {?} */\r\n    VgMediaDirective.prototype.canPlay;\r\n    /** @type {?} */\r\n    VgMediaDirective.prototype.canPlayThrough;\r\n    /** @type {?} */\r\n    VgMediaDirective.prototype.isMetadataLoaded;\r\n    /** @type {?} */\r\n    VgMediaDirective.prototype.isWaiting;\r\n    /** @type {?} */\r\n    VgMediaDirective.prototype.isCompleted;\r\n    /** @type {?} */\r\n    VgMediaDirective.prototype.isLive;\r\n    /** @type {?} */\r\n    VgMediaDirective.prototype.isBufferDetected;\r\n    /** @type {?} */\r\n    VgMediaDirective.prototype.checkInterval;\r\n    /** @type {?} */\r\n    VgMediaDirective.prototype.currentPlayPos;\r\n    /** @type {?} */\r\n    VgMediaDirective.prototype.lastPlayPos;\r\n    /** @type {?} */\r\n    VgMediaDirective.prototype.specifiedDuration;\r\n    /** @type {?} */\r\n    VgMediaDirective.prototype.checkBufferSubscription;\r\n    /** @type {?} */\r\n    VgMediaDirective.prototype.syncSubscription;\r\n    /** @type {?} */\r\n    VgMediaDirective.prototype.canPlayAllSubscription;\r\n    /** @type {?} */\r\n    VgMediaDirective.prototype.playAtferSync;\r\n    /** @type {?} */\r\n    VgMediaDirective.prototype.mutationObs;\r\n    /** @type {?} */\r\n    VgMediaDirective.prototype.canPlayObs;\r\n    /** @type {?} */\r\n    VgMediaDirective.prototype.canPlayThroughObs;\r\n    /** @type {?} */\r\n    VgMediaDirective.prototype.loadedMetadataObs;\r\n    /** @type {?} */\r\n    VgMediaDirective.prototype.waitingObs;\r\n    /** @type {?} */\r\n    VgMediaDirective.prototype.progressObs;\r\n    /** @type {?} */\r\n    VgMediaDirective.prototype.endedObs;\r\n    /** @type {?} */\r\n    VgMediaDirective.prototype.playingObs;\r\n    /** @type {?} */\r\n    VgMediaDirective.prototype.playObs;\r\n    /** @type {?} */\r\n    VgMediaDirective.prototype.pauseObs;\r\n    /** @type {?} */\r\n    VgMediaDirective.prototype.timeUpdateObs;\r\n    /** @type {?} */\r\n    VgMediaDirective.prototype.volumeChangeObs;\r\n    /** @type {?} */\r\n    VgMediaDirective.prototype.errorObs;\r\n    /** @type {?} */\r\n    VgMediaDirective.prototype.bufferDetected;\r\n    /** @type {?} */\r\n    VgMediaDirective.prototype.playPromise;\r\n    /**\r\n     * @type {?}\r\n     * @private\r\n     */\r\n    VgMediaDirective.prototype.api;\r\n    /**\r\n     * @type {?}\r\n     * @private\r\n     */\r\n    VgMediaDirective.prototype.ref;\r\n}\r\n\r\n/**\r\n * @fileoverview added by tsickle\r\n * Generated from: lib/components/vg-player/vg-player.component.ts\r\n * @suppress {checkTypes,constantProperty,extraRequire,missingOverride,missingRequire,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\r\n */\r\nclass VgPlayerComponent {\r\n    /**\r\n     * @param {?} ref\r\n     * @param {?} api\r\n     * @param {?} fsAPI\r\n     * @param {?} controlsHidden\r\n     */\r\n    constructor(ref, api, fsAPI, controlsHidden) {\r\n        this.api = api;\r\n        this.fsAPI = fsAPI;\r\n        this.controlsHidden = controlsHidden;\r\n        this.isFullscreen = false;\r\n        this.isNativeFullscreen = false;\r\n        this.areControlsHidden = false;\r\n        this.onPlayerReady = new EventEmitter();\r\n        this.onMediaReady = new EventEmitter();\r\n        this.subscriptions = [];\r\n        this.elem = ref.nativeElement;\r\n        this.api.registerElement(this.elem);\r\n    }\r\n    /**\r\n     * @return {?}\r\n     */\r\n    ngAfterContentInit() {\r\n        this.medias.toArray().forEach((/**\r\n         * @param {?} media\r\n         * @return {?}\r\n         */\r\n        (media) => {\r\n            this.api.registerMedia(media);\r\n        }));\r\n        this.fsAPI.init(this.elem, this.medias);\r\n        this.subscriptions.push(this.fsAPI.onChangeFullscreen.subscribe(this.onChangeFullscreen.bind(this)));\r\n        this.subscriptions.push(this.controlsHidden.isHidden.subscribe(this.onHideControls.bind(this)));\r\n        this.api.onPlayerReady(this.fsAPI);\r\n        this.onPlayerReady.emit(this.api);\r\n    }\r\n    /**\r\n     * @param {?} fsState\r\n     * @return {?}\r\n     */\r\n    onChangeFullscreen(fsState) {\r\n        if (!this.fsAPI.nativeFullscreen) {\r\n            this.isFullscreen = fsState;\r\n            this.zIndex = fsState ? VgUtilsService.getZIndex().toString() : 'auto';\r\n        }\r\n        else {\r\n            this.isNativeFullscreen = fsState;\r\n        }\r\n    }\r\n    /**\r\n     * @param {?} hidden\r\n     * @return {?}\r\n     */\r\n    onHideControls(hidden) {\r\n        this.areControlsHidden = hidden;\r\n    }\r\n    /**\r\n     * @return {?}\r\n     */\r\n    ngOnDestroy() {\r\n        this.subscriptions.forEach((/**\r\n         * @param {?} s\r\n         * @return {?}\r\n         */\r\n        (s) => s.unsubscribe()));\r\n    }\r\n}\r\nVgPlayerComponent.ɵfac = function VgPlayerComponent_Factory(t) { return new (t || VgPlayerComponent)(ɵngcc0.ɵɵdirectiveInject(ɵngcc0.ElementRef), ɵngcc0.ɵɵdirectiveInject(VgApiService), ɵngcc0.ɵɵdirectiveInject(VgFullscreenApiService), ɵngcc0.ɵɵdirectiveInject(VgControlsHiddenService)); };\r\nVgPlayerComponent.ɵcmp = ɵngcc0.ɵɵdefineComponent({ type: VgPlayerComponent, selectors: [[\"vg-player\"]], contentQueries: function VgPlayerComponent_ContentQueries(rf, ctx, dirIndex) { if (rf & 1) {\r\n        ɵngcc0.ɵɵcontentQuery(dirIndex, VgMediaDirective, false);\r\n    } if (rf & 2) {\r\n        var _t;\r\n        ɵngcc0.ɵɵqueryRefresh(_t = ɵngcc0.ɵɵloadQuery()) && (ctx.medias = _t);\r\n    } }, hostVars: 8, hostBindings: function VgPlayerComponent_HostBindings(rf, ctx) { if (rf & 2) {\r\n        ɵngcc0.ɵɵstyleProp(\"z-index\", ctx.zIndex);\r\n        ɵngcc0.ɵɵclassProp(\"fullscreen\", ctx.isFullscreen)(\"native-fullscreen\", ctx.isNativeFullscreen)(\"controls-hidden\", ctx.areControlsHidden);\r\n    } }, outputs: { onPlayerReady: \"onPlayerReady\", onMediaReady: \"onMediaReady\" }, features: [ɵngcc0.ɵɵProvidersFeature([VgApiService, VgFullscreenApiService, VgControlsHiddenService])], ngContentSelectors: _c0, decls: 1, vars: 0, template: function VgPlayerComponent_Template(rf, ctx) { if (rf & 1) {\r\n        ɵngcc0.ɵɵprojectionDef();\r\n        ɵngcc0.ɵɵprojection(0);\r\n    } }, styles: [\"\\n      vg-player {\\n        font-family: 'videogular';\\n        position: relative;\\n        display: flex;\\n        width: 100%;\\n        height: 100%;\\n        overflow: hidden;\\n        background-color: black;\\n      }\\n      vg-player.fullscreen {\\n        position: fixed;\\n        left: 0;\\n        top: 0;\\n      }\\n      vg-player.native-fullscreen.controls-hidden {\\n        cursor: none;\\n      }\\n    \"], encapsulation: 2 });\r\n/** @nocollapse */\r\nVgPlayerComponent.ctorParameters = () => [\r\n    { type: ElementRef },\r\n    { type: VgApiService },\r\n    { type: VgFullscreenApiService },\r\n    { type: VgControlsHiddenService }\r\n];\r\nVgPlayerComponent.propDecorators = {\r\n    isFullscreen: [{ type: HostBinding, args: ['class.fullscreen',] }],\r\n    isNativeFullscreen: [{ type: HostBinding, args: ['class.native-fullscreen',] }],\r\n    areControlsHidden: [{ type: HostBinding, args: ['class.controls-hidden',] }],\r\n    zIndex: [{ type: HostBinding, args: ['style.z-index',] }],\r\n    onPlayerReady: [{ type: Output }],\r\n    onMediaReady: [{ type: Output }],\r\n    medias: [{ type: ContentChildren, args: [VgMediaDirective,] }]\r\n};\r\n/*@__PURE__*/ (function () { ɵngcc0.ɵsetClassMetadata(VgPlayerComponent, [{\r\n        type: Component,\r\n        args: [{\r\n                selector: 'vg-player',\r\n                encapsulation: ViewEncapsulation.None,\r\n                template: `<ng-content></ng-content>`,\r\n                providers: [VgApiService, VgFullscreenApiService, VgControlsHiddenService],\r\n                styles: [`\r\n      vg-player {\r\n        font-family: 'videogular';\r\n        position: relative;\r\n        display: flex;\r\n        width: 100%;\r\n        height: 100%;\r\n        overflow: hidden;\r\n        background-color: black;\r\n      }\r\n      vg-player.fullscreen {\r\n        position: fixed;\r\n        left: 0;\r\n        top: 0;\r\n      }\r\n      vg-player.native-fullscreen.controls-hidden {\r\n        cursor: none;\r\n      }\r\n    `]\r\n            }]\r\n    }], function () { return [{ type: ɵngcc0.ElementRef }, { type: VgApiService }, { type: VgFullscreenApiService }, { type: VgControlsHiddenService }]; }, { isFullscreen: [{\r\n            type: HostBinding,\r\n            args: ['class.fullscreen']\r\n        }], isNativeFullscreen: [{\r\n            type: HostBinding,\r\n            args: ['class.native-fullscreen']\r\n        }], areControlsHidden: [{\r\n            type: HostBinding,\r\n            args: ['class.controls-hidden']\r\n        }], onPlayerReady: [{\r\n            type: Output\r\n        }], onMediaReady: [{\r\n            type: Output\r\n        }], zIndex: [{\r\n            type: HostBinding,\r\n            args: ['style.z-index']\r\n        }], medias: [{\r\n            type: ContentChildren,\r\n            args: [VgMediaDirective]\r\n        }] }); })();\r\nif (false) {\r\n    /** @type {?} */\r\n    VgPlayerComponent.prototype.elem;\r\n    /** @type {?} */\r\n    VgPlayerComponent.prototype.isFullscreen;\r\n    /** @type {?} */\r\n    VgPlayerComponent.prototype.isNativeFullscreen;\r\n    /** @type {?} */\r\n    VgPlayerComponent.prototype.areControlsHidden;\r\n    /** @type {?} */\r\n    VgPlayerComponent.prototype.zIndex;\r\n    /** @type {?} */\r\n    VgPlayerComponent.prototype.onPlayerReady;\r\n    /** @type {?} */\r\n    VgPlayerComponent.prototype.onMediaReady;\r\n    /** @type {?} */\r\n    VgPlayerComponent.prototype.medias;\r\n    /** @type {?} */\r\n    VgPlayerComponent.prototype.subscriptions;\r\n    /** @type {?} */\r\n    VgPlayerComponent.prototype.api;\r\n    /** @type {?} */\r\n    VgPlayerComponent.prototype.fsAPI;\r\n    /**\r\n     * @type {?}\r\n     * @private\r\n     */\r\n    VgPlayerComponent.prototype.controlsHidden;\r\n}\r\n\r\n/**\r\n * @fileoverview added by tsickle\r\n * Generated from: lib/core.module.ts\r\n * @suppress {checkTypes,constantProperty,extraRequire,missingOverride,missingRequire,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\r\n */\r\n/** @type {?} */\r\nconst services = [\r\n    VgApiService,\r\n    VgControlsHiddenService,\r\n    VgFullscreenApiService,\r\n    VgUtilsService,\r\n    VgEvents,\r\n    VgStates\r\n];\r\n/** @type {?} */\r\nconst directives = [\r\n    VgCuePointsDirective,\r\n    VgMediaDirective\r\n];\r\nclass VgCoreModule {\r\n}\r\nVgCoreModule.ɵmod = ɵngcc0.ɵɵdefineNgModule({ type: VgCoreModule });\r\nVgCoreModule.ɵinj = ɵngcc0.ɵɵdefineInjector({ factory: function VgCoreModule_Factory(t) { return new (t || VgCoreModule)(); }, providers: [...services], imports: [[CommonModule]] });\r\n(function () { (typeof ngJitMode === \"undefined\" || ngJitMode) && ɵngcc0.ɵɵsetNgModuleScope(VgCoreModule, { declarations: function () { return [VgCuePointsDirective, VgMediaDirective, VgPlayerComponent]; }, imports: function () { return [CommonModule]; }, exports: function () { return [VgCuePointsDirective, VgMediaDirective, VgPlayerComponent]; } }); })();\r\n/*@__PURE__*/ (function () { ɵngcc0.ɵsetClassMetadata(VgCoreModule, [{\r\n        type: NgModule,\r\n        args: [{\r\n                imports: [CommonModule],\r\n                providers: [...services],\r\n                declarations: [...directives, VgPlayerComponent],\r\n                exports: [...directives, VgPlayerComponent]\r\n            }]\r\n    }], null, null); })();\r\n\r\n/**\r\n * @fileoverview added by tsickle\r\n * Generated from: lib/interfaces/bitrate-options.interface.ts\r\n * @suppress {checkTypes,constantProperty,extraRequire,missingOverride,missingRequire,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\r\n */\r\n/**\r\n * @record\r\n */\r\nfunction BitrateOptions() { }\r\nif (false) {\r\n    /** @type {?} */\r\n    BitrateOptions.prototype.qualityIndex;\r\n    /** @type {?} */\r\n    BitrateOptions.prototype.width;\r\n    /** @type {?} */\r\n    BitrateOptions.prototype.height;\r\n    /** @type {?} */\r\n    BitrateOptions.prototype.bitrate;\r\n    /** @type {?} */\r\n    BitrateOptions.prototype.mediaType;\r\n    /** @type {?|undefined} */\r\n    BitrateOptions.prototype.label;\r\n}\r\n\r\n/**\r\n * @fileoverview added by tsickle\r\n * Generated from: lib/interfaces/i-media-element.interface.ts\r\n * @suppress {checkTypes,constantProperty,extraRequire,missingOverride,missingRequire,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\r\n */\r\n/**\r\n * @record\r\n */\r\nfunction IMediaElement() { }\r\nif (false) {\r\n    /**\r\n     * Returns the id of the element.\r\n     * @type {?}\r\n     */\r\n    IMediaElement.prototype.id;\r\n    /**\r\n     * Returns the node name. Only available on native HTML tags.\r\n     * @type {?|undefined}\r\n     */\r\n    IMediaElement.prototype.nodeName;\r\n    /**\r\n     * Returns the node element. Only available on Angular classes.\r\n     * @type {?|undefined}\r\n     */\r\n    IMediaElement.prototype.elem;\r\n    /**\r\n     * Returns an AudioTrackList object with the audio tracks for a given video element.\r\n     * @type {?}\r\n     */\r\n    IMediaElement.prototype.audioTracks;\r\n    /**\r\n     * Gets or sets a value that indicates whether to start playing the media automatically.\r\n     * @type {?}\r\n     */\r\n    IMediaElement.prototype.autoplay;\r\n    /**\r\n     * Gets a collection of buffered time ranges.\r\n     * @type {?}\r\n     */\r\n    IMediaElement.prototype.buffered;\r\n    /**\r\n     * Gets or sets a flag that indicates whether the client provides a set of controls for\r\n     * the media (in case the developer does not include controls for the player).\r\n     * @type {?}\r\n     */\r\n    IMediaElement.prototype.controls;\r\n    /** @type {?} */\r\n    IMediaElement.prototype.crossOrigin;\r\n    /**\r\n     * Gets the address or URL of the current media resource that is selected by IHTMLMediaElement.\r\n     * @type {?}\r\n     */\r\n    IMediaElement.prototype.currentSrc;\r\n    /**\r\n     * Gets or sets the current playback position, in seconds.\r\n     * @type {?}\r\n     */\r\n    IMediaElement.prototype.currentTime;\r\n    /** @type {?} */\r\n    IMediaElement.prototype.defaultMuted;\r\n    /**\r\n     * Gets or sets the default playback rate when the user is not using fast forward or reverse for a video or audio resource.\r\n     * @type {?}\r\n     */\r\n    IMediaElement.prototype.defaultPlaybackRate;\r\n    /**\r\n     * Returns the duration in seconds of the current media resource. A NaN value is returned if duration\r\n     * is not available, or Infinity if the media resource is streaming.\r\n     * @type {?}\r\n     */\r\n    IMediaElement.prototype.duration;\r\n    /**\r\n     * Gets information about whether the playback has ended or not.\r\n     * @type {?}\r\n     */\r\n    IMediaElement.prototype.ended;\r\n    /**\r\n     * Returns an object representing the current error state of the audio or video element.\r\n     * @type {?}\r\n     */\r\n    IMediaElement.prototype.error;\r\n    /**\r\n     * Gets or sets a flag to specify whether playback should restart after it completes.\r\n     * @type {?}\r\n     */\r\n    IMediaElement.prototype.loop;\r\n    /** @type {?} */\r\n    IMediaElement.prototype.mediaKeys;\r\n    /**\r\n     * Specifies the purpose of the audio or video media, such as background audio or alerts.\r\n     * @type {?}\r\n     */\r\n    IMediaElement.prototype.msAudioCategory;\r\n    /**\r\n     * Specifies the output device id that the audio will be sent to.\r\n     * @type {?}\r\n     */\r\n    IMediaElement.prototype.msAudioDeviceType;\r\n    /** @type {?} */\r\n    IMediaElement.prototype.msGraphicsTrustStatus;\r\n    /**\r\n     * Gets the MSMediaKeys object, which is used for decrypting media data, that is associated with this media element.\r\n     * @type {?}\r\n     */\r\n    IMediaElement.prototype.msKeys;\r\n    /**\r\n     * Gets or sets whether the DLNA PlayTo device is available.\r\n     * @type {?}\r\n     */\r\n    IMediaElement.prototype.msPlayToDisabled;\r\n    /**\r\n     * Gets or sets the path to the preferred media source. This enables the Play To target device to\r\n     * stream the media content, which can be DRM protected, from a different location, such as a cloud media server.\r\n     * @type {?}\r\n     */\r\n    IMediaElement.prototype.msPlayToPreferredSourceUri;\r\n    /**\r\n     * Gets or sets the primary DLNA PlayTo device.\r\n     * @type {?}\r\n     */\r\n    IMediaElement.prototype.msPlayToPrimary;\r\n    /**\r\n     * Gets the source associated with the media element for use by the PlayToManager.\r\n     * @type {?}\r\n     */\r\n    IMediaElement.prototype.msPlayToSource;\r\n    /**\r\n     * Specifies whether or not to enable low-latency playback on the media element.\r\n     * @type {?}\r\n     */\r\n    IMediaElement.prototype.msRealTime;\r\n    /**\r\n     * Gets or sets a flag that indicates whether the audio (either audio or the audio track on video media) is muted.\r\n     * @type {?}\r\n     */\r\n    IMediaElement.prototype.muted;\r\n    /**\r\n     * Gets the current network activity for the element.\r\n     * @type {?}\r\n     */\r\n    IMediaElement.prototype.networkState;\r\n    /** @type {?} */\r\n    IMediaElement.prototype.onencrypted;\r\n    /** @type {?} */\r\n    IMediaElement.prototype.onmsneedkey;\r\n    /**\r\n     * Gets a flag that specifies whether playback is paused.\r\n     * @type {?}\r\n     */\r\n    IMediaElement.prototype.paused;\r\n    /**\r\n     * Gets or sets the current rate of speed for the media resource to play. This speed is\r\n     * expressed as a multiple of the normal speed of the media resource.\r\n     * @type {?}\r\n     */\r\n    IMediaElement.prototype.playbackRate;\r\n    /**\r\n     * Gets TimeRanges for the current media resource that has been played.\r\n     * @type {?}\r\n     */\r\n    IMediaElement.prototype.played;\r\n    /**\r\n     * Gets or sets the current playback position, in seconds.\r\n     * @type {?}\r\n     */\r\n    IMediaElement.prototype.preload;\r\n    /** @type {?} */\r\n    IMediaElement.prototype.readyState;\r\n    /**\r\n     * Returns a TimeRanges object that represents the ranges of the current media resource that can be seeked.\r\n     * @type {?}\r\n     */\r\n    IMediaElement.prototype.seekable;\r\n    /**\r\n     * Gets a flag that indicates whether the the client is currently moving to a new playback position in the media resource.\r\n     * @type {?}\r\n     */\r\n    IMediaElement.prototype.seeking;\r\n    /**\r\n     * The address or URL of the a media resource that is to be considered.\r\n     * @type {?}\r\n     */\r\n    IMediaElement.prototype.src;\r\n    /** @type {?} */\r\n    IMediaElement.prototype.srcObject;\r\n    /** @type {?} */\r\n    IMediaElement.prototype.textTracks;\r\n    /** @type {?} */\r\n    IMediaElement.prototype.videoTracks;\r\n    /**\r\n     * Gets or sets the volume level for audio portions of the media element.\r\n     * @type {?}\r\n     */\r\n    IMediaElement.prototype.volume;\r\n    /** @type {?} */\r\n    IMediaElement.prototype.HAVE_CURRENT_DATA;\r\n    /** @type {?} */\r\n    IMediaElement.prototype.HAVE_ENOUGH_DATA;\r\n    /** @type {?} */\r\n    IMediaElement.prototype.HAVE_FUTURE_DATA;\r\n    /** @type {?} */\r\n    IMediaElement.prototype.HAVE_METADATA;\r\n    /** @type {?} */\r\n    IMediaElement.prototype.HAVE_NOTHING;\r\n    /** @type {?} */\r\n    IMediaElement.prototype.NETWORK_EMPTY;\r\n    /** @type {?} */\r\n    IMediaElement.prototype.NETWORK_IDLE;\r\n    /** @type {?} */\r\n    IMediaElement.prototype.NETWORK_LOADING;\r\n    /** @type {?} */\r\n    IMediaElement.prototype.NETWORK_NO_SOURCE;\r\n    /**\r\n     * @param {?} kind\r\n     * @param {?=} label\r\n     * @param {?=} language\r\n     * @return {?}\r\n     */\r\n    IMediaElement.prototype.addTextTrack = function (kind, label, language) { };\r\n    /**\r\n     * Returns a string that specifies whether the client can play a given media resource type.\r\n     * @param {?} type\r\n     * @return {?}\r\n     */\r\n    IMediaElement.prototype.canPlayType = function (type) { };\r\n    /**\r\n     * Resets the audio or video object and loads a new media resource.\r\n     * @return {?}\r\n     */\r\n    IMediaElement.prototype.load = function () { };\r\n    /**\r\n     * Clears all effects from the media pipeline.\r\n     * @return {?}\r\n     */\r\n    IMediaElement.prototype.msClearEffects = function () { };\r\n    /**\r\n     * @return {?}\r\n     */\r\n    IMediaElement.prototype.msGetAsCastingSource = function () { };\r\n    /**\r\n     * Inserts the specified audio effect into media pipeline.\r\n     * @param {?} activatableClassId\r\n     * @param {?} effectRequired\r\n     * @param {?=} config\r\n     * @return {?}\r\n     */\r\n    IMediaElement.prototype.msInsertAudioEffect = function (activatableClassId, effectRequired, config) { };\r\n    /**\r\n     * @param {?} mediaKeys\r\n     * @return {?}\r\n     */\r\n    IMediaElement.prototype.msSetMediaKeys = function (mediaKeys) { };\r\n    /**\r\n     * Specifies the media protection manager for a given media pipeline.\r\n     * @param {?=} mediaProtectionManager\r\n     * @return {?}\r\n     */\r\n    IMediaElement.prototype.msSetMediaProtectionManager = function (mediaProtectionManager) { };\r\n    /**\r\n     * Pauses the current playback and sets paused to TRUE. This can be used to test whether the media is\r\n     * playing or paused. You can also use the pause or play events to tell whether the media is playing or not.\r\n     * @return {?}\r\n     */\r\n    IMediaElement.prototype.pause = function () { };\r\n    /**\r\n     * Loads and starts playback of a media resource.\r\n     * @return {?}\r\n     */\r\n    IMediaElement.prototype.play = function () { };\r\n    /**\r\n     * @param {?} mediaKeys\r\n     * @return {?}\r\n     */\r\n    IMediaElement.prototype.setMediaKeys = function (mediaKeys) { };\r\n    /**\r\n     * @param {?} type\r\n     * @param {?} listener\r\n     * @param {?=} useCapture\r\n     * @return {?}\r\n     */\r\n    IMediaElement.prototype.addEventListener = function (type, listener, useCapture) { };\r\n}\r\n\r\n/**\r\n * @fileoverview added by tsickle\r\n * Generated from: lib/interfaces/idrm-license-server.interface.ts\r\n * @suppress {checkTypes,constantProperty,extraRequire,missingOverride,missingRequire,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\r\n */\r\n/**\r\n * @record\r\n */\r\nfunction IDRMLicenseServer() { }\r\n\r\n/**\r\n * @fileoverview added by tsickle\r\n * Generated from: lib/interfaces/ihls-config.interface.ts\r\n * @suppress {checkTypes,constantProperty,extraRequire,missingOverride,missingRequire,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\r\n */\r\n/**\r\n * @record\r\n */\r\nfunction IHLSConfig() { }\r\nif (false) {\r\n    /** @type {?} */\r\n    IHLSConfig.prototype.abrController;\r\n    /** @type {?} */\r\n    IHLSConfig.prototype.fLoader;\r\n    /** @type {?} */\r\n    IHLSConfig.prototype.fetchSetup;\r\n    /** @type {?} */\r\n    IHLSConfig.prototype.loader;\r\n    /** @type {?} */\r\n    IHLSConfig.prototype.pLoader;\r\n    /** @type {?} */\r\n    IHLSConfig.prototype.timelineController;\r\n    /** @type {?} */\r\n    IHLSConfig.prototype.xhrSetup;\r\n    /** @type {?} */\r\n    IHLSConfig.prototype.startLevel;\r\n    /** @type {?} */\r\n    IHLSConfig.prototype.defaultAudioCodec;\r\n    /** @type {?} */\r\n    IHLSConfig.prototype.autoStartLoad;\r\n    /** @type {?} */\r\n    IHLSConfig.prototype.startPosition;\r\n    /** @type {?} */\r\n    IHLSConfig.prototype.capLevelToPlayerSize;\r\n    /** @type {?} */\r\n    IHLSConfig.prototype.debug;\r\n    /** @type {?} */\r\n    IHLSConfig.prototype.initialLiveManifestSize;\r\n    /** @type {?} */\r\n    IHLSConfig.prototype.maxBufferLength;\r\n    /** @type {?} */\r\n    IHLSConfig.prototype.maxMaxBufferLength;\r\n    /** @type {?} */\r\n    IHLSConfig.prototype.maxBufferSize;\r\n    /** @type {?} */\r\n    IHLSConfig.prototype.maxBufferHole;\r\n    /** @type {?} */\r\n    IHLSConfig.prototype.maxSeekHole;\r\n    /** @type {?} */\r\n    IHLSConfig.prototype.seekHoleNudgeDuration;\r\n    /** @type {?} */\r\n    IHLSConfig.prototype.maxFragLookUpTolerance;\r\n    /** @type {?} */\r\n    IHLSConfig.prototype.liveSyncDurationCount;\r\n    /** @type {?} */\r\n    IHLSConfig.prototype.liveMaxLatencyDurationCount;\r\n    /** @type {?} */\r\n    IHLSConfig.prototype.enableWorker;\r\n    /** @type {?} */\r\n    IHLSConfig.prototype.enableSoftwareAES;\r\n    /** @type {?} */\r\n    IHLSConfig.prototype.manifestLoadingTimeOut;\r\n    /** @type {?} */\r\n    IHLSConfig.prototype.manifestLoadingMaxRetry;\r\n    /** @type {?} */\r\n    IHLSConfig.prototype.manifestLoadingRetryDelay;\r\n    /** @type {?} */\r\n    IHLSConfig.prototype.manifestLoadingMaxRetryTimeout;\r\n    /** @type {?} */\r\n    IHLSConfig.prototype.levelLoadingTimeOut;\r\n    /** @type {?} */\r\n    IHLSConfig.prototype.levelLoadingMaxRetry;\r\n    /** @type {?} */\r\n    IHLSConfig.prototype.levelLoadingRetryDelay;\r\n    /** @type {?} */\r\n    IHLSConfig.prototype.levelLoadingMaxRetryTimeout;\r\n    /** @type {?} */\r\n    IHLSConfig.prototype.fragLoadingTimeOut;\r\n    /** @type {?} */\r\n    IHLSConfig.prototype.fragLoadingMaxRetry;\r\n    /** @type {?} */\r\n    IHLSConfig.prototype.fragLoadingRetryDelay;\r\n    /** @type {?} */\r\n    IHLSConfig.prototype.fragLoadingMaxRetryTimeout;\r\n    /** @type {?} */\r\n    IHLSConfig.prototype.startFragPrefech;\r\n    /** @type {?} */\r\n    IHLSConfig.prototype.appendErrorMaxRetry;\r\n    /** @type {?} */\r\n    IHLSConfig.prototype.enableCEA708Captions;\r\n    /** @type {?} */\r\n    IHLSConfig.prototype.stretchShortVideoTrack;\r\n    /** @type {?} */\r\n    IHLSConfig.prototype.forceKeyFrameOnDiscontinuity;\r\n    /** @type {?} */\r\n    IHLSConfig.prototype.abrEwmaFastLive;\r\n    /** @type {?} */\r\n    IHLSConfig.prototype.abrEwmaSlowLive;\r\n    /** @type {?} */\r\n    IHLSConfig.prototype.abrEwmaFastVoD;\r\n    /** @type {?} */\r\n    IHLSConfig.prototype.abrEwmaSlowVoD;\r\n    /** @type {?} */\r\n    IHLSConfig.prototype.abrEwmaDefaultEstimate;\r\n    /** @type {?} */\r\n    IHLSConfig.prototype.abrBandWidthFactor;\r\n    /** @type {?} */\r\n    IHLSConfig.prototype.abrBandWidthUpFactor;\r\n    /** @type {?} */\r\n    IHLSConfig.prototype.minAutoBitrate;\r\n}\r\n\r\n/**\r\n * @fileoverview added by tsickle\r\n * Generated from: lib/interfaces/vg-media-api.interface.ts\r\n * @suppress {checkTypes,constantProperty,extraRequire,missingOverride,missingRequire,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\r\n */\r\n/**\r\n * @record\r\n */\r\nfunction IPlayable() { }\r\nif (false) {\r\n    /** @type {?} */\r\n    IPlayable.prototype.id;\r\n    /** @type {?} */\r\n    IPlayable.prototype.elem;\r\n    /** @type {?} */\r\n    IPlayable.prototype.time;\r\n    /** @type {?} */\r\n    IPlayable.prototype.buffer;\r\n    /** @type {?|undefined} */\r\n    IPlayable.prototype.track;\r\n    /** @type {?} */\r\n    IPlayable.prototype.canPlay;\r\n    /** @type {?} */\r\n    IPlayable.prototype.canPlayThrough;\r\n    /** @type {?} */\r\n    IPlayable.prototype.isMetadataLoaded;\r\n    /** @type {?} */\r\n    IPlayable.prototype.isWaiting;\r\n    /** @type {?} */\r\n    IPlayable.prototype.isCompleted;\r\n    /** @type {?} */\r\n    IPlayable.prototype.isLive;\r\n    /** @type {?} */\r\n    IPlayable.prototype.textTracks;\r\n    /** @type {?} */\r\n    IPlayable.prototype.state;\r\n    /** @type {?} */\r\n    IPlayable.prototype.subscriptions;\r\n    /** @type {?} */\r\n    IPlayable.prototype.duration;\r\n    /** @type {?} */\r\n    IPlayable.prototype.currentTime;\r\n    /** @type {?} */\r\n    IPlayable.prototype.play;\r\n    /** @type {?} */\r\n    IPlayable.prototype.pause;\r\n    /** @type {?|undefined} */\r\n    IPlayable.prototype.addTextTrack;\r\n    /** @type {?|undefined} */\r\n    IPlayable.prototype.dispatchEvent;\r\n}\r\n/**\r\n * @record\r\n */\r\nfunction IMediaSubscriptions() { }\r\nif (false) {\r\n    /** @type {?} */\r\n    IMediaSubscriptions.prototype.abort;\r\n    /** @type {?} */\r\n    IMediaSubscriptions.prototype.bufferDetected;\r\n    /** @type {?} */\r\n    IMediaSubscriptions.prototype.canPlay;\r\n    /** @type {?} */\r\n    IMediaSubscriptions.prototype.canPlayThrough;\r\n    /** @type {?} */\r\n    IMediaSubscriptions.prototype.durationChange;\r\n    /** @type {?} */\r\n    IMediaSubscriptions.prototype.emptied;\r\n    /** @type {?} */\r\n    IMediaSubscriptions.prototype.encrypted;\r\n    /** @type {?} */\r\n    IMediaSubscriptions.prototype.ended;\r\n    /** @type {?} */\r\n    IMediaSubscriptions.prototype.error;\r\n    /** @type {?} */\r\n    IMediaSubscriptions.prototype.loadedData;\r\n    /** @type {?} */\r\n    IMediaSubscriptions.prototype.loadedMetadata;\r\n    /** @type {?} */\r\n    IMediaSubscriptions.prototype.loadStart;\r\n    /** @type {?} */\r\n    IMediaSubscriptions.prototype.pause;\r\n    /** @type {?} */\r\n    IMediaSubscriptions.prototype.play;\r\n    /** @type {?} */\r\n    IMediaSubscriptions.prototype.playing;\r\n    /** @type {?} */\r\n    IMediaSubscriptions.prototype.progress;\r\n    /** @type {?} */\r\n    IMediaSubscriptions.prototype.rateChange;\r\n    /** @type {?} */\r\n    IMediaSubscriptions.prototype.seeked;\r\n    /** @type {?} */\r\n    IMediaSubscriptions.prototype.seeking;\r\n    /** @type {?} */\r\n    IMediaSubscriptions.prototype.stalled;\r\n    /** @type {?} */\r\n    IMediaSubscriptions.prototype.suspend;\r\n    /** @type {?} */\r\n    IMediaSubscriptions.prototype.timeUpdate;\r\n    /** @type {?} */\r\n    IMediaSubscriptions.prototype.volumeChange;\r\n    /** @type {?} */\r\n    IMediaSubscriptions.prototype.waiting;\r\n    /** @type {?} */\r\n    IMediaSubscriptions.prototype.startAds;\r\n    /** @type {?} */\r\n    IMediaSubscriptions.prototype.endAds;\r\n}\r\n\r\n/**\r\n * @fileoverview added by tsickle\r\n * Generated from: lib/interfaces/deprecated-tracks-types.interface.ts\r\n * @suppress {checkTypes,constantProperty,extraRequire,missingOverride,missingRequire,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\r\n */\r\n/**\r\n * @record\r\n */\r\nfunction AudioTrack() { }\r\nif (false) {\r\n    /** @type {?} */\r\n    AudioTrack.prototype.enabled;\r\n    /** @type {?} */\r\n    AudioTrack.prototype.id;\r\n    /** @type {?} */\r\n    AudioTrack.prototype.kind;\r\n    /** @type {?} */\r\n    AudioTrack.prototype.label;\r\n    /** @type {?} */\r\n    AudioTrack.prototype.language;\r\n    /** @type {?} */\r\n    AudioTrack.prototype.sourceBuffer;\r\n}\r\n/**\r\n * @record\r\n */\r\nfunction AudioTrackListEventMap() { }\r\nif (false) {\r\n    /** @type {?} */\r\n    AudioTrackListEventMap.prototype.addtrack;\r\n    /** @type {?} */\r\n    AudioTrackListEventMap.prototype.change;\r\n    /** @type {?} */\r\n    AudioTrackListEventMap.prototype.removetrack;\r\n}\r\n/**\r\n * Used to represent a list of the audio tracks contained within a given HTML media element, with each track represented by a separate AudioTrack object in the list.\r\n * @record\r\n */\r\nfunction AudioTrackList() { }\r\nif (false) {\r\n    /** @type {?} */\r\n    AudioTrackList.prototype.length;\r\n    /** @type {?} */\r\n    AudioTrackList.prototype.onaddtrack;\r\n    /** @type {?} */\r\n    AudioTrackList.prototype.onchange;\r\n    /** @type {?} */\r\n    AudioTrackList.prototype.onremovetrack;\r\n    /* Skipping unhandled member: [index: number]: AudioTrack;*/\r\n    /**\r\n     * @param {?} id\r\n     * @return {?}\r\n     */\r\n    AudioTrackList.prototype.getTrackById = function (id) { };\r\n    /**\r\n     * @param {?} index\r\n     * @return {?}\r\n     */\r\n    AudioTrackList.prototype.item = function (index) { };\r\n    /**\r\n     * @template K\r\n     * @param {?} type\r\n     * @param {?} listener\r\n     * @param {?=} options\r\n     * @return {?}\r\n     */\r\n    AudioTrackList.prototype.addEventListener = function (type, listener, options) { };\r\n    /**\r\n     * @param {?} type\r\n     * @param {?} listener\r\n     * @param {?=} options\r\n     * @return {?}\r\n     */\r\n    AudioTrackList.prototype.addEventListener = function (type, listener, options) { };\r\n    /**\r\n     * @template K\r\n     * @param {?} type\r\n     * @param {?} listener\r\n     * @param {?=} options\r\n     * @return {?}\r\n     */\r\n    AudioTrackList.prototype.removeEventListener = function (type, listener, options) { };\r\n    /**\r\n     * @param {?} type\r\n     * @param {?} listener\r\n     * @param {?=} options\r\n     * @return {?}\r\n     */\r\n    AudioTrackList.prototype.removeEventListener = function (type, listener, options) { };\r\n}\r\n/**\r\n * A single video track from a <video> element.\r\n * @record\r\n */\r\nfunction VideoTrack() { }\r\nif (false) {\r\n    /** @type {?} */\r\n    VideoTrack.prototype.id;\r\n    /** @type {?} */\r\n    VideoTrack.prototype.kind;\r\n    /** @type {?} */\r\n    VideoTrack.prototype.label;\r\n    /** @type {?} */\r\n    VideoTrack.prototype.language;\r\n    /** @type {?} */\r\n    VideoTrack.prototype.selected;\r\n    /** @type {?} */\r\n    VideoTrack.prototype.sourceBuffer;\r\n}\r\n/**\r\n * @record\r\n */\r\nfunction VideoTrackListEventMap() { }\r\nif (false) {\r\n    /** @type {?} */\r\n    VideoTrackListEventMap.prototype.addtrack;\r\n    /** @type {?} */\r\n    VideoTrackListEventMap.prototype.change;\r\n    /** @type {?} */\r\n    VideoTrackListEventMap.prototype.removetrack;\r\n}\r\n/**\r\n * Used to represent a list of the video tracks contained within a <video> element, with each track represented by a separate VideoTrack object in the list.\r\n * @record\r\n */\r\nfunction VideoTrackList() { }\r\nif (false) {\r\n    /** @type {?} */\r\n    VideoTrackList.prototype.length;\r\n    /** @type {?} */\r\n    VideoTrackList.prototype.onaddtrack;\r\n    /** @type {?} */\r\n    VideoTrackList.prototype.onchange;\r\n    /** @type {?} */\r\n    VideoTrackList.prototype.onremovetrack;\r\n    /** @type {?} */\r\n    VideoTrackList.prototype.selectedIndex;\r\n    /* Skipping unhandled member: [index: number]: VideoTrack;*/\r\n    /**\r\n     * @param {?} id\r\n     * @return {?}\r\n     */\r\n    VideoTrackList.prototype.getTrackById = function (id) { };\r\n    /**\r\n     * @param {?} index\r\n     * @return {?}\r\n     */\r\n    VideoTrackList.prototype.item = function (index) { };\r\n    /**\r\n     * @template K\r\n     * @param {?} type\r\n     * @param {?} listener\r\n     * @param {?=} options\r\n     * @return {?}\r\n     */\r\n    VideoTrackList.prototype.addEventListener = function (type, listener, options) { };\r\n    /**\r\n     * @param {?} type\r\n     * @param {?} listener\r\n     * @param {?=} options\r\n     * @return {?}\r\n     */\r\n    VideoTrackList.prototype.addEventListener = function (type, listener, options) { };\r\n    /**\r\n     * @template K\r\n     * @param {?} type\r\n     * @param {?} listener\r\n     * @param {?=} options\r\n     * @return {?}\r\n     */\r\n    VideoTrackList.prototype.removeEventListener = function (type, listener, options) { };\r\n    /**\r\n     * @param {?} type\r\n     * @param {?} listener\r\n     * @param {?=} options\r\n     * @return {?}\r\n     */\r\n    VideoTrackList.prototype.removeEventListener = function (type, listener, options) { };\r\n}\r\n\r\n/**\r\n * @fileoverview added by tsickle\r\n * Generated from: lib/directives/vg-media/vg-media-element.ts\r\n * @suppress {checkTypes,constantProperty,extraRequire,missingOverride,missingRequire,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\r\n */\r\nclass VgMediaElement {\r\n    /**\r\n     * @return {?}\r\n     */\r\n    get audioTracks() {\r\n        return null;\r\n    }\r\n    // @ts-ignore\r\n    /**\r\n     * @param {?} kind\r\n     * @param {?=} label\r\n     * @param {?=} language\r\n     * @return {?}\r\n     */\r\n    addTextTrack(kind, label, language) {\r\n        return null;\r\n    }\r\n    // @ts-ignore\r\n    /**\r\n     * @param {?} type\r\n     * @return {?}\r\n     */\r\n    canPlayType(type) {\r\n        return null;\r\n    }\r\n    /**\r\n     * @return {?}\r\n     */\r\n    load() { }\r\n    /**\r\n     * @return {?}\r\n     */\r\n    msClearEffects() { }\r\n    /**\r\n     * @return {?}\r\n     */\r\n    msGetAsCastingSource() {\r\n        return null;\r\n    }\r\n    // @ts-ignore\r\n    /**\r\n     * @param {?} _activatableClassId\r\n     * @param {?} _effectRequired\r\n     * @param {?=} _config\r\n     * @return {?}\r\n     */\r\n    msInsertAudioEffect(_activatableClassId, _effectRequired, _config) { }\r\n    // @ts-ignore\r\n    /**\r\n     * @param {?} mediaKeys\r\n     * @return {?}\r\n     */\r\n    msSetMediaKeys(mediaKeys) { }\r\n    // @ts-ignore\r\n    /**\r\n     * @param {?=} mediaProtectionManager\r\n     * @return {?}\r\n     */\r\n    msSetMediaProtectionManager(mediaProtectionManager) { }\r\n    /**\r\n     * @return {?}\r\n     */\r\n    pause() { }\r\n    /**\r\n     * @return {?}\r\n     */\r\n    play() {\r\n        return null;\r\n    }\r\n    // @ts-ignore\r\n    /**\r\n     * @param {?} mediaKeys\r\n     * @return {?}\r\n     */\r\n    setMediaKeys(mediaKeys) {\r\n        return null;\r\n    }\r\n    // @ts-ignore\r\n    /**\r\n     * @param {?} _type\r\n     * @param {?} _listener\r\n     * @param {?=} _useCapture\r\n     * @return {?}\r\n     */\r\n    addEventListener(_type, _listener, _useCapture) { }\r\n}\r\nif (false) {\r\n    /** @type {?} */\r\n    VgMediaElement.prototype.id;\r\n    /** @type {?} */\r\n    VgMediaElement.prototype.elem;\r\n    /** @type {?} */\r\n    VgMediaElement.prototype.autoplay;\r\n    /** @type {?} */\r\n    VgMediaElement.prototype.buffered;\r\n    /** @type {?} */\r\n    VgMediaElement.prototype.controls;\r\n    /** @type {?} */\r\n    VgMediaElement.prototype.crossOrigin;\r\n    /** @type {?} */\r\n    VgMediaElement.prototype.currentSrc;\r\n    /** @type {?} */\r\n    VgMediaElement.prototype.currentTime;\r\n    /** @type {?} */\r\n    VgMediaElement.prototype.defaultMuted;\r\n    /** @type {?} */\r\n    VgMediaElement.prototype.defaultPlaybackRate;\r\n    /** @type {?} */\r\n    VgMediaElement.prototype.duration;\r\n    /** @type {?} */\r\n    VgMediaElement.prototype.ended;\r\n    /** @type {?} */\r\n    VgMediaElement.prototype.error;\r\n    /** @type {?} */\r\n    VgMediaElement.prototype.loop;\r\n    /** @type {?} */\r\n    VgMediaElement.prototype.mediaKeys;\r\n    /** @type {?} */\r\n    VgMediaElement.prototype.msAudioCategory;\r\n    /** @type {?} */\r\n    VgMediaElement.prototype.msAudioDeviceType;\r\n    /** @type {?} */\r\n    VgMediaElement.prototype.msGraphicsTrustStatus;\r\n    /** @type {?} */\r\n    VgMediaElement.prototype.msKeys;\r\n    /** @type {?} */\r\n    VgMediaElement.prototype.msPlayToDisabled;\r\n    /** @type {?} */\r\n    VgMediaElement.prototype.msPlayToPreferredSourceUri;\r\n    /** @type {?} */\r\n    VgMediaElement.prototype.msPlayToPrimary;\r\n    /** @type {?} */\r\n    VgMediaElement.prototype.msPlayToSource;\r\n    /** @type {?} */\r\n    VgMediaElement.prototype.msRealTime;\r\n    /** @type {?} */\r\n    VgMediaElement.prototype.muted;\r\n    /** @type {?} */\r\n    VgMediaElement.prototype.networkState;\r\n    /** @type {?} */\r\n    VgMediaElement.prototype.onencrypted;\r\n    /** @type {?} */\r\n    VgMediaElement.prototype.onmsneedkey;\r\n    /** @type {?} */\r\n    VgMediaElement.prototype.paused;\r\n    /** @type {?} */\r\n    VgMediaElement.prototype.playbackRate;\r\n    /** @type {?} */\r\n    VgMediaElement.prototype.played;\r\n    /** @type {?} */\r\n    VgMediaElement.prototype.preload;\r\n    /** @type {?} */\r\n    VgMediaElement.prototype.readyState;\r\n    /** @type {?} */\r\n    VgMediaElement.prototype.seekable;\r\n    /** @type {?} */\r\n    VgMediaElement.prototype.seeking;\r\n    /** @type {?} */\r\n    VgMediaElement.prototype.src;\r\n    /** @type {?} */\r\n    VgMediaElement.prototype.srcObject;\r\n    /** @type {?} */\r\n    VgMediaElement.prototype.textTracks;\r\n    /** @type {?} */\r\n    VgMediaElement.prototype.videoTracks;\r\n    /** @type {?} */\r\n    VgMediaElement.prototype.volume;\r\n    /** @type {?} */\r\n    VgMediaElement.prototype.HAVE_CURRENT_DATA;\r\n    /** @type {?} */\r\n    VgMediaElement.prototype.HAVE_ENOUGH_DATA;\r\n    /** @type {?} */\r\n    VgMediaElement.prototype.HAVE_FUTURE_DATA;\r\n    /** @type {?} */\r\n    VgMediaElement.prototype.HAVE_METADATA;\r\n    /** @type {?} */\r\n    VgMediaElement.prototype.HAVE_NOTHING;\r\n    /** @type {?} */\r\n    VgMediaElement.prototype.NETWORK_EMPTY;\r\n    /** @type {?} */\r\n    VgMediaElement.prototype.NETWORK_IDLE;\r\n    /** @type {?} */\r\n    VgMediaElement.prototype.NETWORK_LOADING;\r\n    /** @type {?} */\r\n    VgMediaElement.prototype.NETWORK_NO_SOURCE;\r\n}\r\n\r\n/**\r\n * @fileoverview added by tsickle\r\n * Generated from: index.ts\r\n * @suppress {checkTypes,constantProperty,extraRequire,missingOverride,missingRequire,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\r\n */\r\n\r\n/**\r\n * @fileoverview added by tsickle\r\n * Generated from: videogular-ngx-videogular-core.ts\r\n * @suppress {checkTypes,constantProperty,extraRequire,missingOverride,missingRequire,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\r\n */\r\n\r\nexport { VgApiService, VgControlsHiddenService, VgCoreModule, VgCuePointsDirective, VgEvents, VgFullscreenApiService, VgMediaDirective, VgMediaElement, VgPlayerComponent, VgStates, VgUtilsService };\r\n\r\n//# sourceMappingURL=videogular-ngx-videogular-core.js.map","import { Component, OnInit, HostBinding, Inject, PLATFORM_ID } from '@angular/core';\r\nimport { VideoPlaylistModel } from './video-playlist.model';\r\nimport { VgApiService } from '@videogular/ngx-videogular/core';\r\nimport { ActivatedRoute } from '@angular/router';\r\nimport { Plugins } from '@capacitor/core';\r\nimport { switchMap } from 'rxjs/operators';\r\nimport { isPlatformBrowser } from '@angular/common';\r\nconst { Share } = Plugins;\r\n\r\n@Component({\r\n  selector: 'app-video-playlist',\r\n  templateUrl: './video-playlist.page.html',\r\n  styleUrls: [\r\n    './styles/video-playlist.page.scss',\r\n    './styles/video-playlist.shell.scss'\r\n  ]\r\n})\r\nexport class VideoPlaylistPage implements OnInit {\r\n  ssr = true;\r\n  start_playing = false;\r\n  api: VgApiService;\r\n  video_playlist_model: VideoPlaylistModel;\r\n\r\n  @HostBinding('class.is-shell') get isShell() {\r\n    return (this.video_playlist_model && this.video_playlist_model.isShell) ? true : false;\r\n  }\r\n\r\n  constructor(\r\n    private route: ActivatedRoute,\r\n    @Inject(PLATFORM_ID) private platformId: object\r\n  ) { }\r\n\r\n  ngOnInit(): void {\r\n    // In SSR show a placeholder for the <vg-player>\r\n    if (isPlatformBrowser(this.platformId)) {\r\n      this.ssr = false;\r\n    }\r\n\r\n    this.route.data\r\n    .pipe(\r\n      // Extract data for this page\r\n      switchMap((resolvedRouteData) => resolvedRouteData['data'].state)\r\n    )\r\n    .subscribe((state: any) => {\r\n      this.video_playlist_model = state;\r\n      if (!state.isShell) {\r\n        this.video_playlist_model.video_playlist = state.videos;\r\n        this.video_playlist_model.selected_video = state.videos[0];\r\n      }\r\n    }, (error) => console.log(error));\r\n  }\r\n\r\n  playMedia(media) {\r\n    // Check if this media is not the same we are currently playing\r\n    if (media !== this.video_playlist_model.selected_video) {\r\n      // Change sources\r\n      this.video_playlist_model.selected_video = media;\r\n      // When changing sources we wait until the metadata is loaded and then we start playing the video\r\n    }\r\n  }\r\n\r\n  onPlayerReady(api: VgApiService) {\r\n    this.api = api;\r\n    this.api.getDefaultMedia().subscriptions.loadedMetadata.subscribe(this.playVideo.bind(this));\r\n  }\r\n\r\n  playVideo() {\r\n    if (this.start_playing) {\r\n      this.api.play();\r\n    } else {\r\n      this.start_playing = true;\r\n    }\r\n  }\r\n\r\n  shareMedia() {\r\n    const selectedVideo = this.video_playlist_model.selected_video;\r\n    Share.share({\r\n      title: selectedVideo.title,\r\n      text: selectedVideo.description,\r\n      url: 'https://ionicthemes.com/',\r\n      dialogTitle: 'Share Media'\r\n    })\r\n    .then(() => console.log('Successful share'))\r\n    .catch((error) => console.log('Error sharing', error));\r\n  }\r\n}\r\n","<ion-header>\r\n  <ion-toolbar color=\"primary\">\r\n    <ion-buttons slot=\"start\">\r\n      <ion-menu-button></ion-menu-button>\r\n    </ion-buttons>\r\n    <ion-title>Video Playlist</ion-title>\r\n    <ion-buttons slot=\"end\">\r\n      <ion-button (click)=\"shareMedia()\">\r\n        <ion-icon slot=\"icon-only\" name=\"share\"></ion-icon>\r\n      </ion-button>\r\n    </ion-buttons>\r\n  </ion-toolbar>\r\n</ion-header>\r\n\r\n<ion-content class=\"video-playlist-content\">\r\n  <app-aspect-ratio [ratio]=\"{w: 16, h: 9}\">\r\n    <!-- SSR placeholder -->\r\n    <video *ngIf=\"ssr\" class=\"ssr-video\" controls preload=\"auto\">\r\n      <source *ngFor=\"let video of video_playlist_model?.selected_video?.sources\" [src]=\"video.src\" [type]=\"video.type\">\r\n    </video>\r\n    <!-- In the Browser, show the <vg-player> -->\r\n    <vg-player *ngIf=\"!ssr\" class=\"video-player\" (onPlayerReady)=\"onPlayerReady($event)\">\r\n\t\t\t<video controls #player_video [vgMedia]=\"player_video\" id=\"player-video\" preload=\"auto\">\r\n\t      <source *ngFor=\"let video of video_playlist_model?.selected_video?.sources\" [src]=\"video.src\" [type]=\"video.type\">\r\n\t    </video>\r\n    </vg-player>\r\n  </app-aspect-ratio>\r\n\r\n  <section class=\"video-data-section\">\r\n    <h3 class=\"video-title\">\r\n      <app-text-shell animation=\"gradient\" [data]=\"video_playlist_model?.selected_video?.title\"></app-text-shell>\r\n    </h3>\r\n    <p class=\"video-description\">\r\n      <app-text-shell lines=\"5\" animation=\"gradient\" [data]=\"video_playlist_model?.selected_video?.description\"></app-text-shell>\r\n    </p>\r\n  </section>\r\n\r\n  <section class=\"video-playlist-section\">\r\n    <ion-row class=\"playlist-item-row\" *ngFor=\"let video of video_playlist_model?.video_playlist\">\r\n      <ion-col size=\"4\">\r\n        <app-image-shell [display]=\"'cover'\" class=\"video-image\" animation=\"spinner\" [src]=\"video.thumbnail\" [alt]=\"'video thumbnail'\" (click)=\"playMedia(video)\">\r\n          <app-aspect-ratio [ratio]=\"{w:3, h: 2}\">\r\n            <a class=\"play-icon-wrapper\" (click)=\"playMedia(video)\">\r\n              <ion-icon class=\"play-icon\" name=\"play\"></ion-icon>\r\n            </a>\r\n          </app-aspect-ratio>\r\n        </app-image-shell>\r\n      </ion-col>\r\n      <ion-col size=\"8\" class=\"video-info-wrapper\">\r\n        <h4 class=\"image-title\">\r\n          <app-text-shell animation=\"gradient\" [data]=\"video.title\"></app-text-shell>\r\n        </h4>\r\n        <p class=\"image-description\">\r\n          <app-text-shell lines=\"3\" animation=\"gradient\" [data]=\"video.description\"></app-text-shell>\r\n        </p>\r\n      </ion-col>\r\n    </ion-row>\r\n  </section>\r\n</ion-content>\r\n","import { Injectable } from '@angular/core';\r\nimport { Resolve } from '@angular/router';\r\nimport { VideoPlaylistService } from './video-playlist.service';\r\nimport { Observable } from 'rxjs';\r\nimport { DataStore } from '../shell/data-store';\r\nimport { VideoPlaylistModel } from './video-playlist.model';\r\n\r\n@Injectable()\r\nexport class VideoPlaylistResolver implements Resolve<any> {\r\n\r\n  constructor(private videoPlaylistService: VideoPlaylistService) { }\r\n\r\n  resolve() {\r\n    const dataSource: Observable<VideoPlaylistModel> = this.videoPlaylistService.getVideoPlaylistDataSource();\r\n\r\n    const dataStore: DataStore<VideoPlaylistModel> = this.videoPlaylistService.getVideoPlaylistStore(dataSource);\r\n\r\n    return dataStore;\r\n  }\r\n}\r\n","import { ShellModel } from '../shell/data-store';\r\n\r\nexport class VideoModel {\r\n  title: string;\r\n  description: string;\r\n  thumbnail: string;\r\n  sources: Array<{ src: string, type: string }>;\r\n}\r\n\r\nexport class VideoPlaylistModel extends ShellModel {\r\n  selected_video: VideoModel = new VideoModel();\r\n\r\n  video_playlist: Array<VideoModel> = [\r\n    new VideoModel(),\r\n    new VideoModel(),\r\n    new VideoModel()\r\n  ];\r\n\r\n  constructor() {\r\n    super();\r\n  }\r\n}\r\n","import { Component, ViewEncapsulation, ElementRef, Input, HostBinding, NgModule } from '@angular/core';\r\nimport { CommonModule } from '@angular/common';\r\nimport { VgApiService, VgCoreModule } from '@videogular/ngx-videogular/core';\r\n\r\n/**\r\n * @fileoverview added by tsickle\r\n * Generated from: lib/vg-buffering/vg-buffering.component.ts\r\n * @suppress {checkTypes,constantProperty,extraRequire,missingOverride,missingRequire,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\r\n */\r\nimport * as ɵngcc0 from '@angular/core';\r\nimport * as ɵngcc1 from '@videogular/ngx-videogular/core';\r\nclass VgBufferingComponent {\r\n    /**\r\n     * @param {?} ref\r\n     * @param {?} API\r\n     */\r\n    constructor(ref, API) {\r\n        this.API = API;\r\n        this.checkInterval = 50;\r\n        this.currentPlayPos = 0;\r\n        this.lastPlayPos = 0;\r\n        this.subscriptions = [];\r\n        this.isBuffering = false;\r\n        this.elem = ref.nativeElement;\r\n    }\r\n    /**\r\n     * @return {?}\r\n     */\r\n    ngOnInit() {\r\n        if (this.API.isPlayerReady) {\r\n            this.onPlayerReady();\r\n        }\r\n        else {\r\n            this.subscriptions.push(this.API.playerReadyEvent.subscribe((/**\r\n             * @return {?}\r\n             */\r\n            () => this.onPlayerReady())));\r\n        }\r\n    }\r\n    /**\r\n     * @return {?}\r\n     */\r\n    onPlayerReady() {\r\n        this.target = this.API.getMediaById(this.vgFor);\r\n        this.subscriptions.push(this.target.subscriptions.bufferDetected.subscribe((/**\r\n         * @param {?} isBuffering\r\n         * @return {?}\r\n         */\r\n        (isBuffering) => this.onUpdateBuffer(isBuffering))));\r\n    }\r\n    /**\r\n     * @param {?} isBuffering\r\n     * @return {?}\r\n     */\r\n    onUpdateBuffer(isBuffering) {\r\n        this.isBuffering = isBuffering;\r\n    }\r\n    /**\r\n     * @return {?}\r\n     */\r\n    ngOnDestroy() {\r\n        this.subscriptions.forEach((/**\r\n         * @param {?} s\r\n         * @return {?}\r\n         */\r\n        (s) => s.unsubscribe()));\r\n    }\r\n}\r\nVgBufferingComponent.ɵfac = function VgBufferingComponent_Factory(t) { return new (t || VgBufferingComponent)(ɵngcc0.ɵɵdirectiveInject(ɵngcc0.ElementRef), ɵngcc0.ɵɵdirectiveInject(ɵngcc1.VgApiService)); };\r\nVgBufferingComponent.ɵcmp = ɵngcc0.ɵɵdefineComponent({ type: VgBufferingComponent, selectors: [[\"vg-buffering\"]], hostVars: 2, hostBindings: function VgBufferingComponent_HostBindings(rf, ctx) { if (rf & 2) {\r\n        ɵngcc0.ɵɵclassProp(\"is-buffering\", ctx.isBuffering);\r\n    } }, inputs: { vgFor: \"vgFor\" }, decls: 3, vars: 0, consts: [[1, \"vg-buffering\"], [1, \"bufferingContainer\"], [1, \"loadingSpinner\"]], template: function VgBufferingComponent_Template(rf, ctx) { if (rf & 1) {\r\n        ɵngcc0.ɵɵelementStart(0, \"div\", 0);\r\n        ɵngcc0.ɵɵelementStart(1, \"div\", 1);\r\n        ɵngcc0.ɵɵelement(2, \"div\", 2);\r\n        ɵngcc0.ɵɵelementEnd();\r\n        ɵngcc0.ɵɵelementEnd();\r\n    } }, styles: [\"\\n      vg-buffering {\\n        display: none;\\n        z-index: 201;\\n      }\\n      vg-buffering.is-buffering {\\n        display: block;\\n      }\\n\\n      .vg-buffering {\\n        position: absolute;\\n        display: block;\\n        width: 100%;\\n        height: 100%;\\n      }\\n      .vg-buffering .bufferingContainer {\\n        width: 100%;\\n        position: absolute;\\n        cursor: pointer;\\n        top: 50%;\\n        margin-top: -50px;\\n        zoom: 1;\\n        filter: alpha(opacity=60);\\n        opacity: 0.6;\\n      }\\n      /* Loading Spinner\\n        * http://www.alessioatzeni.com/blog/css3-loading-animation-loop/\\n        */\\n      .vg-buffering .loadingSpinner {\\n        background-color: rgba(0, 0, 0, 0);\\n        border: 5px solid rgba(255, 255, 255, 1);\\n        opacity: 0.9;\\n        border-top: 5px solid rgba(0, 0, 0, 0);\\n        border-left: 5px solid rgba(0, 0, 0, 0);\\n        border-radius: 50px;\\n        box-shadow: 0 0 35px #ffffff;\\n        width: 50px;\\n        height: 50px;\\n        margin: 0 auto;\\n        -moz-animation: spin 0.5s infinite linear;\\n        -webkit-animation: spin 0.5s infinite linear;\\n      }\\n      .vg-buffering .loadingSpinner .stop {\\n        -webkit-animation-play-state: paused;\\n        -moz-animation-play-state: paused;\\n      }\\n      @-moz-keyframes spin {\\n        0% {\\n          -moz-transform: rotate(0deg);\\n        }\\n        100% {\\n          -moz-transform: rotate(360deg);\\n        }\\n      }\\n      @-moz-keyframes spinoff {\\n        0% {\\n          -moz-transform: rotate(0deg);\\n        }\\n        100% {\\n          -moz-transform: rotate(-360deg);\\n        }\\n      }\\n      @-webkit-keyframes spin {\\n        0% {\\n          -webkit-transform: rotate(0deg);\\n        }\\n        100% {\\n          -webkit-transform: rotate(360deg);\\n        }\\n      }\\n      @-webkit-keyframes spinoff {\\n        0% {\\n          -webkit-transform: rotate(0deg);\\n        }\\n        100% {\\n          -webkit-transform: rotate(-360deg);\\n        }\\n      }\\n    \"], encapsulation: 2 });\r\n/** @nocollapse */\r\nVgBufferingComponent.ctorParameters = () => [\r\n    { type: ElementRef },\r\n    { type: VgApiService }\r\n];\r\nVgBufferingComponent.propDecorators = {\r\n    vgFor: [{ type: Input }],\r\n    isBuffering: [{ type: HostBinding, args: ['class.is-buffering',] }]\r\n};\r\n/*@__PURE__*/ (function () { ɵngcc0.ɵsetClassMetadata(VgBufferingComponent, [{\r\n        type: Component,\r\n        args: [{\r\n                selector: 'vg-buffering',\r\n                encapsulation: ViewEncapsulation.None,\r\n                template: `<div class=\"vg-buffering\">\r\n    <div class=\"bufferingContainer\">\r\n      <div class=\"loadingSpinner\"></div>\r\n    </div>\r\n  </div>`,\r\n                styles: [`\r\n      vg-buffering {\r\n        display: none;\r\n        z-index: 201;\r\n      }\r\n      vg-buffering.is-buffering {\r\n        display: block;\r\n      }\r\n\r\n      .vg-buffering {\r\n        position: absolute;\r\n        display: block;\r\n        width: 100%;\r\n        height: 100%;\r\n      }\r\n      .vg-buffering .bufferingContainer {\r\n        width: 100%;\r\n        position: absolute;\r\n        cursor: pointer;\r\n        top: 50%;\r\n        margin-top: -50px;\r\n        zoom: 1;\r\n        filter: alpha(opacity=60);\r\n        opacity: 0.6;\r\n      }\r\n      /* Loading Spinner\r\n        * http://www.alessioatzeni.com/blog/css3-loading-animation-loop/\r\n        */\r\n      .vg-buffering .loadingSpinner {\r\n        background-color: rgba(0, 0, 0, 0);\r\n        border: 5px solid rgba(255, 255, 255, 1);\r\n        opacity: 0.9;\r\n        border-top: 5px solid rgba(0, 0, 0, 0);\r\n        border-left: 5px solid rgba(0, 0, 0, 0);\r\n        border-radius: 50px;\r\n        box-shadow: 0 0 35px #ffffff;\r\n        width: 50px;\r\n        height: 50px;\r\n        margin: 0 auto;\r\n        -moz-animation: spin 0.5s infinite linear;\r\n        -webkit-animation: spin 0.5s infinite linear;\r\n      }\r\n      .vg-buffering .loadingSpinner .stop {\r\n        -webkit-animation-play-state: paused;\r\n        -moz-animation-play-state: paused;\r\n      }\r\n      @-moz-keyframes spin {\r\n        0% {\r\n          -moz-transform: rotate(0deg);\r\n        }\r\n        100% {\r\n          -moz-transform: rotate(360deg);\r\n        }\r\n      }\r\n      @-moz-keyframes spinoff {\r\n        0% {\r\n          -moz-transform: rotate(0deg);\r\n        }\r\n        100% {\r\n          -moz-transform: rotate(-360deg);\r\n        }\r\n      }\r\n      @-webkit-keyframes spin {\r\n        0% {\r\n          -webkit-transform: rotate(0deg);\r\n        }\r\n        100% {\r\n          -webkit-transform: rotate(360deg);\r\n        }\r\n      }\r\n      @-webkit-keyframes spinoff {\r\n        0% {\r\n          -webkit-transform: rotate(0deg);\r\n        }\r\n        100% {\r\n          -webkit-transform: rotate(-360deg);\r\n        }\r\n      }\r\n    `]\r\n            }]\r\n    }], function () { return [{ type: ɵngcc0.ElementRef }, { type: ɵngcc1.VgApiService }]; }, { isBuffering: [{\r\n            type: HostBinding,\r\n            args: ['class.is-buffering']\r\n        }], vgFor: [{\r\n            type: Input\r\n        }] }); })();\r\nif (false) {\r\n    /** @type {?} */\r\n    VgBufferingComponent.prototype.vgFor;\r\n    /** @type {?} */\r\n    VgBufferingComponent.prototype.elem;\r\n    /** @type {?} */\r\n    VgBufferingComponent.prototype.target;\r\n    /** @type {?} */\r\n    VgBufferingComponent.prototype.checkInterval;\r\n    /** @type {?} */\r\n    VgBufferingComponent.prototype.currentPlayPos;\r\n    /** @type {?} */\r\n    VgBufferingComponent.prototype.lastPlayPos;\r\n    /** @type {?} */\r\n    VgBufferingComponent.prototype.subscriptions;\r\n    /** @type {?} */\r\n    VgBufferingComponent.prototype.isBuffering;\r\n    /** @type {?} */\r\n    VgBufferingComponent.prototype.API;\r\n}\r\n\r\n/**\r\n * @fileoverview added by tsickle\r\n * Generated from: lib/buffering.module.ts\r\n * @suppress {checkTypes,constantProperty,extraRequire,missingOverride,missingRequire,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\r\n */\r\nclass VgBufferingModule {\r\n}\r\nVgBufferingModule.ɵmod = ɵngcc0.ɵɵdefineNgModule({ type: VgBufferingModule });\r\nVgBufferingModule.ɵinj = ɵngcc0.ɵɵdefineInjector({ factory: function VgBufferingModule_Factory(t) { return new (t || VgBufferingModule)(); }, imports: [[CommonModule, VgCoreModule]] });\r\n(function () { (typeof ngJitMode === \"undefined\" || ngJitMode) && ɵngcc0.ɵɵsetNgModuleScope(VgBufferingModule, { declarations: function () { return [VgBufferingComponent]; }, imports: function () { return [CommonModule, VgCoreModule]; }, exports: function () { return [VgBufferingComponent]; } }); })();\r\n/*@__PURE__*/ (function () { ɵngcc0.ɵsetClassMetadata(VgBufferingModule, [{\r\n        type: NgModule,\r\n        args: [{\r\n                imports: [CommonModule, VgCoreModule],\r\n                declarations: [VgBufferingComponent],\r\n                exports: [VgBufferingComponent]\r\n            }]\r\n    }], null, null); })();\r\n\r\n/**\r\n * @fileoverview added by tsickle\r\n * Generated from: index.ts\r\n * @suppress {checkTypes,constantProperty,extraRequire,missingOverride,missingRequire,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\r\n */\r\n\r\n/**\r\n * @fileoverview added by tsickle\r\n * Generated from: videogular-ngx-videogular-buffering.ts\r\n * @suppress {checkTypes,constantProperty,extraRequire,missingOverride,missingRequire,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\r\n */\r\n\r\nexport { VgBufferingComponent, VgBufferingModule };\r\n\r\n//# sourceMappingURL=videogular-ngx-videogular-buffering.js.map","import { Component, ViewEncapsulation, ElementRef, Input, HostBinding, HostListener, NgModule } from '@angular/core';\r\nimport { CommonModule } from '@angular/common';\r\nimport { VgStates, VgApiService, VgFullscreenApiService, VgControlsHiddenService, VgCoreModule } from '@videogular/ngx-videogular/core';\r\n\r\n/**\r\n * @fileoverview added by tsickle\r\n * Generated from: lib/vg-overlay-play.component.ts\r\n * @suppress {checkTypes,constantProperty,extraRequire,missingOverride,missingRequire,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\r\n */\r\nimport * as ɵngcc0 from '@angular/core';\r\nimport * as ɵngcc1 from '@videogular/ngx-videogular/core';\r\nclass VgOverlayPlayComponent {\r\n    /**\r\n     * @param {?} ref\r\n     * @param {?} API\r\n     * @param {?} fsAPI\r\n     * @param {?} controlsHidden\r\n     */\r\n    constructor(ref, API, fsAPI, controlsHidden) {\r\n        this.API = API;\r\n        this.fsAPI = fsAPI;\r\n        this.controlsHidden = controlsHidden;\r\n        this.isNativeFullscreen = false;\r\n        this.areControlsHidden = false;\r\n        this.subscriptions = [];\r\n        this.isBuffering = false;\r\n        this.elem = ref.nativeElement;\r\n    }\r\n    /**\r\n     * @return {?}\r\n     */\r\n    ngOnInit() {\r\n        if (this.API.isPlayerReady) {\r\n            this.onPlayerReady();\r\n        }\r\n        else {\r\n            this.subscriptions.push(this.API.playerReadyEvent.subscribe((/**\r\n             * @return {?}\r\n             */\r\n            () => this.onPlayerReady())));\r\n        }\r\n    }\r\n    /**\r\n     * @return {?}\r\n     */\r\n    onPlayerReady() {\r\n        this.target = this.API.getMediaById(this.vgFor);\r\n        this.subscriptions.push(this.fsAPI.onChangeFullscreen.subscribe(this.onChangeFullscreen.bind(this)));\r\n        this.subscriptions.push(this.controlsHidden.isHidden.subscribe(this.onHideControls.bind(this)));\r\n        this.subscriptions.push(this.target.subscriptions.bufferDetected.subscribe((/**\r\n         * @param {?} isBuffering\r\n         * @return {?}\r\n         */\r\n        (isBuffering) => this.onUpdateBuffer(isBuffering))));\r\n    }\r\n    /**\r\n     * @param {?} isBuffering\r\n     * @return {?}\r\n     */\r\n    onUpdateBuffer(isBuffering) {\r\n        this.isBuffering = isBuffering;\r\n    }\r\n    /**\r\n     * @param {?} fsState\r\n     * @return {?}\r\n     */\r\n    onChangeFullscreen(fsState) {\r\n        if (this.fsAPI.nativeFullscreen) {\r\n            this.isNativeFullscreen = fsState;\r\n        }\r\n    }\r\n    /**\r\n     * @param {?} hidden\r\n     * @return {?}\r\n     */\r\n    onHideControls(hidden) {\r\n        this.areControlsHidden = hidden;\r\n    }\r\n    /**\r\n     * @return {?}\r\n     */\r\n    onClick() {\r\n        /** @type {?} */\r\n        const state = this.getState();\r\n        switch (state) {\r\n            case VgStates.VG_PLAYING:\r\n                this.target.pause();\r\n                break;\r\n            case VgStates.VG_PAUSED:\r\n            case VgStates.VG_ENDED:\r\n                this.target.play();\r\n                break;\r\n        }\r\n    }\r\n    /**\r\n     * @return {?}\r\n     */\r\n    getState() {\r\n        /** @type {?} */\r\n        let state = VgStates.VG_PAUSED;\r\n        if (this.target) {\r\n            if (this.target.state instanceof Array) {\r\n                for (let i = 0, l = this.target.state.length; i < l; i++) {\r\n                    if (this.target.state[i] === VgStates.VG_PLAYING) {\r\n                        state = VgStates.VG_PLAYING;\r\n                        break;\r\n                    }\r\n                }\r\n            }\r\n            else {\r\n                state = this.target.state;\r\n            }\r\n        }\r\n        return state;\r\n    }\r\n    /**\r\n     * @return {?}\r\n     */\r\n    ngOnDestroy() {\r\n        this.subscriptions.forEach((/**\r\n         * @param {?} s\r\n         * @return {?}\r\n         */\r\n        (s) => s.unsubscribe()));\r\n    }\r\n}\r\nVgOverlayPlayComponent.ɵfac = function VgOverlayPlayComponent_Factory(t) { return new (t || VgOverlayPlayComponent)(ɵngcc0.ɵɵdirectiveInject(ɵngcc0.ElementRef), ɵngcc0.ɵɵdirectiveInject(ɵngcc1.VgApiService), ɵngcc0.ɵɵdirectiveInject(ɵngcc1.VgFullscreenApiService), ɵngcc0.ɵɵdirectiveInject(ɵngcc1.VgControlsHiddenService)); };\r\nVgOverlayPlayComponent.ɵcmp = ɵngcc0.ɵɵdefineComponent({ type: VgOverlayPlayComponent, selectors: [[\"vg-overlay-play\"]], hostVars: 2, hostBindings: function VgOverlayPlayComponent_HostBindings(rf, ctx) { if (rf & 1) {\r\n        ɵngcc0.ɵɵlistener(\"click\", function VgOverlayPlayComponent_click_HostBindingHandler() { return ctx.onClick(); });\r\n    } if (rf & 2) {\r\n        ɵngcc0.ɵɵclassProp(\"is-buffering\", ctx.isBuffering);\r\n    } }, inputs: { vgFor: \"vgFor\" }, decls: 2, vars: 6, consts: [[1, \"vg-overlay-play\"], [1, \"overlay-play-container\"]], template: function VgOverlayPlayComponent_Template(rf, ctx) { if (rf & 1) {\r\n        ɵngcc0.ɵɵelementStart(0, \"div\", 0);\r\n        ɵngcc0.ɵɵelement(1, \"div\", 1);\r\n        ɵngcc0.ɵɵelementEnd();\r\n    } if (rf & 2) {\r\n        ɵngcc0.ɵɵclassProp(\"native-fullscreen\", ctx.isNativeFullscreen)(\"controls-hidden\", ctx.areControlsHidden);\r\n        ɵngcc0.ɵɵadvance(1);\r\n        ɵngcc0.ɵɵclassProp(\"vg-icon-play_arrow\", ctx.getState() !== \"playing\");\r\n    } }, styles: [\"\\n      vg-overlay-play {\\n        z-index: 200;\\n      }\\n      vg-overlay-play.is-buffering {\\n        display: none;\\n      }\\n      vg-overlay-play .vg-overlay-play {\\n        transition: all 0.5s;\\n        cursor: pointer;\\n        position: absolute;\\n        display: block;\\n        color: white;\\n        width: 100%;\\n        height: 100%;\\n        font-size: 80px;\\n        filter: alpha(opacity=60);\\n        opacity: 0.6;\\n      }\\n      vg-overlay-play .vg-overlay-play.native-fullscreen.controls-hidden {\\n        cursor: none;\\n      }\\n      vg-overlay-play\\n        .vg-overlay-play\\n        .overlay-play-container.vg-icon-play_arrow {\\n        pointer-events: none;\\n        width: 100%;\\n        height: 100%;\\n        position: absolute;\\n        display: flex;\\n        align-items: center;\\n        justify-content: center;\\n        font-size: 80px;\\n      }\\n      vg-overlay-play .vg-overlay-play:hover {\\n        filter: alpha(opacity=100);\\n        opacity: 1;\\n      }\\n      vg-overlay-play\\n        .vg-overlay-play:hover\\n        .overlay-play-container.vg-icon-play_arrow:before {\\n        transform: scale(1.2);\\n      }\\n    \"], encapsulation: 2 });\r\n/** @nocollapse */\r\nVgOverlayPlayComponent.ctorParameters = () => [\r\n    { type: ElementRef },\r\n    { type: VgApiService },\r\n    { type: VgFullscreenApiService },\r\n    { type: VgControlsHiddenService }\r\n];\r\nVgOverlayPlayComponent.propDecorators = {\r\n    vgFor: [{ type: Input }],\r\n    isBuffering: [{ type: HostBinding, args: ['class.is-buffering',] }],\r\n    onClick: [{ type: HostListener, args: ['click',] }]\r\n};\r\n/*@__PURE__*/ (function () { ɵngcc0.ɵsetClassMetadata(VgOverlayPlayComponent, [{\r\n        type: Component,\r\n        args: [{\r\n                selector: 'vg-overlay-play',\r\n                encapsulation: ViewEncapsulation.None,\r\n                template: `<div\r\n    class=\"vg-overlay-play\"\r\n    [class.native-fullscreen]=\"isNativeFullscreen\"\r\n    [class.controls-hidden]=\"areControlsHidden\"\r\n  >\r\n    <div\r\n      class=\"overlay-play-container\"\r\n      [class.vg-icon-play_arrow]=\"getState() !== 'playing'\"\r\n    ></div>\r\n  </div>`,\r\n                styles: [`\r\n      vg-overlay-play {\r\n        z-index: 200;\r\n      }\r\n      vg-overlay-play.is-buffering {\r\n        display: none;\r\n      }\r\n      vg-overlay-play .vg-overlay-play {\r\n        transition: all 0.5s;\r\n        cursor: pointer;\r\n        position: absolute;\r\n        display: block;\r\n        color: white;\r\n        width: 100%;\r\n        height: 100%;\r\n        font-size: 80px;\r\n        filter: alpha(opacity=60);\r\n        opacity: 0.6;\r\n      }\r\n      vg-overlay-play .vg-overlay-play.native-fullscreen.controls-hidden {\r\n        cursor: none;\r\n      }\r\n      vg-overlay-play\r\n        .vg-overlay-play\r\n        .overlay-play-container.vg-icon-play_arrow {\r\n        pointer-events: none;\r\n        width: 100%;\r\n        height: 100%;\r\n        position: absolute;\r\n        display: flex;\r\n        align-items: center;\r\n        justify-content: center;\r\n        font-size: 80px;\r\n      }\r\n      vg-overlay-play .vg-overlay-play:hover {\r\n        filter: alpha(opacity=100);\r\n        opacity: 1;\r\n      }\r\n      vg-overlay-play\r\n        .vg-overlay-play:hover\r\n        .overlay-play-container.vg-icon-play_arrow:before {\r\n        transform: scale(1.2);\r\n      }\r\n    `]\r\n            }]\r\n    }], function () { return [{ type: ɵngcc0.ElementRef }, { type: ɵngcc1.VgApiService }, { type: ɵngcc1.VgFullscreenApiService }, { type: ɵngcc1.VgControlsHiddenService }]; }, { isBuffering: [{\r\n            type: HostBinding,\r\n            args: ['class.is-buffering']\r\n        }], \r\n    /**\r\n     * @return {?}\r\n     */\r\n    onClick: [{\r\n            type: HostListener,\r\n            args: ['click']\r\n        }], vgFor: [{\r\n            type: Input\r\n        }] }); })();\r\nif (false) {\r\n    /** @type {?} */\r\n    VgOverlayPlayComponent.prototype.vgFor;\r\n    /** @type {?} */\r\n    VgOverlayPlayComponent.prototype.elem;\r\n    /** @type {?} */\r\n    VgOverlayPlayComponent.prototype.target;\r\n    /** @type {?} */\r\n    VgOverlayPlayComponent.prototype.isNativeFullscreen;\r\n    /** @type {?} */\r\n    VgOverlayPlayComponent.prototype.areControlsHidden;\r\n    /** @type {?} */\r\n    VgOverlayPlayComponent.prototype.subscriptions;\r\n    /** @type {?} */\r\n    VgOverlayPlayComponent.prototype.isBuffering;\r\n    /** @type {?} */\r\n    VgOverlayPlayComponent.prototype.API;\r\n    /** @type {?} */\r\n    VgOverlayPlayComponent.prototype.fsAPI;\r\n    /**\r\n     * @type {?}\r\n     * @private\r\n     */\r\n    VgOverlayPlayComponent.prototype.controlsHidden;\r\n}\r\n\r\n/**\r\n * @fileoverview added by tsickle\r\n * Generated from: lib/overlay-play.module.ts\r\n * @suppress {checkTypes,constantProperty,extraRequire,missingOverride,missingRequire,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\r\n */\r\nclass VgOverlayPlayModule {\r\n}\r\nVgOverlayPlayModule.ɵmod = ɵngcc0.ɵɵdefineNgModule({ type: VgOverlayPlayModule });\r\nVgOverlayPlayModule.ɵinj = ɵngcc0.ɵɵdefineInjector({ factory: function VgOverlayPlayModule_Factory(t) { return new (t || VgOverlayPlayModule)(); }, imports: [[CommonModule, VgCoreModule]] });\r\n(function () { (typeof ngJitMode === \"undefined\" || ngJitMode) && ɵngcc0.ɵɵsetNgModuleScope(VgOverlayPlayModule, { declarations: function () { return [VgOverlayPlayComponent]; }, imports: function () { return [CommonModule, VgCoreModule]; }, exports: function () { return [VgOverlayPlayComponent]; } }); })();\r\n/*@__PURE__*/ (function () { ɵngcc0.ɵsetClassMetadata(VgOverlayPlayModule, [{\r\n        type: NgModule,\r\n        args: [{\r\n                imports: [CommonModule, VgCoreModule],\r\n                declarations: [VgOverlayPlayComponent],\r\n                exports: [VgOverlayPlayComponent]\r\n            }]\r\n    }], null, null); })();\r\n\r\n/**\r\n * @fileoverview added by tsickle\r\n * Generated from: index.ts\r\n * @suppress {checkTypes,constantProperty,extraRequire,missingOverride,missingRequire,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\r\n */\r\n\r\n/**\r\n * @fileoverview added by tsickle\r\n * Generated from: videogular-ngx-videogular-overlay-play.ts\r\n * @suppress {checkTypes,constantProperty,extraRequire,missingOverride,missingRequire,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\r\n */\r\n\r\nexport { VgOverlayPlayComponent, VgOverlayPlayModule };\r\n\r\n//# sourceMappingURL=videogular-ngx-videogular-overlay-play.js.map","import { Observable, of, combineLatest, ReplaySubject } from 'rxjs';\r\nimport { delay, map, startWith } from 'rxjs/operators';\r\nimport { environment } from '../../environments/environment';\r\n\r\nexport class ShellModel {\r\n  isShell = false;\r\n}\r\n\r\nexport class DataStore<T> {\r\n  // We wait on purpose 2 secs on local environment when fetching from json to simulate the backend roundtrip.\r\n  // However, in production you should set this delay to 0 in the environment.prod file.\r\n  // tslint:disable-next-line:max-line-length\r\n  private networkDelay = (environment.appShellConfig && environment.appShellConfig.networkDelay) ? environment.appShellConfig.networkDelay : 0;\r\n\r\n  private timeline: ReplaySubject<T & ShellModel> = new ReplaySubject(1);\r\n\r\n  constructor(private shellModel: T) { }\r\n\r\n  // Static function with generics\r\n  // (ref: https://stackoverflow.com/a/24293088/1116959)\r\n  // Append a shell (T & ShellModel) to every value (T) emmited to the timeline\r\n  public static AppendShell<T>(dataObservable: Observable<T>, shellModel: T, networkDelay = 400): Observable<T & ShellModel> {\r\n    const delayObservable = of(true).pipe(\r\n      delay(networkDelay)\r\n    );\r\n\r\n    // Assign shell flag accordingly\r\n    // (ref: https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Object/assign)\r\n    return combineLatest([\r\n      delayObservable,\r\n      dataObservable\r\n    ]).pipe(\r\n      // Dismiss unnecessary delayValue\r\n      map(([delayValue, dataValue]: [boolean, T]): (T & ShellModel) => Object.assign(dataValue, {isShell: false})),\r\n      // Set the shell model as the initial value\r\n      startWith(Object.assign(shellModel, {isShell: true}))\r\n    );\r\n  }\r\n\r\n  load(dataSourceObservable: Observable<T>, networkDelay?: number): void {\r\n    // tslint:disable-next-line:no-shadowed-variable\r\n    const delay = (typeof networkDelay === 'number') ? networkDelay : this.networkDelay;\r\n\r\n    let processedDataSource: Observable<any>;\r\n\r\n    // If no network delay, then don't show shell\r\n    if (delay === 0) {\r\n      processedDataSource = dataSourceObservable;\r\n    } else {\r\n      processedDataSource = DataStore.AppendShell(dataSourceObservable, this.shellModel, delay);\r\n    }\r\n\r\n    processedDataSource\r\n    .subscribe((dataValue: T & ShellModel) => {\r\n      this.timeline.next(dataValue);\r\n    });\r\n  }\r\n\r\n  public get state(): Observable<T & ShellModel> {\r\n    return this.timeline.asObservable();\r\n  }\r\n}\r\n","import { Inject, Injectable, PLATFORM_ID } from '@angular/core';\r\nimport { HttpClient } from '@angular/common/http';\r\n\r\nimport { Observable } from 'rxjs';\r\nimport { VideoPlaylistModel } from './video-playlist.model';\r\nimport { DataStore } from '../shell/data-store';\r\nimport { TransferStateHelper } from '../utils/transfer-state-helper';\r\nimport { isPlatformServer } from '@angular/common';\r\n\r\n@Injectable()\r\nexport class VideoPlaylistService {\r\n\r\n  private videoPlaylistDataStore: DataStore<VideoPlaylistModel>;\r\n\r\n  constructor(\r\n    @Inject(PLATFORM_ID) private platformId: object,\r\n    private transferStateHelper: TransferStateHelper,\r\n    private http: HttpClient\r\n  ) { }\r\n\r\n  public getVideoPlaylistDataSource(): Observable<VideoPlaylistModel> {\r\n    const rawDataSource = this.http.get<VideoPlaylistModel>('./assets/sample-data/video-playlist/video-playlist.json');\r\n\r\n    // This method tapps into the raw data source and stores the resolved data in the TransferState, then when\r\n    // transitioning from the server rendered view to the browser, checks if we already loaded the data in the server to prevent\r\n    // duplicate http requests.\r\n    const cachedDataSource = this.transferStateHelper.checkDataSourceState('video-playlist-state', rawDataSource);\r\n\r\n    return cachedDataSource;\r\n  }\r\n\r\n  public getVideoPlaylistStore(dataSource: Observable<VideoPlaylistModel>): DataStore<VideoPlaylistModel> {\r\n    // Use cache if available\r\n    if (!this.videoPlaylistDataStore) {\r\n      // Initialize the model specifying that it is a shell model\r\n      const shellModel: VideoPlaylistModel = new VideoPlaylistModel();\r\n      this.videoPlaylistDataStore = new DataStore(shellModel);\r\n\r\n      // If running in the server, then don't add shell to the Data Store\r\n      // If we already loaded the Data Source in the server, then don't show a shell when transitioning back to the broswer from the server\r\n      if (isPlatformServer(this.platformId) || dataSource['ssr_state']) {\r\n        // Trigger loading mechanism with 0 delay (this will prevent the shell to be shown)\r\n        this.videoPlaylistDataStore.load(dataSource, 0);\r\n      } else { // On browser transitions\r\n        // Trigger the loading mechanism (with shell)\r\n        this.videoPlaylistDataStore.load(dataSource);\r\n      }\r\n    }\r\n\r\n    return this.videoPlaylistDataStore;\r\n  }\r\n}\r\n","import { Component, ViewEncapsulation, ElementRef, HostBinding, Input, ViewChild, HostListener, Pipe, EventEmitter, Output, ChangeDetectorRef, NgModule } from '@angular/core';\r\nimport { CommonModule } from '@angular/common';\r\nimport { fromEvent } from 'rxjs';\r\nimport { VgStates, VgApiService, VgControlsHiddenService, VgFullscreenApiService, VgCoreModule } from '@videogular/ngx-videogular/core';\r\n\r\n/**\r\n * @fileoverview added by tsickle\r\n * Generated from: lib/components/vg-controls/vg-controls.component.ts\r\n * @suppress {checkTypes,constantProperty,extraRequire,missingOverride,missingRequire,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\r\n */\r\nimport * as ɵngcc0 from '@angular/core';\r\nimport * as ɵngcc1 from '@videogular/ngx-videogular/core';\r\nimport * as ɵngcc2 from '@angular/common';\r\n\r\nconst _c0 = [\"*\"];\r\nconst _c1 = [\"volumeBar\"];\r\nconst _c2 = function (a0) { return { dragging: a0 }; };\r\nfunction VgTrackSelectorComponent_option_4_Template(rf, ctx) { if (rf & 1) {\r\n    ɵngcc0.ɵɵelementStart(0, \"option\", 4);\r\n    ɵngcc0.ɵɵtext(1);\r\n    ɵngcc0.ɵɵelementEnd();\r\n} if (rf & 2) {\r\n    const track_r1 = ctx.$implicit;\r\n    ɵngcc0.ɵɵproperty(\"value\", track_r1.id)(\"selected\", track_r1.selected === true);\r\n    ɵngcc0.ɵɵadvance(1);\r\n    ɵngcc0.ɵɵtextInterpolate1(\" \", track_r1.label, \" \");\r\n} }\r\nfunction VgTimeDisplayComponent_span_0_Template(rf, ctx) { if (rf & 1) {\r\n    ɵngcc0.ɵɵelementStart(0, \"span\");\r\n    ɵngcc0.ɵɵtext(1, \"LIVE\");\r\n    ɵngcc0.ɵɵelementEnd();\r\n} }\r\nfunction VgTimeDisplayComponent_span_1_Template(rf, ctx) { if (rf & 1) {\r\n    ɵngcc0.ɵɵelementStart(0, \"span\");\r\n    ɵngcc0.ɵɵtext(1);\r\n    ɵngcc0.ɵɵpipe(2, \"vgUtc\");\r\n    ɵngcc0.ɵɵelementEnd();\r\n} if (rf & 2) {\r\n    const ctx_r1 = ɵngcc0.ɵɵnextContext();\r\n    ɵngcc0.ɵɵadvance(1);\r\n    ɵngcc0.ɵɵtextInterpolate(ɵngcc0.ɵɵpipeBind2(2, 1, ctx_r1.getTime(), ctx_r1.vgFormat));\r\n} }\r\nfunction VgQualitySelectorComponent_option_4_Template(rf, ctx) { if (rf & 1) {\r\n    ɵngcc0.ɵɵelementStart(0, \"option\", 4);\r\n    ɵngcc0.ɵɵtext(1);\r\n    ɵngcc0.ɵɵelementEnd();\r\n} if (rf & 2) {\r\n    const bitrate_r1 = ctx.$implicit;\r\n    const ctx_r0 = ɵngcc0.ɵɵnextContext();\r\n    ɵngcc0.ɵɵproperty(\"value\", bitrate_r1.qualityIndex)(\"selected\", bitrate_r1.qualityIndex === (ctx_r0.bitrateSelected == null ? null : ctx_r0.bitrateSelected.qualityIndex));\r\n    ɵngcc0.ɵɵadvance(1);\r\n    ɵngcc0.ɵɵtextInterpolate1(\" \", bitrate_r1.label, \" \");\r\n} }\r\nfunction VgScrubBarCuePointsComponent_span_1_Template(rf, ctx) { if (rf & 1) {\r\n    ɵngcc0.ɵɵelement(0, \"span\", 2);\r\n} if (rf & 2) {\r\n    const cp_r1 = ctx.$implicit;\r\n    ɵngcc0.ɵɵstyleProp(\"width\", cp_r1.$$style == null ? null : cp_r1.$$style.width)(\"left\", cp_r1.$$style == null ? null : cp_r1.$$style.left);\r\n} }\r\nfunction VgScrubBarCurrentTimeComponent_span_1_Template(rf, ctx) { if (rf & 1) {\r\n    ɵngcc0.ɵɵelement(0, \"span\", 2);\r\n} }\r\nclass VgControlsComponent {\r\n    // @ts-ignore\r\n    /**\r\n     * @param {?} API\r\n     * @param {?} ref\r\n     * @param {?} hidden\r\n     */\r\n    constructor(API, ref, hidden) {\r\n        this.API = API;\r\n        this.hidden = hidden;\r\n        this.isAdsPlaying = 'initial';\r\n        this.hideControls = false;\r\n        this.vgAutohide = false;\r\n        this.vgAutohideTime = 3;\r\n        this.subscriptions = [];\r\n        this.elem = ref.nativeElement;\r\n    }\r\n    /**\r\n     * @return {?}\r\n     */\r\n    ngOnInit() {\r\n        this.mouseMove$ = fromEvent(this.API.videogularElement, 'mousemove');\r\n        this.subscriptions.push(this.mouseMove$.subscribe(this.show.bind(this)));\r\n        this.touchStart$ = fromEvent(this.API.videogularElement, 'touchstart');\r\n        this.subscriptions.push(this.touchStart$.subscribe(this.show.bind(this)));\r\n        if (this.API.isPlayerReady) {\r\n            this.onPlayerReady();\r\n        }\r\n        else {\r\n            this.subscriptions.push(this.API.playerReadyEvent.subscribe((/**\r\n             * @return {?}\r\n             */\r\n            () => this.onPlayerReady())));\r\n        }\r\n    }\r\n    /**\r\n     * @return {?}\r\n     */\r\n    onPlayerReady() {\r\n        this.target = this.API.getMediaById(this.vgFor);\r\n        this.subscriptions.push(this.target.subscriptions.play.subscribe(this.onPlay.bind(this)));\r\n        this.subscriptions.push(this.target.subscriptions.pause.subscribe(this.onPause.bind(this)));\r\n        this.subscriptions.push(this.target.subscriptions.startAds.subscribe(this.onStartAds.bind(this)));\r\n        this.subscriptions.push(this.target.subscriptions.endAds.subscribe(this.onEndAds.bind(this)));\r\n    }\r\n    /**\r\n     * @return {?}\r\n     */\r\n    ngAfterViewInit() {\r\n        if (this.vgAutohide) {\r\n            this.hide();\r\n        }\r\n        else {\r\n            this.show();\r\n        }\r\n    }\r\n    /**\r\n     * @return {?}\r\n     */\r\n    onPlay() {\r\n        if (this.vgAutohide) {\r\n            this.hide();\r\n        }\r\n    }\r\n    /**\r\n     * @return {?}\r\n     */\r\n    onPause() {\r\n        clearTimeout(this.timer);\r\n        this.hideControls = false;\r\n        this.hidden.state(false);\r\n    }\r\n    /**\r\n     * @return {?}\r\n     */\r\n    onStartAds() {\r\n        this.isAdsPlaying = 'none';\r\n    }\r\n    /**\r\n     * @return {?}\r\n     */\r\n    onEndAds() {\r\n        this.isAdsPlaying = 'initial';\r\n    }\r\n    /**\r\n     * @return {?}\r\n     */\r\n    hide() {\r\n        if (this.vgAutohide) {\r\n            clearTimeout(this.timer);\r\n            this.hideAsync();\r\n        }\r\n    }\r\n    /**\r\n     * @return {?}\r\n     */\r\n    show() {\r\n        clearTimeout(this.timer);\r\n        this.hideControls = false;\r\n        this.hidden.state(false);\r\n        if (this.vgAutohide) {\r\n            this.hideAsync();\r\n        }\r\n    }\r\n    /**\r\n     * @private\r\n     * @return {?}\r\n     */\r\n    hideAsync() {\r\n        if (this.API.state === VgStates.VG_PLAYING) {\r\n            this.timer = setTimeout((/**\r\n             * @return {?}\r\n             */\r\n            () => {\r\n                this.hideControls = true;\r\n                this.hidden.state(true);\r\n            }), this.vgAutohideTime * 1000);\r\n        }\r\n    }\r\n    /**\r\n     * @return {?}\r\n     */\r\n    ngOnDestroy() {\r\n        this.subscriptions.forEach((/**\r\n         * @param {?} s\r\n         * @return {?}\r\n         */\r\n        (s) => s.unsubscribe()));\r\n    }\r\n}\r\nVgControlsComponent.ɵfac = function VgControlsComponent_Factory(t) { return new (t || VgControlsComponent)(ɵngcc0.ɵɵdirectiveInject(ɵngcc1.VgApiService), ɵngcc0.ɵɵdirectiveInject(ɵngcc0.ElementRef), ɵngcc0.ɵɵdirectiveInject(ɵngcc1.VgControlsHiddenService)); };\r\nVgControlsComponent.ɵcmp = ɵngcc0.ɵɵdefineComponent({ type: VgControlsComponent, selectors: [[\"vg-controls\"]], hostVars: 4, hostBindings: function VgControlsComponent_HostBindings(rf, ctx) { if (rf & 2) {\r\n        ɵngcc0.ɵɵstyleProp(\"pointer-events\", ctx.isAdsPlaying);\r\n        ɵngcc0.ɵɵclassProp(\"hide\", ctx.hideControls);\r\n    } }, inputs: { vgAutohide: \"vgAutohide\", vgAutohideTime: \"vgAutohideTime\", vgFor: \"vgFor\" }, ngContentSelectors: _c0, decls: 1, vars: 0, template: function VgControlsComponent_Template(rf, ctx) { if (rf & 1) {\r\n        ɵngcc0.ɵɵprojectionDef();\r\n        ɵngcc0.ɵɵprojection(0);\r\n    } }, styles: [\"\\n      vg-controls {\\n        position: absolute;\\n        display: flex;\\n        width: 100%;\\n        height: 50px;\\n        z-index: 300;\\n        bottom: 0;\\n        background-color: rgba(0, 0, 0, 0.5);\\n        -webkit-transition: bottom 1s;\\n        -khtml-transition: bottom 1s;\\n        -moz-transition: bottom 1s;\\n        -ms-transition: bottom 1s;\\n        transition: bottom 1s;\\n      }\\n      vg-controls.hide {\\n        bottom: -50px;\\n      }\\n    \"], encapsulation: 2 });\r\n/** @nocollapse */\r\nVgControlsComponent.ctorParameters = () => [\r\n    { type: VgApiService },\r\n    { type: ElementRef },\r\n    { type: VgControlsHiddenService }\r\n];\r\nVgControlsComponent.propDecorators = {\r\n    isAdsPlaying: [{ type: HostBinding, args: ['style.pointer-events',] }],\r\n    hideControls: [{ type: HostBinding, args: ['class.hide',] }],\r\n    vgFor: [{ type: Input }],\r\n    vgAutohide: [{ type: Input }],\r\n    vgAutohideTime: [{ type: Input }]\r\n};\r\n/*@__PURE__*/ (function () { ɵngcc0.ɵsetClassMetadata(VgControlsComponent, [{\r\n        type: Component,\r\n        args: [{\r\n                selector: 'vg-controls',\r\n                encapsulation: ViewEncapsulation.None,\r\n                template: `<ng-content></ng-content>`,\r\n                styles: [`\r\n      vg-controls {\r\n        position: absolute;\r\n        display: flex;\r\n        width: 100%;\r\n        height: 50px;\r\n        z-index: 300;\r\n        bottom: 0;\r\n        background-color: rgba(0, 0, 0, 0.5);\r\n        -webkit-transition: bottom 1s;\r\n        -khtml-transition: bottom 1s;\r\n        -moz-transition: bottom 1s;\r\n        -ms-transition: bottom 1s;\r\n        transition: bottom 1s;\r\n      }\r\n      vg-controls.hide {\r\n        bottom: -50px;\r\n      }\r\n    `]\r\n            }]\r\n    }], function () { return [{ type: ɵngcc1.VgApiService }, { type: ɵngcc0.ElementRef }, { type: ɵngcc1.VgControlsHiddenService }]; }, { isAdsPlaying: [{\r\n            type: HostBinding,\r\n            args: ['style.pointer-events']\r\n        }], hideControls: [{\r\n            type: HostBinding,\r\n            args: ['class.hide']\r\n        }], vgAutohide: [{\r\n            type: Input\r\n        }], vgAutohideTime: [{\r\n            type: Input\r\n        }], vgFor: [{\r\n            type: Input\r\n        }] }); })();\r\nif (false) {\r\n    /** @type {?} */\r\n    VgControlsComponent.prototype.elem;\r\n    /** @type {?} */\r\n    VgControlsComponent.prototype.target;\r\n    /** @type {?} */\r\n    VgControlsComponent.prototype.isAdsPlaying;\r\n    /** @type {?} */\r\n    VgControlsComponent.prototype.hideControls;\r\n    /** @type {?} */\r\n    VgControlsComponent.prototype.vgFor;\r\n    /** @type {?} */\r\n    VgControlsComponent.prototype.vgAutohide;\r\n    /** @type {?} */\r\n    VgControlsComponent.prototype.vgAutohideTime;\r\n    /**\r\n     * @type {?}\r\n     * @private\r\n     */\r\n    VgControlsComponent.prototype.timer;\r\n    /** @type {?} */\r\n    VgControlsComponent.prototype.mouseMove$;\r\n    /** @type {?} */\r\n    VgControlsComponent.prototype.touchStart$;\r\n    /** @type {?} */\r\n    VgControlsComponent.prototype.subscriptions;\r\n    /**\r\n     * @type {?}\r\n     * @private\r\n     */\r\n    VgControlsComponent.prototype.API;\r\n    /**\r\n     * @type {?}\r\n     * @private\r\n     */\r\n    VgControlsComponent.prototype.hidden;\r\n}\r\n\r\n/**\r\n * @fileoverview added by tsickle\r\n * Generated from: lib/components/vg-volume/vg-volume.component.ts\r\n * @suppress {checkTypes,constantProperty,extraRequire,missingOverride,missingRequire,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\r\n */\r\nclass VgVolumeComponent {\r\n    /**\r\n     * @param {?} ref\r\n     * @param {?} API\r\n     */\r\n    constructor(ref, API) {\r\n        this.API = API;\r\n        this.subscriptions = [];\r\n        this.elem = ref.nativeElement;\r\n        this.isDragging = false;\r\n    }\r\n    /**\r\n     * @return {?}\r\n     */\r\n    ngOnInit() {\r\n        if (this.API.isPlayerReady) {\r\n            this.onPlayerReady();\r\n        }\r\n        else {\r\n            this.subscriptions.push(this.API.playerReadyEvent.subscribe((/**\r\n             * @return {?}\r\n             */\r\n            () => this.onPlayerReady())));\r\n        }\r\n    }\r\n    /**\r\n     * @return {?}\r\n     */\r\n    onPlayerReady() {\r\n        this.target = this.API.getMediaById(this.vgFor);\r\n        this.ariaValue = this.getVolume() * 100;\r\n    }\r\n    /**\r\n     * @param {?} event\r\n     * @return {?}\r\n     */\r\n    onClick(event) {\r\n        this.setVolume(this.calculateVolume(event.clientX));\r\n    }\r\n    /**\r\n     * @param {?} event\r\n     * @return {?}\r\n     */\r\n    onMouseDown(event) {\r\n        this.mouseDownPosX = event.clientX;\r\n        this.isDragging = true;\r\n    }\r\n    /**\r\n     * @param {?} event\r\n     * @return {?}\r\n     */\r\n    onDrag(event) {\r\n        if (this.isDragging) {\r\n            this.setVolume(this.calculateVolume(event.clientX));\r\n        }\r\n    }\r\n    /**\r\n     * @param {?} event\r\n     * @return {?}\r\n     */\r\n    onStopDrag(event) {\r\n        if (this.isDragging) {\r\n            this.isDragging = false;\r\n            if (this.mouseDownPosX === event.clientX) {\r\n                this.setVolume(this.calculateVolume(event.clientX));\r\n            }\r\n        }\r\n    }\r\n    /**\r\n     * @param {?} event\r\n     * @return {?}\r\n     */\r\n    arrowAdjustVolume(event) {\r\n        if (event.keyCode === 38 || event.keyCode === 39) {\r\n            event.preventDefault();\r\n            this.setVolume(Math.max(0, Math.min(100, this.getVolume() * 100 + 10)));\r\n        }\r\n        else if (event.keyCode === 37 || event.keyCode === 40) {\r\n            event.preventDefault();\r\n            this.setVolume(Math.max(0, Math.min(100, this.getVolume() * 100 - 10)));\r\n        }\r\n    }\r\n    /**\r\n     * @param {?} mousePosX\r\n     * @return {?}\r\n     */\r\n    calculateVolume(mousePosX) {\r\n        /** @type {?} */\r\n        const recObj = this.volumeBarRef.nativeElement.getBoundingClientRect();\r\n        /** @type {?} */\r\n        const volumeBarOffsetLeft = recObj.left;\r\n        /** @type {?} */\r\n        const volumeBarWidth = recObj.width;\r\n        return ((mousePosX - volumeBarOffsetLeft) / volumeBarWidth) * 100;\r\n    }\r\n    /**\r\n     * @param {?} vol\r\n     * @return {?}\r\n     */\r\n    setVolume(vol) {\r\n        this.target.volume = Math.max(0, Math.min(1, vol / 100));\r\n        this.ariaValue = this.target.volume * 100;\r\n    }\r\n    /**\r\n     * @return {?}\r\n     */\r\n    getVolume() {\r\n        return this.target ? this.target.volume : 0;\r\n    }\r\n    /**\r\n     * @return {?}\r\n     */\r\n    ngOnDestroy() {\r\n        this.subscriptions.forEach((/**\r\n         * @param {?} s\r\n         * @return {?}\r\n         */\r\n        (s) => s.unsubscribe()));\r\n    }\r\n}\r\nVgVolumeComponent.ɵfac = function VgVolumeComponent_Factory(t) { return new (t || VgVolumeComponent)(ɵngcc0.ɵɵdirectiveInject(ɵngcc0.ElementRef), ɵngcc0.ɵɵdirectiveInject(ɵngcc1.VgApiService)); };\r\nVgVolumeComponent.ɵcmp = ɵngcc0.ɵɵdefineComponent({ type: VgVolumeComponent, selectors: [[\"vg-volume\"]], viewQuery: function VgVolumeComponent_Query(rf, ctx) { if (rf & 1) {\r\n        ɵngcc0.ɵɵstaticViewQuery(_c1, true);\r\n    } if (rf & 2) {\r\n        var _t;\r\n        ɵngcc0.ɵɵqueryRefresh(_t = ɵngcc0.ɵɵloadQuery()) && (ctx.volumeBarRef = _t.first);\r\n    } }, hostBindings: function VgVolumeComponent_HostBindings(rf, ctx) { if (rf & 1) {\r\n        ɵngcc0.ɵɵlistener(\"mousemove\", function VgVolumeComponent_mousemove_HostBindingHandler($event) { return ctx.onDrag($event); }, false, ɵngcc0.ɵɵresolveDocument)(\"mouseup\", function VgVolumeComponent_mouseup_HostBindingHandler($event) { return ctx.onStopDrag($event); }, false, ɵngcc0.ɵɵresolveDocument)(\"keydown\", function VgVolumeComponent_keydown_HostBindingHandler($event) { return ctx.arrowAdjustVolume($event); });\r\n    } }, inputs: { vgFor: \"vgFor\" }, decls: 5, vars: 9, consts: [[\"tabindex\", \"0\", \"role\", \"slider\", \"aria-label\", \"volume level\", \"aria-level\", \"polite\", \"aria-valuemin\", \"0\", \"aria-valuemax\", \"100\", \"aria-orientation\", \"horizontal\", 1, \"volumeBar\", 3, \"click\", \"mousedown\"], [\"volumeBar\", \"\"], [1, \"volumeBackground\", 3, \"ngClass\"], [1, \"volumeValue\"], [1, \"volumeKnob\"]], template: function VgVolumeComponent_Template(rf, ctx) { if (rf & 1) {\r\n        ɵngcc0.ɵɵelementStart(0, \"div\", 0, 1);\r\n        ɵngcc0.ɵɵlistener(\"click\", function VgVolumeComponent_Template_div_click_0_listener($event) { return ctx.onClick($event); })(\"mousedown\", function VgVolumeComponent_Template_div_mousedown_0_listener($event) { return ctx.onMouseDown($event); });\r\n        ɵngcc0.ɵɵelementStart(2, \"div\", 2);\r\n        ɵngcc0.ɵɵelement(3, \"div\", 3);\r\n        ɵngcc0.ɵɵelement(4, \"div\", 4);\r\n        ɵngcc0.ɵɵelementEnd();\r\n        ɵngcc0.ɵɵelementEnd();\r\n    } if (rf & 2) {\r\n        ɵngcc0.ɵɵattribute(\"aria-valuenow\", ctx.ariaValue)(\"aria-valuetext\", ctx.ariaValue + \"%\");\r\n        ɵngcc0.ɵɵadvance(2);\r\n        ɵngcc0.ɵɵproperty(\"ngClass\", ɵngcc0.ɵɵpureFunction1(7, _c2, ctx.isDragging));\r\n        ɵngcc0.ɵɵadvance(1);\r\n        ɵngcc0.ɵɵstyleProp(\"width\", ctx.getVolume() * (100 - 15) + \"%\");\r\n        ɵngcc0.ɵɵadvance(1);\r\n        ɵngcc0.ɵɵstyleProp(\"left\", ctx.getVolume() * (100 - 15) + \"%\");\r\n    } }, directives: [ɵngcc2.NgClass], styles: [\"\\n      vg-volume {\\n        -webkit-touch-callout: none;\\n        -webkit-user-select: none;\\n        -moz-user-select: none;\\n        -ms-user-select: none;\\n        user-select: none;\\n        display: flex;\\n        justify-content: center;\\n        height: 50px;\\n        width: 100px;\\n        cursor: pointer;\\n        color: white;\\n        line-height: 50px;\\n      }\\n      vg-volume .volumeBar {\\n        position: relative;\\n        display: flex;\\n        flex-grow: 1;\\n        align-items: center;\\n      }\\n      vg-volume .volumeBackground {\\n        display: flex;\\n        flex-grow: 1;\\n        height: 5px;\\n        pointer-events: none;\\n        background-color: #333;\\n      }\\n      vg-volume .volumeValue {\\n        display: flex;\\n        height: 5px;\\n        pointer-events: none;\\n        background-color: #fff;\\n        transition: all 0.2s ease-out;\\n      }\\n      vg-volume .volumeKnob {\\n        position: absolute;\\n        width: 15px;\\n        height: 15px;\\n        left: 0;\\n        top: 50%;\\n        transform: translateY(-50%);\\n        border-radius: 15px;\\n        pointer-events: none;\\n        background-color: #fff;\\n        transition: all 0.2s ease-out;\\n      }\\n      vg-volume .volumeBackground.dragging .volumeValue,\\n      vg-volume .volumeBackground.dragging .volumeKnob {\\n        transition: none;\\n      }\\n    \"], encapsulation: 2 });\r\n/** @nocollapse */\r\nVgVolumeComponent.ctorParameters = () => [\r\n    { type: ElementRef },\r\n    { type: VgApiService }\r\n];\r\nVgVolumeComponent.propDecorators = {\r\n    vgFor: [{ type: Input }],\r\n    volumeBarRef: [{ type: ViewChild, args: ['volumeBar', { static: true },] }],\r\n    onDrag: [{ type: HostListener, args: ['document:mousemove', ['$event'],] }],\r\n    onStopDrag: [{ type: HostListener, args: ['document:mouseup', ['$event'],] }],\r\n    arrowAdjustVolume: [{ type: HostListener, args: ['keydown', ['$event'],] }]\r\n};\r\n/*@__PURE__*/ (function () { ɵngcc0.ɵsetClassMetadata(VgVolumeComponent, [{\r\n        type: Component,\r\n        args: [{\r\n                selector: 'vg-volume',\r\n                encapsulation: ViewEncapsulation.None,\r\n                template: `\r\n    <div\r\n      #volumeBar\r\n      class=\"volumeBar\"\r\n      tabindex=\"0\"\r\n      role=\"slider\"\r\n      aria-label=\"volume level\"\r\n      aria-level=\"polite\"\r\n      [attr.aria-valuenow]=\"ariaValue\"\r\n      aria-valuemin=\"0\"\r\n      aria-valuemax=\"100\"\r\n      aria-orientation=\"horizontal\"\r\n      [attr.aria-valuetext]=\"ariaValue + '%'\"\r\n      (click)=\"onClick($event)\"\r\n      (mousedown)=\"onMouseDown($event)\"\r\n    >\r\n      <div class=\"volumeBackground\" [ngClass]=\"{ dragging: isDragging }\">\r\n        <div\r\n          class=\"volumeValue\"\r\n          [style.width]=\"getVolume() * (100 - 15) + '%'\"\r\n        ></div>\r\n        <div\r\n          class=\"volumeKnob\"\r\n          [style.left]=\"getVolume() * (100 - 15) + '%'\"\r\n        ></div>\r\n      </div>\r\n    </div>\r\n  `,\r\n                styles: [`\r\n      vg-volume {\r\n        -webkit-touch-callout: none;\r\n        -webkit-user-select: none;\r\n        -moz-user-select: none;\r\n        -ms-user-select: none;\r\n        user-select: none;\r\n        display: flex;\r\n        justify-content: center;\r\n        height: 50px;\r\n        width: 100px;\r\n        cursor: pointer;\r\n        color: white;\r\n        line-height: 50px;\r\n      }\r\n      vg-volume .volumeBar {\r\n        position: relative;\r\n        display: flex;\r\n        flex-grow: 1;\r\n        align-items: center;\r\n      }\r\n      vg-volume .volumeBackground {\r\n        display: flex;\r\n        flex-grow: 1;\r\n        height: 5px;\r\n        pointer-events: none;\r\n        background-color: #333;\r\n      }\r\n      vg-volume .volumeValue {\r\n        display: flex;\r\n        height: 5px;\r\n        pointer-events: none;\r\n        background-color: #fff;\r\n        transition: all 0.2s ease-out;\r\n      }\r\n      vg-volume .volumeKnob {\r\n        position: absolute;\r\n        width: 15px;\r\n        height: 15px;\r\n        left: 0;\r\n        top: 50%;\r\n        transform: translateY(-50%);\r\n        border-radius: 15px;\r\n        pointer-events: none;\r\n        background-color: #fff;\r\n        transition: all 0.2s ease-out;\r\n      }\r\n      vg-volume .volumeBackground.dragging .volumeValue,\r\n      vg-volume .volumeBackground.dragging .volumeKnob {\r\n        transition: none;\r\n      }\r\n    `]\r\n            }]\r\n    }], function () { return [{ type: ɵngcc0.ElementRef }, { type: ɵngcc1.VgApiService }]; }, { \r\n    /**\r\n     * @param {?} event\r\n     * @return {?}\r\n     */\r\n    onDrag: [{\r\n            type: HostListener,\r\n            args: ['document:mousemove', ['$event']]\r\n        }], \r\n    /**\r\n     * @param {?} event\r\n     * @return {?}\r\n     */\r\n    onStopDrag: [{\r\n            type: HostListener,\r\n            args: ['document:mouseup', ['$event']]\r\n        }], \r\n    /**\r\n     * @param {?} event\r\n     * @return {?}\r\n     */\r\n    arrowAdjustVolume: [{\r\n            type: HostListener,\r\n            args: ['keydown', ['$event']]\r\n        }], vgFor: [{\r\n            type: Input\r\n        }], volumeBarRef: [{\r\n            type: ViewChild,\r\n            args: ['volumeBar', { static: true }]\r\n        }] }); })();\r\nif (false) {\r\n    /** @type {?} */\r\n    VgVolumeComponent.prototype.vgFor;\r\n    /** @type {?} */\r\n    VgVolumeComponent.prototype.volumeBarRef;\r\n    /** @type {?} */\r\n    VgVolumeComponent.prototype.elem;\r\n    /** @type {?} */\r\n    VgVolumeComponent.prototype.target;\r\n    /** @type {?} */\r\n    VgVolumeComponent.prototype.isDragging;\r\n    /** @type {?} */\r\n    VgVolumeComponent.prototype.mouseDownPosX;\r\n    /** @type {?} */\r\n    VgVolumeComponent.prototype.ariaValue;\r\n    /** @type {?} */\r\n    VgVolumeComponent.prototype.subscriptions;\r\n    /** @type {?} */\r\n    VgVolumeComponent.prototype.API;\r\n}\r\n\r\n/**\r\n * @fileoverview added by tsickle\r\n * Generated from: lib/components/vg-track-selector/vg-track-selector.component.ts\r\n * @suppress {checkTypes,constantProperty,extraRequire,missingOverride,missingRequire,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\r\n */\r\n/**\r\n * @record\r\n */\r\nfunction Option() { }\r\nif (false) {\r\n    /** @type {?} */\r\n    Option.prototype.id;\r\n    /** @type {?} */\r\n    Option.prototype.label;\r\n    /** @type {?} */\r\n    Option.prototype.selected;\r\n}\r\nclass VgTrackSelectorComponent {\r\n    /**\r\n     * @param {?} ref\r\n     * @param {?} API\r\n     */\r\n    constructor(ref, API) {\r\n        this.API = API;\r\n        this.subscriptions = [];\r\n        this.elem = ref.nativeElement;\r\n    }\r\n    /**\r\n     * @return {?}\r\n     */\r\n    ngOnInit() {\r\n        if (this.API.isPlayerReady) {\r\n            this.onPlayerReady();\r\n        }\r\n        else {\r\n            this.subscriptions.push(this.API.playerReadyEvent.subscribe((/**\r\n             * @return {?}\r\n             */\r\n            () => this.onPlayerReady())));\r\n        }\r\n    }\r\n    /**\r\n     * @return {?}\r\n     */\r\n    onPlayerReady() {\r\n        this.target = this.API.getMediaById(this.vgFor);\r\n        /** @type {?} */\r\n        const subs = Array.from(((/** @type {?} */ (this.API.getMasterMedia().elem))).children)\r\n            .filter((/**\r\n         * @param {?} item\r\n         * @return {?}\r\n         */\r\n        (item) => item.tagName === 'TRACK'))\r\n            .filter((/**\r\n         * @param {?} item\r\n         * @return {?}\r\n         */\r\n        (item) => item.kind === 'subtitles'))\r\n            .map((/**\r\n         * @param {?} item\r\n         * @return {?}\r\n         */\r\n        (item) => ({\r\n            label: item.label,\r\n            selected: item.default === true,\r\n            id: item.srclang,\r\n        })));\r\n        this.tracks = [\r\n            ...subs,\r\n            {\r\n                id: null,\r\n                label: 'Off',\r\n                selected: subs.every((/**\r\n                 * @param {?} item\r\n                 * @return {?}\r\n                 */\r\n                (item) => item.selected === false)),\r\n            },\r\n        ];\r\n        /** @type {?} */\r\n        const track = this.tracks.filter((/**\r\n         * @param {?} item\r\n         * @return {?}\r\n         */\r\n        (item) => item.selected === true))[0];\r\n        this.trackSelected = track.id;\r\n        this.ariaValue = track.label;\r\n    }\r\n    /**\r\n     * @param {?} trackId\r\n     * @return {?}\r\n     */\r\n    selectTrack(trackId) {\r\n        this.trackSelected = trackId === 'null' ? null : trackId;\r\n        this.ariaValue = 'No track selected';\r\n        Array.from(((/** @type {?} */ (this.API.getMasterMedia().elem))).textTracks).forEach((/**\r\n         * @param {?} item\r\n         * @return {?}\r\n         */\r\n        (item) => {\r\n            if (item.language === trackId) {\r\n                this.ariaValue = item.label;\r\n                item.mode = 'showing';\r\n            }\r\n            else {\r\n                item.mode = 'hidden';\r\n            }\r\n        }));\r\n    }\r\n    /**\r\n     * @return {?}\r\n     */\r\n    ngOnDestroy() {\r\n        this.subscriptions.forEach((/**\r\n         * @param {?} s\r\n         * @return {?}\r\n         */\r\n        (s) => s.unsubscribe()));\r\n    }\r\n}\r\nVgTrackSelectorComponent.ɵfac = function VgTrackSelectorComponent_Factory(t) { return new (t || VgTrackSelectorComponent)(ɵngcc0.ɵɵdirectiveInject(ɵngcc0.ElementRef), ɵngcc0.ɵɵdirectiveInject(ɵngcc1.VgApiService)); };\r\nVgTrackSelectorComponent.ɵcmp = ɵngcc0.ɵɵdefineComponent({ type: VgTrackSelectorComponent, selectors: [[\"vg-track-selector\"]], inputs: { vgFor: \"vgFor\" }, decls: 5, vars: 5, consts: [[1, \"container\"], [1, \"track-selected\"], [\"tabindex\", \"0\", \"aria-label\", \"track selector\", 1, \"trackSelector\", 3, \"change\"], [3, \"value\", \"selected\", 4, \"ngFor\", \"ngForOf\"], [3, \"value\", \"selected\"]], template: function VgTrackSelectorComponent_Template(rf, ctx) { if (rf & 1) {\r\n        ɵngcc0.ɵɵelementStart(0, \"div\", 0);\r\n        ɵngcc0.ɵɵelementStart(1, \"div\", 1);\r\n        ɵngcc0.ɵɵtext(2);\r\n        ɵngcc0.ɵɵelementEnd();\r\n        ɵngcc0.ɵɵelementStart(3, \"select\", 2);\r\n        ɵngcc0.ɵɵlistener(\"change\", function VgTrackSelectorComponent_Template_select_change_3_listener($event) { return ctx.selectTrack($event.target.value); });\r\n        ɵngcc0.ɵɵtemplate(4, VgTrackSelectorComponent_option_4_Template, 2, 3, \"option\", 3);\r\n        ɵngcc0.ɵɵelementEnd();\r\n        ɵngcc0.ɵɵelementEnd();\r\n    } if (rf & 2) {\r\n        ɵngcc0.ɵɵadvance(1);\r\n        ɵngcc0.ɵɵclassProp(\"vg-icon-closed_caption\", !ctx.trackSelected);\r\n        ɵngcc0.ɵɵadvance(1);\r\n        ɵngcc0.ɵɵtextInterpolate1(\" \", ctx.trackSelected || \"\", \" \");\r\n        ɵngcc0.ɵɵadvance(1);\r\n        ɵngcc0.ɵɵattribute(\"aria-valuetext\", ctx.ariaValue);\r\n        ɵngcc0.ɵɵadvance(1);\r\n        ɵngcc0.ɵɵproperty(\"ngForOf\", ctx.tracks);\r\n    } }, directives: [ɵngcc2.NgForOf], styles: [\"\\n      vg-track-selector {\\n        -webkit-touch-callout: none;\\n        -webkit-user-select: none;\\n        -moz-user-select: none;\\n        -ms-user-select: none;\\n        user-select: none;\\n        display: flex;\\n        justify-content: center;\\n        width: 50px;\\n        height: 50px;\\n        cursor: pointer;\\n        color: white;\\n        line-height: 50px;\\n      }\\n      vg-track-selector .container {\\n        position: relative;\\n        display: flex;\\n        flex-grow: 1;\\n        align-items: center;\\n        padding: 0;\\n        margin: 5px;\\n      }\\n      vg-track-selector select.trackSelector {\\n        width: 50px;\\n        padding: 5px 8px;\\n        border: none;\\n        background: none;\\n        -webkit-appearance: none;\\n        -moz-appearance: none;\\n        appearance: none;\\n        color: transparent;\\n        font-size: 16px;\\n      }\\n      vg-track-selector select.trackSelector::-ms-expand {\\n        display: none;\\n      }\\n      vg-track-selector select.trackSelector option {\\n        color: #000;\\n      }\\n      vg-track-selector .track-selected {\\n        position: absolute;\\n        width: 100%;\\n        height: 50px;\\n        top: -6px;\\n        text-align: center;\\n        text-transform: uppercase;\\n        font-family: Helvetica Neue, Helvetica, Arial, sans-serif;\\n        padding-top: 2px;\\n        pointer-events: none;\\n      }\\n      vg-track-selector .vg-icon-closed_caption:before {\\n        width: 100%;\\n      }\\n    \"], encapsulation: 2 });\r\n/** @nocollapse */\r\nVgTrackSelectorComponent.ctorParameters = () => [\r\n    { type: ElementRef },\r\n    { type: VgApiService }\r\n];\r\nVgTrackSelectorComponent.propDecorators = {\r\n    vgFor: [{ type: Input }]\r\n};\r\n/*@__PURE__*/ (function () { ɵngcc0.ɵsetClassMetadata(VgTrackSelectorComponent, [{\r\n        type: Component,\r\n        args: [{\r\n                selector: 'vg-track-selector',\r\n                encapsulation: ViewEncapsulation.None,\r\n                template: `\r\n    <div class=\"container\">\r\n      <div\r\n        class=\"track-selected\"\r\n        [class.vg-icon-closed_caption]=\"!trackSelected\"\r\n      >\r\n        {{ trackSelected || '' }}\r\n      </div>\r\n      <select\r\n        class=\"trackSelector\"\r\n        (change)=\"selectTrack($event.target.value)\"\r\n        tabindex=\"0\"\r\n        aria-label=\"track selector\"\r\n        [attr.aria-valuetext]=\"ariaValue\"\r\n      >\r\n        <option\r\n          *ngFor=\"let track of tracks\"\r\n          [value]=\"track.id\"\r\n          [selected]=\"track.selected === true\"\r\n        >\r\n          {{ track.label }}\r\n        </option>\r\n      </select>\r\n    </div>\r\n  `,\r\n                styles: [`\r\n      vg-track-selector {\r\n        -webkit-touch-callout: none;\r\n        -webkit-user-select: none;\r\n        -moz-user-select: none;\r\n        -ms-user-select: none;\r\n        user-select: none;\r\n        display: flex;\r\n        justify-content: center;\r\n        width: 50px;\r\n        height: 50px;\r\n        cursor: pointer;\r\n        color: white;\r\n        line-height: 50px;\r\n      }\r\n      vg-track-selector .container {\r\n        position: relative;\r\n        display: flex;\r\n        flex-grow: 1;\r\n        align-items: center;\r\n        padding: 0;\r\n        margin: 5px;\r\n      }\r\n      vg-track-selector select.trackSelector {\r\n        width: 50px;\r\n        padding: 5px 8px;\r\n        border: none;\r\n        background: none;\r\n        -webkit-appearance: none;\r\n        -moz-appearance: none;\r\n        appearance: none;\r\n        color: transparent;\r\n        font-size: 16px;\r\n      }\r\n      vg-track-selector select.trackSelector::-ms-expand {\r\n        display: none;\r\n      }\r\n      vg-track-selector select.trackSelector option {\r\n        color: #000;\r\n      }\r\n      vg-track-selector .track-selected {\r\n        position: absolute;\r\n        width: 100%;\r\n        height: 50px;\r\n        top: -6px;\r\n        text-align: center;\r\n        text-transform: uppercase;\r\n        font-family: Helvetica Neue, Helvetica, Arial, sans-serif;\r\n        padding-top: 2px;\r\n        pointer-events: none;\r\n      }\r\n      vg-track-selector .vg-icon-closed_caption:before {\r\n        width: 100%;\r\n      }\r\n    `]\r\n            }]\r\n    }], function () { return [{ type: ɵngcc0.ElementRef }, { type: ɵngcc1.VgApiService }]; }, { vgFor: [{\r\n            type: Input\r\n        }] }); })();\r\nif (false) {\r\n    /** @type {?} */\r\n    VgTrackSelectorComponent.prototype.vgFor;\r\n    /** @type {?} */\r\n    VgTrackSelectorComponent.prototype.elem;\r\n    /** @type {?} */\r\n    VgTrackSelectorComponent.prototype.target;\r\n    /** @type {?} */\r\n    VgTrackSelectorComponent.prototype.tracks;\r\n    /** @type {?} */\r\n    VgTrackSelectorComponent.prototype.trackSelected;\r\n    /** @type {?} */\r\n    VgTrackSelectorComponent.prototype.subscriptions;\r\n    /** @type {?} */\r\n    VgTrackSelectorComponent.prototype.ariaValue;\r\n    /** @type {?} */\r\n    VgTrackSelectorComponent.prototype.API;\r\n}\r\n\r\n/**\r\n * @fileoverview added by tsickle\r\n * Generated from: lib/components/vg-time-display/vg-time-display.component.ts\r\n * @suppress {checkTypes,constantProperty,extraRequire,missingOverride,missingRequire,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\r\n */\r\n// Workaround until we can use UTC with Angular Date Pipe\r\nclass VgUtcPipe {\r\n    /**\r\n     * @param {?} value\r\n     * @param {?} format\r\n     * @return {?}\r\n     */\r\n    transform(value, format) {\r\n        /** @type {?} */\r\n        let date = new Date(value);\r\n        /** @type {?} */\r\n        let result = format;\r\n        /** @type {?} */\r\n        let ss = date.getUTCSeconds();\r\n        /** @type {?} */\r\n        let mm = date.getUTCMinutes();\r\n        /** @type {?} */\r\n        let hh = date.getUTCHours();\r\n        if (ss < 10) {\r\n            ss = '0' + ss;\r\n        }\r\n        if (mm < 10) {\r\n            mm = '0' + mm;\r\n        }\r\n        if (hh < 10) {\r\n            hh = '0' + hh;\r\n        }\r\n        result = result.replace(/ss/g, (/** @type {?} */ (ss)));\r\n        result = result.replace(/mm/g, (/** @type {?} */ (mm)));\r\n        result = result.replace(/hh/g, (/** @type {?} */ (hh)));\r\n        return result;\r\n    }\r\n}\r\nVgUtcPipe.ɵfac = function VgUtcPipe_Factory(t) { return new (t || VgUtcPipe)(); };\r\nVgUtcPipe.ɵpipe = ɵngcc0.ɵɵdefinePipe({ name: \"vgUtc\", type: VgUtcPipe, pure: true });\r\n/*@__PURE__*/ (function () { ɵngcc0.ɵsetClassMetadata(VgUtcPipe, [{\r\n        type: Pipe,\r\n        args: [{ name: 'vgUtc' }]\r\n    }], null, null); })();\r\nclass VgTimeDisplayComponent {\r\n    /**\r\n     * @param {?} ref\r\n     * @param {?} API\r\n     */\r\n    constructor(ref, API) {\r\n        this.API = API;\r\n        this.vgProperty = 'current';\r\n        this.vgFormat = 'mm:ss';\r\n        this.subscriptions = [];\r\n        this.elem = ref.nativeElement;\r\n    }\r\n    /**\r\n     * @return {?}\r\n     */\r\n    ngOnInit() {\r\n        if (this.API.isPlayerReady) {\r\n            this.onPlayerReady();\r\n        }\r\n        else {\r\n            this.subscriptions.push(this.API.playerReadyEvent.subscribe((/**\r\n             * @return {?}\r\n             */\r\n            () => this.onPlayerReady())));\r\n        }\r\n    }\r\n    /**\r\n     * @return {?}\r\n     */\r\n    onPlayerReady() {\r\n        this.target = this.API.getMediaById(this.vgFor);\r\n    }\r\n    /**\r\n     * @return {?}\r\n     */\r\n    getTime() {\r\n        /** @type {?} */\r\n        let t = 0;\r\n        if (this.target) {\r\n            t = Math.round(this.target.time[this.vgProperty]);\r\n            t = isNaN(t) || this.target.isLive ? 0 : t;\r\n        }\r\n        return t;\r\n    }\r\n    /**\r\n     * @return {?}\r\n     */\r\n    ngOnDestroy() {\r\n        this.subscriptions.forEach((/**\r\n         * @param {?} s\r\n         * @return {?}\r\n         */\r\n        (s) => s.unsubscribe()));\r\n    }\r\n}\r\nVgTimeDisplayComponent.ɵfac = function VgTimeDisplayComponent_Factory(t) { return new (t || VgTimeDisplayComponent)(ɵngcc0.ɵɵdirectiveInject(ɵngcc0.ElementRef), ɵngcc0.ɵɵdirectiveInject(ɵngcc1.VgApiService)); };\r\nVgTimeDisplayComponent.ɵcmp = ɵngcc0.ɵɵdefineComponent({ type: VgTimeDisplayComponent, selectors: [[\"vg-time-display\"]], inputs: { vgProperty: \"vgProperty\", vgFormat: \"vgFormat\", vgFor: \"vgFor\" }, ngContentSelectors: _c0, decls: 3, vars: 2, consts: [[4, \"ngIf\"]], template: function VgTimeDisplayComponent_Template(rf, ctx) { if (rf & 1) {\r\n        ɵngcc0.ɵɵprojectionDef();\r\n        ɵngcc0.ɵɵtemplate(0, VgTimeDisplayComponent_span_0_Template, 2, 0, \"span\", 0);\r\n        ɵngcc0.ɵɵtemplate(1, VgTimeDisplayComponent_span_1_Template, 3, 4, \"span\", 0);\r\n        ɵngcc0.ɵɵprojection(2);\r\n    } if (rf & 2) {\r\n        ɵngcc0.ɵɵproperty(\"ngIf\", ctx.target == null ? null : ctx.target.isLive);\r\n        ɵngcc0.ɵɵadvance(1);\r\n        ɵngcc0.ɵɵproperty(\"ngIf\", !(ctx.target == null ? null : ctx.target.isLive));\r\n    } }, directives: [ɵngcc2.NgIf], pipes: [VgUtcPipe], styles: [\"\\n      vg-time-display {\\n        -webkit-touch-callout: none;\\n        -webkit-user-select: none;\\n        -moz-user-select: none;\\n        -ms-user-select: none;\\n        user-select: none;\\n        display: flex;\\n        justify-content: center;\\n        height: 50px;\\n        width: 60px;\\n        cursor: pointer;\\n        color: white;\\n        line-height: 50px;\\n        pointer-events: none;\\n        font-family: Helvetica Neue, Helvetica, Arial, sans-serif;\\n      }\\n    \"], encapsulation: 2 });\r\n/** @nocollapse */\r\nVgTimeDisplayComponent.ctorParameters = () => [\r\n    { type: ElementRef },\r\n    { type: VgApiService }\r\n];\r\nVgTimeDisplayComponent.propDecorators = {\r\n    vgFor: [{ type: Input }],\r\n    vgProperty: [{ type: Input }],\r\n    vgFormat: [{ type: Input }]\r\n};\r\n/*@__PURE__*/ (function () { ɵngcc0.ɵsetClassMetadata(VgTimeDisplayComponent, [{\r\n        type: Component,\r\n        args: [{\r\n                selector: 'vg-time-display',\r\n                encapsulation: ViewEncapsulation.None,\r\n                template: `\r\n    <span *ngIf=\"target?.isLive\">LIVE</span>\r\n    <span *ngIf=\"!target?.isLive\">{{ getTime() | vgUtc: vgFormat }}</span>\r\n    <ng-content></ng-content>\r\n  `,\r\n                styles: [`\r\n      vg-time-display {\r\n        -webkit-touch-callout: none;\r\n        -webkit-user-select: none;\r\n        -moz-user-select: none;\r\n        -ms-user-select: none;\r\n        user-select: none;\r\n        display: flex;\r\n        justify-content: center;\r\n        height: 50px;\r\n        width: 60px;\r\n        cursor: pointer;\r\n        color: white;\r\n        line-height: 50px;\r\n        pointer-events: none;\r\n        font-family: Helvetica Neue, Helvetica, Arial, sans-serif;\r\n      }\r\n    `]\r\n            }]\r\n    }], function () { return [{ type: ɵngcc0.ElementRef }, { type: ɵngcc1.VgApiService }]; }, { vgProperty: [{\r\n            type: Input\r\n        }], vgFormat: [{\r\n            type: Input\r\n        }], vgFor: [{\r\n            type: Input\r\n        }] }); })();\r\nif (false) {\r\n    /** @type {?} */\r\n    VgTimeDisplayComponent.prototype.vgFor;\r\n    /** @type {?} */\r\n    VgTimeDisplayComponent.prototype.vgProperty;\r\n    /** @type {?} */\r\n    VgTimeDisplayComponent.prototype.vgFormat;\r\n    /** @type {?} */\r\n    VgTimeDisplayComponent.prototype.elem;\r\n    /** @type {?} */\r\n    VgTimeDisplayComponent.prototype.target;\r\n    /** @type {?} */\r\n    VgTimeDisplayComponent.prototype.subscriptions;\r\n    /** @type {?} */\r\n    VgTimeDisplayComponent.prototype.API;\r\n}\r\n\r\n/**\r\n * @fileoverview added by tsickle\r\n * Generated from: lib/components/vg-scrub-bar/vg-scrub-bar.component.ts\r\n * @suppress {checkTypes,constantProperty,extraRequire,missingOverride,missingRequire,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\r\n */\r\nclass VgScrubBarComponent {\r\n    /**\r\n     * @param {?} ref\r\n     * @param {?} API\r\n     * @param {?} vgControlsHiddenState\r\n     */\r\n    constructor(ref, API, vgControlsHiddenState) {\r\n        this.API = API;\r\n        this.hideScrubBar = false;\r\n        this.vgSlider = true;\r\n        this.isSeeking = false;\r\n        this.wasPlaying = false;\r\n        this.subscriptions = [];\r\n        this.elem = ref.nativeElement;\r\n        this.subscriptions.push(vgControlsHiddenState.isHidden.subscribe((/**\r\n         * @param {?} hide\r\n         * @return {?}\r\n         */\r\n        (hide) => this.onHideScrubBar(hide))));\r\n    }\r\n    /**\r\n     * @return {?}\r\n     */\r\n    ngOnInit() {\r\n        if (this.API.isPlayerReady) {\r\n            this.onPlayerReady();\r\n        }\r\n        else {\r\n            this.subscriptions.push(this.API.playerReadyEvent.subscribe((/**\r\n             * @return {?}\r\n             */\r\n            () => this.onPlayerReady())));\r\n        }\r\n    }\r\n    /**\r\n     * @return {?}\r\n     */\r\n    onPlayerReady() {\r\n        this.target = this.API.getMediaById(this.vgFor);\r\n    }\r\n    /**\r\n     * @protected\r\n     * @return {?}\r\n     */\r\n    seekStart() {\r\n        if (this.target.canPlay) {\r\n            this.isSeeking = true;\r\n            if (this.target.state === VgStates.VG_PLAYING) {\r\n                this.wasPlaying = true;\r\n            }\r\n            this.target.pause();\r\n        }\r\n    }\r\n    /**\r\n     * @protected\r\n     * @param {?} offset\r\n     * @return {?}\r\n     */\r\n    seekMove(offset) {\r\n        if (this.isSeeking) {\r\n            /** @type {?} */\r\n            const percentage = Math.max(Math.min((offset * 100) / this.elem.scrollWidth, 99.9), 0);\r\n            this.target.time.current = (percentage * this.target.time.total) / 100;\r\n            this.target.seekTime(percentage, true);\r\n        }\r\n    }\r\n    /**\r\n     * @protected\r\n     * @param {?} offset\r\n     * @return {?}\r\n     */\r\n    seekEnd(offset) {\r\n        this.isSeeking = false;\r\n        if (this.target.canPlay) {\r\n            /** @type {?} */\r\n            const percentage = Math.max(Math.min((offset * 100) / this.elem.scrollWidth, 99.9), 0);\r\n            this.target.seekTime(percentage, true);\r\n            if (this.wasPlaying) {\r\n                this.wasPlaying = false;\r\n                this.target.play();\r\n            }\r\n        }\r\n    }\r\n    /**\r\n     * @protected\r\n     * @return {?}\r\n     */\r\n    touchEnd() {\r\n        this.isSeeking = false;\r\n        if (this.wasPlaying) {\r\n            this.wasPlaying = false;\r\n            this.target.play();\r\n        }\r\n    }\r\n    /**\r\n     * @protected\r\n     * @param {?} event\r\n     * @return {?}\r\n     */\r\n    getTouchOffset(event) {\r\n        /** @type {?} */\r\n        let offsetLeft = 0;\r\n        /** @type {?} */\r\n        let element = event.target;\r\n        while (element) {\r\n            offsetLeft += element.offsetLeft;\r\n            element = element.offsetParent;\r\n        }\r\n        return event.touches[0].pageX - offsetLeft;\r\n    }\r\n    /**\r\n     * @param {?} $event\r\n     * @return {?}\r\n     */\r\n    onMouseDownScrubBar($event) {\r\n        if (this.target) {\r\n            if (!this.target.isLive) {\r\n                if (!this.vgSlider) {\r\n                    this.seekEnd($event.offsetX);\r\n                }\r\n                else {\r\n                    this.seekStart();\r\n                }\r\n            }\r\n        }\r\n    }\r\n    /**\r\n     * @param {?} $event\r\n     * @return {?}\r\n     */\r\n    onMouseMoveScrubBar($event) {\r\n        if (this.target) {\r\n            if (!this.target.isLive && this.vgSlider && this.isSeeking) {\r\n                this.seekMove($event.offsetX);\r\n            }\r\n        }\r\n    }\r\n    /**\r\n     * @param {?} $event\r\n     * @return {?}\r\n     */\r\n    onMouseUpScrubBar($event) {\r\n        if (this.target) {\r\n            if (!this.target.isLive && this.vgSlider && this.isSeeking) {\r\n                this.seekEnd($event.offsetX);\r\n            }\r\n        }\r\n    }\r\n    /**\r\n     * @param {?} $event\r\n     * @return {?}\r\n     */\r\n    onTouchStartScrubBar($event) {\r\n        if (this.target) {\r\n            if (!this.target.isLive) {\r\n                if (!this.vgSlider) {\r\n                    this.seekEnd(this.getTouchOffset($event));\r\n                }\r\n                else {\r\n                    this.seekStart();\r\n                }\r\n            }\r\n        }\r\n    }\r\n    /**\r\n     * @param {?} $event\r\n     * @return {?}\r\n     */\r\n    onTouchMoveScrubBar($event) {\r\n        if (this.target) {\r\n            if (!this.target.isLive && this.vgSlider && this.isSeeking) {\r\n                this.seekMove(this.getTouchOffset($event));\r\n            }\r\n        }\r\n    }\r\n    // @ts-ignore\r\n    /**\r\n     * @param {?} _$event\r\n     * @return {?}\r\n     */\r\n    onTouchCancelScrubBar(_$event) {\r\n        if (this.target) {\r\n            if (!this.target.isLive && this.vgSlider && this.isSeeking) {\r\n                this.touchEnd();\r\n            }\r\n        }\r\n    }\r\n    // @ts-ignore\r\n    /**\r\n     * @param {?} _$event\r\n     * @return {?}\r\n     */\r\n    onTouchEndScrubBar(_$event) {\r\n        if (this.target) {\r\n            if (!this.target.isLive && this.vgSlider && this.isSeeking) {\r\n                this.touchEnd();\r\n            }\r\n        }\r\n    }\r\n    /**\r\n     * @param {?} event\r\n     * @return {?}\r\n     */\r\n    arrowAdjustVolume(event) {\r\n        if (this.target) {\r\n            if (event.keyCode === 38 || event.keyCode === 39) {\r\n                event.preventDefault();\r\n                this.target.seekTime((this.target.time.current + 5000) / 1000, false);\r\n            }\r\n            else if (event.keyCode === 37 || event.keyCode === 40) {\r\n                event.preventDefault();\r\n                this.target.seekTime((this.target.time.current - 5000) / 1000, false);\r\n            }\r\n        }\r\n    }\r\n    /**\r\n     * @return {?}\r\n     */\r\n    getPercentage() {\r\n        return this.target\r\n            ? Math.round((this.target.time.current * 100) / this.target.time.total) + '%'\r\n            : '0%';\r\n    }\r\n    /**\r\n     * @param {?} hide\r\n     * @return {?}\r\n     */\r\n    onHideScrubBar(hide) {\r\n        this.hideScrubBar = hide;\r\n    }\r\n    /**\r\n     * @return {?}\r\n     */\r\n    ngOnDestroy() {\r\n        this.subscriptions.forEach((/**\r\n         * @param {?} s\r\n         * @return {?}\r\n         */\r\n        (s) => s.unsubscribe()));\r\n    }\r\n}\r\nVgScrubBarComponent.ɵfac = function VgScrubBarComponent_Factory(t) { return new (t || VgScrubBarComponent)(ɵngcc0.ɵɵdirectiveInject(ɵngcc0.ElementRef), ɵngcc0.ɵɵdirectiveInject(ɵngcc1.VgApiService), ɵngcc0.ɵɵdirectiveInject(ɵngcc1.VgControlsHiddenService)); };\r\nVgScrubBarComponent.ɵcmp = ɵngcc0.ɵɵdefineComponent({ type: VgScrubBarComponent, selectors: [[\"vg-scrub-bar\"]], hostVars: 2, hostBindings: function VgScrubBarComponent_HostBindings(rf, ctx) { if (rf & 1) {\r\n        ɵngcc0.ɵɵlistener(\"mousedown\", function VgScrubBarComponent_mousedown_HostBindingHandler($event) { return ctx.onMouseDownScrubBar($event); })(\"mousemove\", function VgScrubBarComponent_mousemove_HostBindingHandler($event) { return ctx.onMouseMoveScrubBar($event); }, false, ɵngcc0.ɵɵresolveDocument)(\"mouseup\", function VgScrubBarComponent_mouseup_HostBindingHandler($event) { return ctx.onMouseUpScrubBar($event); }, false, ɵngcc0.ɵɵresolveDocument)(\"touchstart\", function VgScrubBarComponent_touchstart_HostBindingHandler($event) { return ctx.onTouchStartScrubBar($event); })(\"touchmove\", function VgScrubBarComponent_touchmove_HostBindingHandler($event) { return ctx.onTouchMoveScrubBar($event); }, false, ɵngcc0.ɵɵresolveDocument)(\"touchcancel\", function VgScrubBarComponent_touchcancel_HostBindingHandler($event) { return ctx.onTouchCancelScrubBar($event); }, false, ɵngcc0.ɵɵresolveDocument)(\"touchend\", function VgScrubBarComponent_touchend_HostBindingHandler($event) { return ctx.onTouchEndScrubBar($event); }, false, ɵngcc0.ɵɵresolveDocument)(\"keydown\", function VgScrubBarComponent_keydown_HostBindingHandler($event) { return ctx.arrowAdjustVolume($event); });\r\n    } if (rf & 2) {\r\n        ɵngcc0.ɵɵclassProp(\"hide\", ctx.hideScrubBar);\r\n    } }, inputs: { vgSlider: \"vgSlider\", vgFor: \"vgFor\" }, ngContentSelectors: _c0, decls: 2, vars: 2, consts: [[\"tabindex\", \"0\", \"role\", \"slider\", \"aria-label\", \"scrub bar\", \"aria-level\", \"polite\", \"aria-valuemin\", \"0\", \"aria-valuemax\", \"100\", 1, \"scrubBar\"]], template: function VgScrubBarComponent_Template(rf, ctx) { if (rf & 1) {\r\n        ɵngcc0.ɵɵprojectionDef();\r\n        ɵngcc0.ɵɵelementStart(0, \"div\", 0);\r\n        ɵngcc0.ɵɵprojection(1);\r\n        ɵngcc0.ɵɵelementEnd();\r\n    } if (rf & 2) {\r\n        ɵngcc0.ɵɵattribute(\"aria-valuenow\", ctx.getPercentage())(\"aria-valuetext\", ctx.getPercentage());\r\n    } }, styles: [\"\\n      vg-scrub-bar {\\n        -webkit-touch-callout: none;\\n        -webkit-user-select: none;\\n        -moz-user-select: none;\\n        -ms-user-select: none;\\n        user-select: none;\\n        position: absolute;\\n        width: 100%;\\n        height: 5px;\\n        bottom: 50px;\\n        margin: 0;\\n        cursor: pointer;\\n        align-items: center;\\n        background: rgba(0, 0, 0, 0.75);\\n        z-index: 250;\\n        -webkit-transition: bottom 1s, opacity 0.5s;\\n        -khtml-transition: bottom 1s, opacity 0.5s;\\n        -moz-transition: bottom 1s, opacity 0.5s;\\n        -ms-transition: bottom 1s, opacity 0.5s;\\n        transition: bottom 1s, opacity 0.5s;\\n      }\\n      vg-scrub-bar .scrubBar {\\n        position: relative;\\n        display: flex;\\n        flex-grow: 1;\\n        align-items: center;\\n        height: 100%;\\n      }\\n      vg-controls vg-scrub-bar {\\n        position: relative;\\n        bottom: 0;\\n        background: transparent;\\n        height: 50px;\\n        flex-grow: 1;\\n        flex-basis: 0;\\n        margin: 0 10px;\\n        -webkit-transition: initial;\\n        -khtml-transition: initial;\\n        -moz-transition: initial;\\n        -ms-transition: initial;\\n        transition: initial;\\n      }\\n      vg-scrub-bar.hide {\\n        bottom: 0;\\n        opacity: 0;\\n      }\\n      vg-controls vg-scrub-bar.hide {\\n        bottom: initial;\\n        opacity: initial;\\n      }\\n    \"], encapsulation: 2 });\r\n/** @nocollapse */\r\nVgScrubBarComponent.ctorParameters = () => [\r\n    { type: ElementRef },\r\n    { type: VgApiService },\r\n    { type: VgControlsHiddenService }\r\n];\r\nVgScrubBarComponent.propDecorators = {\r\n    hideScrubBar: [{ type: HostBinding, args: ['class.hide',] }],\r\n    vgFor: [{ type: Input }],\r\n    vgSlider: [{ type: Input }],\r\n    onMouseDownScrubBar: [{ type: HostListener, args: ['mousedown', ['$event'],] }],\r\n    onMouseMoveScrubBar: [{ type: HostListener, args: ['document:mousemove', ['$event'],] }],\r\n    onMouseUpScrubBar: [{ type: HostListener, args: ['document:mouseup', ['$event'],] }],\r\n    onTouchStartScrubBar: [{ type: HostListener, args: ['touchstart', ['$event'],] }],\r\n    onTouchMoveScrubBar: [{ type: HostListener, args: ['document:touchmove', ['$event'],] }],\r\n    onTouchCancelScrubBar: [{ type: HostListener, args: ['document:touchcancel', ['$event'],] }],\r\n    onTouchEndScrubBar: [{ type: HostListener, args: ['document:touchend', ['$event'],] }],\r\n    arrowAdjustVolume: [{ type: HostListener, args: ['keydown', ['$event'],] }]\r\n};\r\n/*@__PURE__*/ (function () { ɵngcc0.ɵsetClassMetadata(VgScrubBarComponent, [{\r\n        type: Component,\r\n        args: [{\r\n                selector: 'vg-scrub-bar',\r\n                encapsulation: ViewEncapsulation.None,\r\n                template: `\r\n    <div\r\n      class=\"scrubBar\"\r\n      tabindex=\"0\"\r\n      role=\"slider\"\r\n      aria-label=\"scrub bar\"\r\n      aria-level=\"polite\"\r\n      [attr.aria-valuenow]=\"getPercentage()\"\r\n      aria-valuemin=\"0\"\r\n      aria-valuemax=\"100\"\r\n      [attr.aria-valuetext]=\"getPercentage()\"\r\n    >\r\n      <ng-content></ng-content>\r\n    </div>\r\n  `,\r\n                styles: [`\r\n      vg-scrub-bar {\r\n        -webkit-touch-callout: none;\r\n        -webkit-user-select: none;\r\n        -moz-user-select: none;\r\n        -ms-user-select: none;\r\n        user-select: none;\r\n        position: absolute;\r\n        width: 100%;\r\n        height: 5px;\r\n        bottom: 50px;\r\n        margin: 0;\r\n        cursor: pointer;\r\n        align-items: center;\r\n        background: rgba(0, 0, 0, 0.75);\r\n        z-index: 250;\r\n        -webkit-transition: bottom 1s, opacity 0.5s;\r\n        -khtml-transition: bottom 1s, opacity 0.5s;\r\n        -moz-transition: bottom 1s, opacity 0.5s;\r\n        -ms-transition: bottom 1s, opacity 0.5s;\r\n        transition: bottom 1s, opacity 0.5s;\r\n      }\r\n      vg-scrub-bar .scrubBar {\r\n        position: relative;\r\n        display: flex;\r\n        flex-grow: 1;\r\n        align-items: center;\r\n        height: 100%;\r\n      }\r\n      vg-controls vg-scrub-bar {\r\n        position: relative;\r\n        bottom: 0;\r\n        background: transparent;\r\n        height: 50px;\r\n        flex-grow: 1;\r\n        flex-basis: 0;\r\n        margin: 0 10px;\r\n        -webkit-transition: initial;\r\n        -khtml-transition: initial;\r\n        -moz-transition: initial;\r\n        -ms-transition: initial;\r\n        transition: initial;\r\n      }\r\n      vg-scrub-bar.hide {\r\n        bottom: 0;\r\n        opacity: 0;\r\n      }\r\n      vg-controls vg-scrub-bar.hide {\r\n        bottom: initial;\r\n        opacity: initial;\r\n      }\r\n    `]\r\n            }]\r\n    }], function () { return [{ type: ɵngcc0.ElementRef }, { type: ɵngcc1.VgApiService }, { type: ɵngcc1.VgControlsHiddenService }]; }, { hideScrubBar: [{\r\n            type: HostBinding,\r\n            args: ['class.hide']\r\n        }], vgSlider: [{\r\n            type: Input\r\n        }], \r\n    /**\r\n     * @param {?} $event\r\n     * @return {?}\r\n     */\r\n    onMouseDownScrubBar: [{\r\n            type: HostListener,\r\n            args: ['mousedown', ['$event']]\r\n        }], \r\n    /**\r\n     * @param {?} $event\r\n     * @return {?}\r\n     */\r\n    onMouseMoveScrubBar: [{\r\n            type: HostListener,\r\n            args: ['document:mousemove', ['$event']]\r\n        }], \r\n    /**\r\n     * @param {?} $event\r\n     * @return {?}\r\n     */\r\n    onMouseUpScrubBar: [{\r\n            type: HostListener,\r\n            args: ['document:mouseup', ['$event']]\r\n        }], \r\n    /**\r\n     * @param {?} $event\r\n     * @return {?}\r\n     */\r\n    onTouchStartScrubBar: [{\r\n            type: HostListener,\r\n            args: ['touchstart', ['$event']]\r\n        }], \r\n    /**\r\n     * @param {?} $event\r\n     * @return {?}\r\n     */\r\n    onTouchMoveScrubBar: [{\r\n            type: HostListener,\r\n            args: ['document:touchmove', ['$event']]\r\n        }], \r\n    // @ts-ignore\r\n    /**\r\n     * @param {?} _$event\r\n     * @return {?}\r\n     */\r\n    onTouchCancelScrubBar: [{\r\n            type: HostListener,\r\n            args: ['document:touchcancel', ['$event']]\r\n        }], \r\n    // @ts-ignore\r\n    /**\r\n     * @param {?} _$event\r\n     * @return {?}\r\n     */\r\n    onTouchEndScrubBar: [{\r\n            type: HostListener,\r\n            args: ['document:touchend', ['$event']]\r\n        }], \r\n    /**\r\n     * @param {?} event\r\n     * @return {?}\r\n     */\r\n    arrowAdjustVolume: [{\r\n            type: HostListener,\r\n            args: ['keydown', ['$event']]\r\n        }], vgFor: [{\r\n            type: Input\r\n        }] }); })();\r\nif (false) {\r\n    /** @type {?} */\r\n    VgScrubBarComponent.prototype.hideScrubBar;\r\n    /** @type {?} */\r\n    VgScrubBarComponent.prototype.vgFor;\r\n    /** @type {?} */\r\n    VgScrubBarComponent.prototype.vgSlider;\r\n    /** @type {?} */\r\n    VgScrubBarComponent.prototype.elem;\r\n    /** @type {?} */\r\n    VgScrubBarComponent.prototype.target;\r\n    /** @type {?} */\r\n    VgScrubBarComponent.prototype.isSeeking;\r\n    /** @type {?} */\r\n    VgScrubBarComponent.prototype.wasPlaying;\r\n    /** @type {?} */\r\n    VgScrubBarComponent.prototype.subscriptions;\r\n    /** @type {?} */\r\n    VgScrubBarComponent.prototype.API;\r\n}\r\n\r\n/**\r\n * @fileoverview added by tsickle\r\n * Generated from: lib/components/vg-quality-selector/vg-quality-selector.component.ts\r\n * @suppress {checkTypes,constantProperty,extraRequire,missingOverride,missingRequire,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\r\n */\r\nclass VgQualitySelectorComponent {\r\n    /**\r\n     * @param {?} ref\r\n     * @param {?} API\r\n     */\r\n    constructor(ref, API) {\r\n        this.API = API;\r\n        this.onBitrateChange = new EventEmitter();\r\n        this.subscriptions = [];\r\n        this.elem = ref.nativeElement;\r\n    }\r\n    /**\r\n     * @return {?}\r\n     */\r\n    ngOnInit() { }\r\n    /**\r\n     * @param {?} changes\r\n     * @return {?}\r\n     */\r\n    ngOnChanges(changes) {\r\n        if (changes.bitrates.currentValue && changes.bitrates.currentValue.length) {\r\n            this.bitrates.forEach((/**\r\n             * @param {?} item\r\n             * @return {?}\r\n             */\r\n            (item) => (item.label =\r\n                item.label || Math.round(item.bitrate / 1000).toString())));\r\n        }\r\n    }\r\n    /**\r\n     * @param {?} index\r\n     * @return {?}\r\n     */\r\n    selectBitrate(index) {\r\n        this.bitrateSelected = this.bitrates[index];\r\n        this.onBitrateChange.emit(this.bitrates[index]);\r\n    }\r\n    /**\r\n     * @return {?}\r\n     */\r\n    ngOnDestroy() {\r\n        this.subscriptions.forEach((/**\r\n         * @param {?} s\r\n         * @return {?}\r\n         */\r\n        (s) => s.unsubscribe()));\r\n    }\r\n}\r\nVgQualitySelectorComponent.ɵfac = function VgQualitySelectorComponent_Factory(t) { return new (t || VgQualitySelectorComponent)(ɵngcc0.ɵɵdirectiveInject(ɵngcc0.ElementRef), ɵngcc0.ɵɵdirectiveInject(ɵngcc1.VgApiService)); };\r\nVgQualitySelectorComponent.ɵcmp = ɵngcc0.ɵɵdefineComponent({ type: VgQualitySelectorComponent, selectors: [[\"vg-quality-selector\"]], inputs: { bitrates: \"bitrates\" }, outputs: { onBitrateChange: \"onBitrateChange\" }, features: [ɵngcc0.ɵɵNgOnChangesFeature], decls: 5, vars: 5, consts: [[1, \"container\"], [1, \"quality-selected\"], [\"tabindex\", \"0\", \"aria-label\", \"quality selector\", 1, \"quality-selector\", 3, \"change\"], [3, \"value\", \"selected\", 4, \"ngFor\", \"ngForOf\"], [3, \"value\", \"selected\"]], template: function VgQualitySelectorComponent_Template(rf, ctx) { if (rf & 1) {\r\n        ɵngcc0.ɵɵelementStart(0, \"div\", 0);\r\n        ɵngcc0.ɵɵelementStart(1, \"div\", 1);\r\n        ɵngcc0.ɵɵtext(2);\r\n        ɵngcc0.ɵɵelementEnd();\r\n        ɵngcc0.ɵɵelementStart(3, \"select\", 2);\r\n        ɵngcc0.ɵɵlistener(\"change\", function VgQualitySelectorComponent_Template_select_change_3_listener($event) { return ctx.selectBitrate($event.target.value); });\r\n        ɵngcc0.ɵɵtemplate(4, VgQualitySelectorComponent_option_4_Template, 2, 3, \"option\", 3);\r\n        ɵngcc0.ɵɵelementEnd();\r\n        ɵngcc0.ɵɵelementEnd();\r\n    } if (rf & 2) {\r\n        ɵngcc0.ɵɵadvance(1);\r\n        ɵngcc0.ɵɵclassProp(\"vg-icon-hd\", !ctx.bitrateSelected);\r\n        ɵngcc0.ɵɵadvance(1);\r\n        ɵngcc0.ɵɵtextInterpolate1(\" \", ctx.bitrateSelected == null ? null : ctx.bitrateSelected.label, \" \");\r\n        ɵngcc0.ɵɵadvance(1);\r\n        ɵngcc0.ɵɵattribute(\"aria-valuetext\", ctx.ariaValue);\r\n        ɵngcc0.ɵɵadvance(1);\r\n        ɵngcc0.ɵɵproperty(\"ngForOf\", ctx.bitrates);\r\n    } }, directives: [ɵngcc2.NgForOf], styles: [\"\\n      vg-quality-selector {\\n        -webkit-touch-callout: none;\\n        -webkit-user-select: none;\\n        -moz-user-select: none;\\n        -ms-user-select: none;\\n        user-select: none;\\n        display: flex;\\n        justify-content: center;\\n        width: 50px;\\n        height: 50px;\\n        cursor: pointer;\\n        color: white;\\n        line-height: 50px;\\n      }\\n      vg-quality-selector .container {\\n        position: relative;\\n        display: flex;\\n        flex-grow: 1;\\n        align-items: center;\\n        padding: 0;\\n        margin: 5px;\\n      }\\n      vg-quality-selector select.quality-selector {\\n        width: 50px;\\n        padding: 5px 8px;\\n        border: none;\\n        background: none;\\n        -webkit-appearance: none;\\n        -moz-appearance: none;\\n        appearance: none;\\n        color: transparent;\\n        font-size: 16px;\\n      }\\n      vg-quality-selector select.quality-selector::-ms-expand {\\n        display: none;\\n      }\\n      vg-quality-selector select.quality-selector option {\\n        color: #000;\\n      }\\n      vg-quality-selector .quality-selected {\\n        position: absolute;\\n        width: 100%;\\n        height: 50px;\\n        top: -6px;\\n        text-align: center;\\n        text-transform: uppercase;\\n        font-family: Helvetica Neue, Helvetica, Arial, sans-serif;\\n        padding-top: 2px;\\n        pointer-events: none;\\n      }\\n      vg-quality-selector .vg-icon-closed_caption:before {\\n        width: 100%;\\n      }\\n    \"], encapsulation: 2 });\r\n/** @nocollapse */\r\nVgQualitySelectorComponent.ctorParameters = () => [\r\n    { type: ElementRef },\r\n    { type: VgApiService }\r\n];\r\nVgQualitySelectorComponent.propDecorators = {\r\n    bitrates: [{ type: Input }],\r\n    onBitrateChange: [{ type: Output }]\r\n};\r\n/*@__PURE__*/ (function () { ɵngcc0.ɵsetClassMetadata(VgQualitySelectorComponent, [{\r\n        type: Component,\r\n        args: [{\r\n                selector: 'vg-quality-selector',\r\n                encapsulation: ViewEncapsulation.None,\r\n                template: `\r\n    <div class=\"container\">\r\n      <div class=\"quality-selected\" [class.vg-icon-hd]=\"!bitrateSelected\">\r\n        {{ bitrateSelected?.label }}\r\n      </div>\r\n      <select\r\n        class=\"quality-selector\"\r\n        (change)=\"selectBitrate($event.target.value)\"\r\n        tabindex=\"0\"\r\n        aria-label=\"quality selector\"\r\n        [attr.aria-valuetext]=\"ariaValue\"\r\n      >\r\n        <option\r\n          *ngFor=\"let bitrate of bitrates\"\r\n          [value]=\"bitrate.qualityIndex\"\r\n          [selected]=\"bitrate.qualityIndex === bitrateSelected?.qualityIndex\"\r\n        >\r\n          {{ bitrate.label }}\r\n        </option>\r\n      </select>\r\n    </div>\r\n  `,\r\n                styles: [`\r\n      vg-quality-selector {\r\n        -webkit-touch-callout: none;\r\n        -webkit-user-select: none;\r\n        -moz-user-select: none;\r\n        -ms-user-select: none;\r\n        user-select: none;\r\n        display: flex;\r\n        justify-content: center;\r\n        width: 50px;\r\n        height: 50px;\r\n        cursor: pointer;\r\n        color: white;\r\n        line-height: 50px;\r\n      }\r\n      vg-quality-selector .container {\r\n        position: relative;\r\n        display: flex;\r\n        flex-grow: 1;\r\n        align-items: center;\r\n        padding: 0;\r\n        margin: 5px;\r\n      }\r\n      vg-quality-selector select.quality-selector {\r\n        width: 50px;\r\n        padding: 5px 8px;\r\n        border: none;\r\n        background: none;\r\n        -webkit-appearance: none;\r\n        -moz-appearance: none;\r\n        appearance: none;\r\n        color: transparent;\r\n        font-size: 16px;\r\n      }\r\n      vg-quality-selector select.quality-selector::-ms-expand {\r\n        display: none;\r\n      }\r\n      vg-quality-selector select.quality-selector option {\r\n        color: #000;\r\n      }\r\n      vg-quality-selector .quality-selected {\r\n        position: absolute;\r\n        width: 100%;\r\n        height: 50px;\r\n        top: -6px;\r\n        text-align: center;\r\n        text-transform: uppercase;\r\n        font-family: Helvetica Neue, Helvetica, Arial, sans-serif;\r\n        padding-top: 2px;\r\n        pointer-events: none;\r\n      }\r\n      vg-quality-selector .vg-icon-closed_caption:before {\r\n        width: 100%;\r\n      }\r\n    `]\r\n            }]\r\n    }], function () { return [{ type: ɵngcc0.ElementRef }, { type: ɵngcc1.VgApiService }]; }, { onBitrateChange: [{\r\n            type: Output\r\n        }], bitrates: [{\r\n            type: Input\r\n        }] }); })();\r\nif (false) {\r\n    /** @type {?} */\r\n    VgQualitySelectorComponent.prototype.bitrates;\r\n    /** @type {?} */\r\n    VgQualitySelectorComponent.prototype.onBitrateChange;\r\n    /** @type {?} */\r\n    VgQualitySelectorComponent.prototype.bitrateSelected;\r\n    /** @type {?} */\r\n    VgQualitySelectorComponent.prototype.elem;\r\n    /** @type {?} */\r\n    VgQualitySelectorComponent.prototype.target;\r\n    /** @type {?} */\r\n    VgQualitySelectorComponent.prototype.subscriptions;\r\n    /** @type {?} */\r\n    VgQualitySelectorComponent.prototype.ariaValue;\r\n    /** @type {?} */\r\n    VgQualitySelectorComponent.prototype.API;\r\n}\r\n\r\n/**\r\n * @fileoverview added by tsickle\r\n * Generated from: lib/components/vg-playback-button/vg-playback-button.component.ts\r\n * @suppress {checkTypes,constantProperty,extraRequire,missingOverride,missingRequire,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\r\n */\r\nclass VgPlaybackButtonComponent {\r\n    /**\r\n     * @param {?} ref\r\n     * @param {?} API\r\n     * @param {?} cdr\r\n     */\r\n    constructor(ref, API, cdr) {\r\n        this.API = API;\r\n        this.cdr = cdr;\r\n        this.subscriptions = [];\r\n        this.ariaValue = 1;\r\n        this.elem = ref.nativeElement;\r\n        this.playbackValues = ['0.5', '1.0', '1.5', '2.0'];\r\n        this.playbackIndex = 1;\r\n    }\r\n    /**\r\n     * @return {?}\r\n     */\r\n    ngOnInit() {\r\n        if (this.API.isPlayerReady) {\r\n            this.onPlayerReady();\r\n        }\r\n        else {\r\n            this.subscriptions.push(this.API.playerReadyEvent.subscribe((/**\r\n             * @return {?}\r\n             */\r\n            () => this.onPlayerReady())));\r\n        }\r\n    }\r\n    /**\r\n     * @return {?}\r\n     */\r\n    onPlayerReady() {\r\n        this.target = this.API.getMediaById(this.vgFor);\r\n    }\r\n    /**\r\n     * @return {?}\r\n     */\r\n    onClick() {\r\n        this.updatePlaybackSpeed();\r\n    }\r\n    /**\r\n     * @param {?} event\r\n     * @return {?}\r\n     */\r\n    onKeyDown(event) {\r\n        // On press Enter (13) or Space (32)\r\n        if (event.keyCode === 13 || event.keyCode === 32) {\r\n            event.preventDefault();\r\n            this.updatePlaybackSpeed();\r\n        }\r\n    }\r\n    /**\r\n     * @return {?}\r\n     */\r\n    updatePlaybackSpeed() {\r\n        this.playbackIndex = ++this.playbackIndex % this.playbackValues.length;\r\n        if (this.target instanceof VgApiService) {\r\n            this.target.playbackRate = this.playbackValues[this.playbackIndex];\r\n        }\r\n        else {\r\n            this.target.playbackRate[this.vgFor] = this.playbackValues[this.playbackIndex];\r\n        }\r\n        this.detectChanges();\r\n    }\r\n    /**\r\n     * @return {?}\r\n     */\r\n    getPlaybackRate() {\r\n        this.ariaValue = this.target ? this.target.playbackRate : 1.0;\r\n        return this.ariaValue;\r\n    }\r\n    /**\r\n     * @return {?}\r\n     */\r\n    detectChanges() {\r\n        try {\r\n            this.cdr.detectChanges();\r\n        }\r\n        catch (e) {\r\n            console.warn(e);\r\n        }\r\n    }\r\n    /**\r\n     * @return {?}\r\n     */\r\n    ngOnDestroy() {\r\n        this.subscriptions.forEach((/**\r\n         * @param {?} s\r\n         * @return {?}\r\n         */\r\n        (s) => s.unsubscribe()));\r\n    }\r\n}\r\nVgPlaybackButtonComponent.ɵfac = function VgPlaybackButtonComponent_Factory(t) { return new (t || VgPlaybackButtonComponent)(ɵngcc0.ɵɵdirectiveInject(ɵngcc0.ElementRef), ɵngcc0.ɵɵdirectiveInject(ɵngcc1.VgApiService), ɵngcc0.ɵɵdirectiveInject(ɵngcc0.ChangeDetectorRef)); };\r\nVgPlaybackButtonComponent.ɵcmp = ɵngcc0.ɵɵdefineComponent({ type: VgPlaybackButtonComponent, selectors: [[\"vg-playback-button\"]], hostBindings: function VgPlaybackButtonComponent_HostBindings(rf, ctx) { if (rf & 1) {\r\n        ɵngcc0.ɵɵlistener(\"click\", function VgPlaybackButtonComponent_click_HostBindingHandler() { return ctx.onClick(); })(\"keydown\", function VgPlaybackButtonComponent_keydown_HostBindingHandler($event) { return ctx.onKeyDown($event); });\r\n    } }, inputs: { playbackValues: \"playbackValues\", vgFor: \"vgFor\" }, decls: 2, vars: 2, consts: [[\"tabindex\", \"0\", \"role\", \"button\", \"aria-label\", \"playback speed button\", 1, \"button\"]], template: function VgPlaybackButtonComponent_Template(rf, ctx) { if (rf & 1) {\r\n        ɵngcc0.ɵɵelementStart(0, \"span\", 0);\r\n        ɵngcc0.ɵɵtext(1);\r\n        ɵngcc0.ɵɵelementEnd();\r\n    } if (rf & 2) {\r\n        ɵngcc0.ɵɵattribute(\"aria-valuetext\", ctx.ariaValue);\r\n        ɵngcc0.ɵɵadvance(1);\r\n        ɵngcc0.ɵɵtextInterpolate1(\" \", ctx.getPlaybackRate(), \"x \");\r\n    } }, styles: [\"\\n      vg-playback-button {\\n        -webkit-touch-callout: none;\\n        -webkit-user-select: none;\\n        -moz-user-select: none;\\n        -ms-user-select: none;\\n        user-select: none;\\n        display: flex;\\n        justify-content: center;\\n        height: 50px;\\n        width: 50px;\\n        cursor: pointer;\\n        color: white;\\n        line-height: 50px;\\n        font-family: Helvetica Neue, Helvetica, Arial, sans-serif;\\n      }\\n      vg-playback-button .button {\\n        display: flex;\\n        align-items: center;\\n        justify-content: center;\\n        width: 50px;\\n      }\\n    \"], encapsulation: 2 });\r\n/** @nocollapse */\r\nVgPlaybackButtonComponent.ctorParameters = () => [\r\n    { type: ElementRef },\r\n    { type: VgApiService },\r\n    { type: ChangeDetectorRef }\r\n];\r\nVgPlaybackButtonComponent.propDecorators = {\r\n    vgFor: [{ type: Input }],\r\n    playbackValues: [{ type: Input }],\r\n    onClick: [{ type: HostListener, args: ['click',] }],\r\n    onKeyDown: [{ type: HostListener, args: ['keydown', ['$event'],] }]\r\n};\r\n/*@__PURE__*/ (function () { ɵngcc0.ɵsetClassMetadata(VgPlaybackButtonComponent, [{\r\n        type: Component,\r\n        args: [{\r\n                selector: 'vg-playback-button',\r\n                encapsulation: ViewEncapsulation.None,\r\n                template: ` <span\r\n    class=\"button\"\r\n    tabindex=\"0\"\r\n    role=\"button\"\r\n    aria-label=\"playback speed button\"\r\n    [attr.aria-valuetext]=\"ariaValue\"\r\n  >\r\n    {{ getPlaybackRate() }}x\r\n  </span>`,\r\n                styles: [`\r\n      vg-playback-button {\r\n        -webkit-touch-callout: none;\r\n        -webkit-user-select: none;\r\n        -moz-user-select: none;\r\n        -ms-user-select: none;\r\n        user-select: none;\r\n        display: flex;\r\n        justify-content: center;\r\n        height: 50px;\r\n        width: 50px;\r\n        cursor: pointer;\r\n        color: white;\r\n        line-height: 50px;\r\n        font-family: Helvetica Neue, Helvetica, Arial, sans-serif;\r\n      }\r\n      vg-playback-button .button {\r\n        display: flex;\r\n        align-items: center;\r\n        justify-content: center;\r\n        width: 50px;\r\n      }\r\n    `]\r\n            }]\r\n    }], function () { return [{ type: ɵngcc0.ElementRef }, { type: ɵngcc1.VgApiService }, { type: ɵngcc0.ChangeDetectorRef }]; }, { playbackValues: [{\r\n            type: Input\r\n        }], \r\n    /**\r\n     * @return {?}\r\n     */\r\n    onClick: [{\r\n            type: HostListener,\r\n            args: ['click']\r\n        }], \r\n    /**\r\n     * @param {?} event\r\n     * @return {?}\r\n     */\r\n    onKeyDown: [{\r\n            type: HostListener,\r\n            args: ['keydown', ['$event']]\r\n        }], vgFor: [{\r\n            type: Input\r\n        }] }); })();\r\nif (false) {\r\n    /** @type {?} */\r\n    VgPlaybackButtonComponent.prototype.vgFor;\r\n    /** @type {?} */\r\n    VgPlaybackButtonComponent.prototype.elem;\r\n    /** @type {?} */\r\n    VgPlaybackButtonComponent.prototype.target;\r\n    /** @type {?} */\r\n    VgPlaybackButtonComponent.prototype.playbackValues;\r\n    /** @type {?} */\r\n    VgPlaybackButtonComponent.prototype.playbackIndex;\r\n    /** @type {?} */\r\n    VgPlaybackButtonComponent.prototype.subscriptions;\r\n    /** @type {?} */\r\n    VgPlaybackButtonComponent.prototype.ariaValue;\r\n    /** @type {?} */\r\n    VgPlaybackButtonComponent.prototype.API;\r\n    /** @type {?} */\r\n    VgPlaybackButtonComponent.prototype.cdr;\r\n}\r\n\r\n/**\r\n * @fileoverview added by tsickle\r\n * Generated from: lib/components/vg-play-pause/vg-play-pause.component.ts\r\n * @suppress {checkTypes,constantProperty,extraRequire,missingOverride,missingRequire,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\r\n */\r\nclass VgPlayPauseComponent {\r\n    /**\r\n     * @param {?} ref\r\n     * @param {?} API\r\n     */\r\n    constructor(ref, API) {\r\n        this.API = API;\r\n        this.subscriptions = [];\r\n        this.ariaValue = VgStates.VG_PAUSED;\r\n        this.elem = ref.nativeElement;\r\n    }\r\n    /**\r\n     * @return {?}\r\n     */\r\n    ngOnInit() {\r\n        if (this.API.isPlayerReady) {\r\n            this.onPlayerReady();\r\n        }\r\n        else {\r\n            this.subscriptions.push(this.API.playerReadyEvent.subscribe((/**\r\n             * @return {?}\r\n             */\r\n            () => this.onPlayerReady())));\r\n        }\r\n    }\r\n    /**\r\n     * @return {?}\r\n     */\r\n    onPlayerReady() {\r\n        this.target = this.API.getMediaById(this.vgFor);\r\n    }\r\n    /**\r\n     * @return {?}\r\n     */\r\n    onClick() {\r\n        this.playPause();\r\n    }\r\n    /**\r\n     * @param {?} event\r\n     * @return {?}\r\n     */\r\n    onKeyDown(event) {\r\n        // On press Enter (13) or Space (32)\r\n        if (event.keyCode === 13 || event.keyCode === 32) {\r\n            event.preventDefault();\r\n            this.playPause();\r\n        }\r\n    }\r\n    /**\r\n     * @return {?}\r\n     */\r\n    playPause() {\r\n        /** @type {?} */\r\n        const state = this.getState();\r\n        switch (state) {\r\n            case VgStates.VG_PLAYING:\r\n                this.target.pause();\r\n                break;\r\n            case VgStates.VG_PAUSED:\r\n            case VgStates.VG_ENDED:\r\n                this.target.play();\r\n                break;\r\n        }\r\n    }\r\n    /**\r\n     * @return {?}\r\n     */\r\n    getState() {\r\n        this.ariaValue = this.target ? this.target.state : VgStates.VG_PAUSED;\r\n        return this.ariaValue;\r\n    }\r\n    /**\r\n     * @return {?}\r\n     */\r\n    ngOnDestroy() {\r\n        this.subscriptions.forEach((/**\r\n         * @param {?} s\r\n         * @return {?}\r\n         */\r\n        (s) => s.unsubscribe()));\r\n    }\r\n}\r\nVgPlayPauseComponent.ɵfac = function VgPlayPauseComponent_Factory(t) { return new (t || VgPlayPauseComponent)(ɵngcc0.ɵɵdirectiveInject(ɵngcc0.ElementRef), ɵngcc0.ɵɵdirectiveInject(ɵngcc1.VgApiService)); };\r\nVgPlayPauseComponent.ɵcmp = ɵngcc0.ɵɵdefineComponent({ type: VgPlayPauseComponent, selectors: [[\"vg-play-pause\"]], hostBindings: function VgPlayPauseComponent_HostBindings(rf, ctx) { if (rf & 1) {\r\n        ɵngcc0.ɵɵlistener(\"click\", function VgPlayPauseComponent_click_HostBindingHandler() { return ctx.onClick(); })(\"keydown\", function VgPlayPauseComponent_keydown_HostBindingHandler($event) { return ctx.onKeyDown($event); });\r\n    } }, inputs: { vgFor: \"vgFor\" }, decls: 1, vars: 6, consts: [[\"tabindex\", \"0\", \"role\", \"button\", 1, \"icon\"]], template: function VgPlayPauseComponent_Template(rf, ctx) { if (rf & 1) {\r\n        ɵngcc0.ɵɵelement(0, \"div\", 0);\r\n    } if (rf & 2) {\r\n        ɵngcc0.ɵɵclassProp(\"vg-icon-pause\", ctx.getState() === \"playing\")(\"vg-icon-play_arrow\", ctx.getState() === \"paused\" || ctx.getState() === \"ended\");\r\n        ɵngcc0.ɵɵattribute(\"aria-label\", ctx.getState() === \"paused\" ? \"play\" : \"pause\")(\"aria-valuetext\", ctx.ariaValue);\r\n    } }, styles: [\"\\n      vg-play-pause {\\n        -webkit-touch-callout: none;\\n        -webkit-user-select: none;\\n        -khtml-user-select: none;\\n        -moz-user-select: none;\\n        -ms-user-select: none;\\n        user-select: none;\\n        display: flex;\\n        justify-content: center;\\n        height: 50px;\\n        width: 50px;\\n        cursor: pointer;\\n        color: white;\\n        line-height: 50px;\\n      }\\n      vg-play-pause .icon {\\n        pointer-events: none;\\n      }\\n    \"], encapsulation: 2 });\r\n/** @nocollapse */\r\nVgPlayPauseComponent.ctorParameters = () => [\r\n    { type: ElementRef },\r\n    { type: VgApiService }\r\n];\r\nVgPlayPauseComponent.propDecorators = {\r\n    vgFor: [{ type: Input }],\r\n    onClick: [{ type: HostListener, args: ['click',] }],\r\n    onKeyDown: [{ type: HostListener, args: ['keydown', ['$event'],] }]\r\n};\r\n/*@__PURE__*/ (function () { ɵngcc0.ɵsetClassMetadata(VgPlayPauseComponent, [{\r\n        type: Component,\r\n        args: [{\r\n                selector: 'vg-play-pause',\r\n                encapsulation: ViewEncapsulation.None,\r\n                template: ` <div\r\n    class=\"icon\"\r\n    [class.vg-icon-pause]=\"getState() === 'playing'\"\r\n    [class.vg-icon-play_arrow]=\"\r\n      getState() === 'paused' || getState() === 'ended'\r\n    \"\r\n    tabindex=\"0\"\r\n    role=\"button\"\r\n    [attr.aria-label]=\"getState() === 'paused' ? 'play' : 'pause'\"\r\n    [attr.aria-valuetext]=\"ariaValue\"\r\n  ></div>`,\r\n                styles: [`\r\n      vg-play-pause {\r\n        -webkit-touch-callout: none;\r\n        -webkit-user-select: none;\r\n        -khtml-user-select: none;\r\n        -moz-user-select: none;\r\n        -ms-user-select: none;\r\n        user-select: none;\r\n        display: flex;\r\n        justify-content: center;\r\n        height: 50px;\r\n        width: 50px;\r\n        cursor: pointer;\r\n        color: white;\r\n        line-height: 50px;\r\n      }\r\n      vg-play-pause .icon {\r\n        pointer-events: none;\r\n      }\r\n    `]\r\n            }]\r\n    }], function () { return [{ type: ɵngcc0.ElementRef }, { type: ɵngcc1.VgApiService }]; }, { \r\n    /**\r\n     * @return {?}\r\n     */\r\n    onClick: [{\r\n            type: HostListener,\r\n            args: ['click']\r\n        }], \r\n    /**\r\n     * @param {?} event\r\n     * @return {?}\r\n     */\r\n    onKeyDown: [{\r\n            type: HostListener,\r\n            args: ['keydown', ['$event']]\r\n        }], vgFor: [{\r\n            type: Input\r\n        }] }); })();\r\nif (false) {\r\n    /** @type {?} */\r\n    VgPlayPauseComponent.prototype.vgFor;\r\n    /** @type {?} */\r\n    VgPlayPauseComponent.prototype.elem;\r\n    /** @type {?} */\r\n    VgPlayPauseComponent.prototype.target;\r\n    /** @type {?} */\r\n    VgPlayPauseComponent.prototype.subscriptions;\r\n    /** @type {?} */\r\n    VgPlayPauseComponent.prototype.ariaValue;\r\n    /** @type {?} */\r\n    VgPlayPauseComponent.prototype.API;\r\n}\r\n\r\n/**\r\n * @fileoverview added by tsickle\r\n * Generated from: lib/components/vg-mute/vg-mute.component.ts\r\n * @suppress {checkTypes,constantProperty,extraRequire,missingOverride,missingRequire,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\r\n */\r\nclass VgMuteComponent {\r\n    /**\r\n     * @param {?} ref\r\n     * @param {?} API\r\n     */\r\n    constructor(ref, API) {\r\n        this.API = API;\r\n        this.subscriptions = [];\r\n        this.ariaValue = 'unmuted';\r\n        this.elem = ref.nativeElement;\r\n    }\r\n    /**\r\n     * @return {?}\r\n     */\r\n    ngOnInit() {\r\n        if (this.API.isPlayerReady) {\r\n            this.onPlayerReady();\r\n        }\r\n        else {\r\n            this.subscriptions.push(this.API.playerReadyEvent.subscribe((/**\r\n             * @return {?}\r\n             */\r\n            () => this.onPlayerReady())));\r\n        }\r\n    }\r\n    /**\r\n     * @return {?}\r\n     */\r\n    onPlayerReady() {\r\n        this.target = this.API.getMediaById(this.vgFor);\r\n        this.currentVolume = this.target.volume;\r\n    }\r\n    /**\r\n     * @return {?}\r\n     */\r\n    onClick() {\r\n        this.changeMuteState();\r\n    }\r\n    /**\r\n     * @param {?} event\r\n     * @return {?}\r\n     */\r\n    onKeyDown(event) {\r\n        // On press Enter (13) or Space (32)\r\n        if (event.keyCode === 13 || event.keyCode === 32) {\r\n            event.preventDefault();\r\n            this.changeMuteState();\r\n        }\r\n    }\r\n    /**\r\n     * @return {?}\r\n     */\r\n    changeMuteState() {\r\n        /** @type {?} */\r\n        const volume = this.getVolume();\r\n        if (volume === 0) {\r\n            if (this.target.volume === 0 && this.currentVolume === 0) {\r\n                this.currentVolume = 1;\r\n            }\r\n            this.target.volume = this.currentVolume;\r\n        }\r\n        else {\r\n            this.currentVolume = volume;\r\n            this.target.volume = 0;\r\n        }\r\n    }\r\n    /**\r\n     * @return {?}\r\n     */\r\n    getVolume() {\r\n        /** @type {?} */\r\n        const volume = this.target ? this.target.volume : 0;\r\n        this.ariaValue = volume ? 'unmuted' : 'muted';\r\n        return volume;\r\n    }\r\n    /**\r\n     * @return {?}\r\n     */\r\n    ngOnDestroy() {\r\n        this.subscriptions.forEach((/**\r\n         * @param {?} s\r\n         * @return {?}\r\n         */\r\n        (s) => s.unsubscribe()));\r\n    }\r\n}\r\nVgMuteComponent.ɵfac = function VgMuteComponent_Factory(t) { return new (t || VgMuteComponent)(ɵngcc0.ɵɵdirectiveInject(ɵngcc0.ElementRef), ɵngcc0.ɵɵdirectiveInject(ɵngcc1.VgApiService)); };\r\nVgMuteComponent.ɵcmp = ɵngcc0.ɵɵdefineComponent({ type: VgMuteComponent, selectors: [[\"vg-mute\"]], hostBindings: function VgMuteComponent_HostBindings(rf, ctx) { if (rf & 1) {\r\n        ɵngcc0.ɵɵlistener(\"click\", function VgMuteComponent_click_HostBindingHandler() { return ctx.onClick(); })(\"keydown\", function VgMuteComponent_keydown_HostBindingHandler($event) { return ctx.onKeyDown($event); });\r\n    } }, inputs: { vgFor: \"vgFor\" }, decls: 1, vars: 9, consts: [[\"tabindex\", \"0\", \"role\", \"button\", \"aria-label\", \"mute button\", 1, \"icon\"]], template: function VgMuteComponent_Template(rf, ctx) { if (rf & 1) {\r\n        ɵngcc0.ɵɵelement(0, \"div\", 0);\r\n    } if (rf & 2) {\r\n        ɵngcc0.ɵɵclassProp(\"vg-icon-volume_up\", ctx.getVolume() >= 0.75)(\"vg-icon-volume_down\", ctx.getVolume() >= 0.25 && ctx.getVolume() < 0.75)(\"vg-icon-volume_mute\", ctx.getVolume() > 0 && ctx.getVolume() < 0.25)(\"vg-icon-volume_off\", ctx.getVolume() === 0);\r\n        ɵngcc0.ɵɵattribute(\"aria-valuetext\", ctx.ariaValue);\r\n    } }, styles: [\"\\n      vg-mute {\\n        -webkit-touch-callout: none;\\n        -webkit-user-select: none;\\n        -khtml-user-select: none;\\n        -moz-user-select: none;\\n        -ms-user-select: none;\\n        user-select: none;\\n        display: flex;\\n        justify-content: center;\\n        height: 50px;\\n        width: 50px;\\n        cursor: pointer;\\n        color: white;\\n        line-height: 50px;\\n      }\\n      vg-mute .icon {\\n        pointer-events: none;\\n      }\\n    \"], encapsulation: 2 });\r\n/** @nocollapse */\r\nVgMuteComponent.ctorParameters = () => [\r\n    { type: ElementRef },\r\n    { type: VgApiService }\r\n];\r\nVgMuteComponent.propDecorators = {\r\n    vgFor: [{ type: Input }],\r\n    onClick: [{ type: HostListener, args: ['click',] }],\r\n    onKeyDown: [{ type: HostListener, args: ['keydown', ['$event'],] }]\r\n};\r\n/*@__PURE__*/ (function () { ɵngcc0.ɵsetClassMetadata(VgMuteComponent, [{\r\n        type: Component,\r\n        args: [{\r\n                selector: 'vg-mute',\r\n                encapsulation: ViewEncapsulation.None,\r\n                template: ` <div\r\n    class=\"icon\"\r\n    [class.vg-icon-volume_up]=\"getVolume() >= 0.75\"\r\n    [class.vg-icon-volume_down]=\"getVolume() >= 0.25 && getVolume() < 0.75\"\r\n    [class.vg-icon-volume_mute]=\"getVolume() > 0 && getVolume() < 0.25\"\r\n    [class.vg-icon-volume_off]=\"getVolume() === 0\"\r\n    tabindex=\"0\"\r\n    role=\"button\"\r\n    aria-label=\"mute button\"\r\n    [attr.aria-valuetext]=\"ariaValue\"\r\n  ></div>`,\r\n                styles: [`\r\n      vg-mute {\r\n        -webkit-touch-callout: none;\r\n        -webkit-user-select: none;\r\n        -khtml-user-select: none;\r\n        -moz-user-select: none;\r\n        -ms-user-select: none;\r\n        user-select: none;\r\n        display: flex;\r\n        justify-content: center;\r\n        height: 50px;\r\n        width: 50px;\r\n        cursor: pointer;\r\n        color: white;\r\n        line-height: 50px;\r\n      }\r\n      vg-mute .icon {\r\n        pointer-events: none;\r\n      }\r\n    `]\r\n            }]\r\n    }], function () { return [{ type: ɵngcc0.ElementRef }, { type: ɵngcc1.VgApiService }]; }, { \r\n    /**\r\n     * @return {?}\r\n     */\r\n    onClick: [{\r\n            type: HostListener,\r\n            args: ['click']\r\n        }], \r\n    /**\r\n     * @param {?} event\r\n     * @return {?}\r\n     */\r\n    onKeyDown: [{\r\n            type: HostListener,\r\n            args: ['keydown', ['$event']]\r\n        }], vgFor: [{\r\n            type: Input\r\n        }] }); })();\r\nif (false) {\r\n    /** @type {?} */\r\n    VgMuteComponent.prototype.vgFor;\r\n    /** @type {?} */\r\n    VgMuteComponent.prototype.elem;\r\n    /** @type {?} */\r\n    VgMuteComponent.prototype.target;\r\n    /** @type {?} */\r\n    VgMuteComponent.prototype.currentVolume;\r\n    /** @type {?} */\r\n    VgMuteComponent.prototype.subscriptions;\r\n    /** @type {?} */\r\n    VgMuteComponent.prototype.ariaValue;\r\n    /** @type {?} */\r\n    VgMuteComponent.prototype.API;\r\n}\r\n\r\n/**\r\n * @fileoverview added by tsickle\r\n * Generated from: lib/components/vg-fullscreen/vg-fullscreen.component.ts\r\n * @suppress {checkTypes,constantProperty,extraRequire,missingOverride,missingRequire,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\r\n */\r\nclass VgFullscreenComponent {\r\n    /**\r\n     * @param {?} ref\r\n     * @param {?} API\r\n     * @param {?} fsAPI\r\n     */\r\n    constructor(ref, API, fsAPI) {\r\n        this.API = API;\r\n        this.fsAPI = fsAPI;\r\n        this.isFullscreen = false;\r\n        this.subscriptions = [];\r\n        this.ariaValue = 'normal mode';\r\n        this.elem = ref.nativeElement;\r\n        this.subscriptions.push(this.fsAPI.onChangeFullscreen.subscribe(this.onChangeFullscreen.bind(this)));\r\n    }\r\n    /**\r\n     * @return {?}\r\n     */\r\n    ngOnInit() {\r\n        if (this.API.isPlayerReady) {\r\n            this.onPlayerReady();\r\n        }\r\n        else {\r\n            this.subscriptions.push(this.API.playerReadyEvent.subscribe((/**\r\n             * @return {?}\r\n             */\r\n            () => this.onPlayerReady())));\r\n        }\r\n    }\r\n    /**\r\n     * @return {?}\r\n     */\r\n    onPlayerReady() {\r\n        this.target = this.API.getMediaById(this.vgFor);\r\n    }\r\n    /**\r\n     * @param {?} fsState\r\n     * @return {?}\r\n     */\r\n    onChangeFullscreen(fsState) {\r\n        this.ariaValue = fsState ? 'fullscreen mode' : 'normal mode';\r\n        this.isFullscreen = fsState;\r\n    }\r\n    /**\r\n     * @return {?}\r\n     */\r\n    onClick() {\r\n        this.changeFullscreenState();\r\n    }\r\n    /**\r\n     * @param {?} event\r\n     * @return {?}\r\n     */\r\n    onKeyDown(event) {\r\n        // On press Enter (13) or Space (32)\r\n        if (event.keyCode === 13 || event.keyCode === 32) {\r\n            event.preventDefault();\r\n            this.changeFullscreenState();\r\n        }\r\n    }\r\n    /**\r\n     * @return {?}\r\n     */\r\n    changeFullscreenState() {\r\n        /** @type {?} */\r\n        let element = this.target;\r\n        if (this.target instanceof VgApiService) {\r\n            element = null;\r\n        }\r\n        this.fsAPI.toggleFullscreen(element);\r\n    }\r\n    /**\r\n     * @return {?}\r\n     */\r\n    ngOnDestroy() {\r\n        this.subscriptions.forEach((/**\r\n         * @param {?} s\r\n         * @return {?}\r\n         */\r\n        (s) => s.unsubscribe()));\r\n    }\r\n}\r\nVgFullscreenComponent.ɵfac = function VgFullscreenComponent_Factory(t) { return new (t || VgFullscreenComponent)(ɵngcc0.ɵɵdirectiveInject(ɵngcc0.ElementRef), ɵngcc0.ɵɵdirectiveInject(ɵngcc1.VgApiService), ɵngcc0.ɵɵdirectiveInject(ɵngcc1.VgFullscreenApiService)); };\r\nVgFullscreenComponent.ɵcmp = ɵngcc0.ɵɵdefineComponent({ type: VgFullscreenComponent, selectors: [[\"vg-fullscreen\"]], hostBindings: function VgFullscreenComponent_HostBindings(rf, ctx) { if (rf & 1) {\r\n        ɵngcc0.ɵɵlistener(\"click\", function VgFullscreenComponent_click_HostBindingHandler() { return ctx.onClick(); })(\"keydown\", function VgFullscreenComponent_keydown_HostBindingHandler($event) { return ctx.onKeyDown($event); });\r\n    } }, decls: 1, vars: 5, consts: [[\"tabindex\", \"0\", \"role\", \"button\", \"aria-label\", \"fullscreen button\", 1, \"icon\"]], template: function VgFullscreenComponent_Template(rf, ctx) { if (rf & 1) {\r\n        ɵngcc0.ɵɵelement(0, \"div\", 0);\r\n    } if (rf & 2) {\r\n        ɵngcc0.ɵɵclassProp(\"vg-icon-fullscreen\", !ctx.isFullscreen)(\"vg-icon-fullscreen_exit\", ctx.isFullscreen);\r\n        ɵngcc0.ɵɵattribute(\"aria-valuetext\", ctx.ariaValue);\r\n    } }, styles: [\"\\n      vg-fullscreen {\\n        -webkit-touch-callout: none;\\n        -webkit-user-select: none;\\n        -khtml-user-select: none;\\n        -moz-user-select: none;\\n        -ms-user-select: none;\\n        user-select: none;\\n        display: flex;\\n        justify-content: center;\\n        height: 50px;\\n        width: 50px;\\n        cursor: pointer;\\n        color: white;\\n        line-height: 50px;\\n      }\\n      vg-fullscreen .icon {\\n        pointer-events: none;\\n      }\\n    \"], encapsulation: 2 });\r\n/** @nocollapse */\r\nVgFullscreenComponent.ctorParameters = () => [\r\n    { type: ElementRef },\r\n    { type: VgApiService },\r\n    { type: VgFullscreenApiService }\r\n];\r\nVgFullscreenComponent.propDecorators = {\r\n    onClick: [{ type: HostListener, args: ['click',] }],\r\n    onKeyDown: [{ type: HostListener, args: ['keydown', ['$event'],] }]\r\n};\r\n/*@__PURE__*/ (function () { ɵngcc0.ɵsetClassMetadata(VgFullscreenComponent, [{\r\n        type: Component,\r\n        args: [{\r\n                selector: 'vg-fullscreen',\r\n                encapsulation: ViewEncapsulation.None,\r\n                template: ` <div\r\n    class=\"icon\"\r\n    [class.vg-icon-fullscreen]=\"!isFullscreen\"\r\n    [class.vg-icon-fullscreen_exit]=\"isFullscreen\"\r\n    tabindex=\"0\"\r\n    role=\"button\"\r\n    aria-label=\"fullscreen button\"\r\n    [attr.aria-valuetext]=\"ariaValue\"\r\n  ></div>`,\r\n                styles: [`\r\n      vg-fullscreen {\r\n        -webkit-touch-callout: none;\r\n        -webkit-user-select: none;\r\n        -khtml-user-select: none;\r\n        -moz-user-select: none;\r\n        -ms-user-select: none;\r\n        user-select: none;\r\n        display: flex;\r\n        justify-content: center;\r\n        height: 50px;\r\n        width: 50px;\r\n        cursor: pointer;\r\n        color: white;\r\n        line-height: 50px;\r\n      }\r\n      vg-fullscreen .icon {\r\n        pointer-events: none;\r\n      }\r\n    `]\r\n            }]\r\n    }], function () { return [{ type: ɵngcc0.ElementRef }, { type: ɵngcc1.VgApiService }, { type: ɵngcc1.VgFullscreenApiService }]; }, { \r\n    /**\r\n     * @return {?}\r\n     */\r\n    onClick: [{\r\n            type: HostListener,\r\n            args: ['click']\r\n        }], \r\n    /**\r\n     * @param {?} event\r\n     * @return {?}\r\n     */\r\n    onKeyDown: [{\r\n            type: HostListener,\r\n            args: ['keydown', ['$event']]\r\n        }] }); })();\r\nif (false) {\r\n    /** @type {?} */\r\n    VgFullscreenComponent.prototype.elem;\r\n    /** @type {?} */\r\n    VgFullscreenComponent.prototype.vgFor;\r\n    /** @type {?} */\r\n    VgFullscreenComponent.prototype.target;\r\n    /** @type {?} */\r\n    VgFullscreenComponent.prototype.isFullscreen;\r\n    /** @type {?} */\r\n    VgFullscreenComponent.prototype.subscriptions;\r\n    /** @type {?} */\r\n    VgFullscreenComponent.prototype.ariaValue;\r\n    /** @type {?} */\r\n    VgFullscreenComponent.prototype.API;\r\n    /** @type {?} */\r\n    VgFullscreenComponent.prototype.fsAPI;\r\n}\r\n\r\n/**\r\n * @fileoverview added by tsickle\r\n * Generated from: lib/components/vg-scrub-bar/vg-scrub-bar-buffering-time/vg-scrub-bar-buffering-time.component.ts\r\n * @suppress {checkTypes,constantProperty,extraRequire,missingOverride,missingRequire,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\r\n */\r\nclass VgScrubBarBufferingTimeComponent {\r\n    /**\r\n     * @param {?} ref\r\n     * @param {?} API\r\n     */\r\n    constructor(ref, API) {\r\n        this.API = API;\r\n        this.subscriptions = [];\r\n        this.elem = ref.nativeElement;\r\n    }\r\n    /**\r\n     * @return {?}\r\n     */\r\n    ngOnInit() {\r\n        if (this.API.isPlayerReady) {\r\n            this.onPlayerReady();\r\n        }\r\n        else {\r\n            this.subscriptions.push(this.API.playerReadyEvent.subscribe((/**\r\n             * @return {?}\r\n             */\r\n            () => this.onPlayerReady())));\r\n        }\r\n    }\r\n    /**\r\n     * @return {?}\r\n     */\r\n    onPlayerReady() {\r\n        this.target = this.API.getMediaById(this.vgFor);\r\n    }\r\n    /**\r\n     * @return {?}\r\n     */\r\n    getBufferTime() {\r\n        /** @type {?} */\r\n        let bufferTime = '0%';\r\n        if (this.target && this.target.buffer && this.target.buffered.length) {\r\n            if (this.target.time.total === 0) {\r\n                bufferTime = '0%';\r\n            }\r\n            else {\r\n                bufferTime =\r\n                    (this.target.buffer.end / this.target.time.total) * 100 + '%';\r\n            }\r\n        }\r\n        return bufferTime;\r\n    }\r\n    /**\r\n     * @return {?}\r\n     */\r\n    ngOnDestroy() {\r\n        this.subscriptions.forEach((/**\r\n         * @param {?} s\r\n         * @return {?}\r\n         */\r\n        (s) => s.unsubscribe()));\r\n    }\r\n}\r\nVgScrubBarBufferingTimeComponent.ɵfac = function VgScrubBarBufferingTimeComponent_Factory(t) { return new (t || VgScrubBarBufferingTimeComponent)(ɵngcc0.ɵɵdirectiveInject(ɵngcc0.ElementRef), ɵngcc0.ɵɵdirectiveInject(ɵngcc1.VgApiService)); };\r\nVgScrubBarBufferingTimeComponent.ɵcmp = ɵngcc0.ɵɵdefineComponent({ type: VgScrubBarBufferingTimeComponent, selectors: [[\"vg-scrub-bar-buffering-time\"]], inputs: { vgFor: \"vgFor\" }, decls: 1, vars: 2, consts: [[1, \"background\"]], template: function VgScrubBarBufferingTimeComponent_Template(rf, ctx) { if (rf & 1) {\r\n        ɵngcc0.ɵɵelement(0, \"div\", 0);\r\n    } if (rf & 2) {\r\n        ɵngcc0.ɵɵstyleProp(\"width\", ctx.getBufferTime());\r\n    } }, styles: [\"\\n      vg-scrub-bar-buffering-time {\\n        display: flex;\\n        width: 100%;\\n        height: 5px;\\n        pointer-events: none;\\n        position: absolute;\\n      }\\n      vg-scrub-bar-buffering-time .background {\\n        background-color: rgba(255, 255, 255, 0.3);\\n      }\\n      vg-controls vg-scrub-bar-buffering-time {\\n        position: absolute;\\n        top: calc(50% - 3px);\\n      }\\n      vg-controls vg-scrub-bar-buffering-time .background {\\n        -webkit-border-radius: 2px;\\n        -moz-border-radius: 2px;\\n        border-radius: 2px;\\n      }\\n    \"], encapsulation: 2 });\r\n/** @nocollapse */\r\nVgScrubBarBufferingTimeComponent.ctorParameters = () => [\r\n    { type: ElementRef },\r\n    { type: VgApiService }\r\n];\r\nVgScrubBarBufferingTimeComponent.propDecorators = {\r\n    vgFor: [{ type: Input }]\r\n};\r\n/*@__PURE__*/ (function () { ɵngcc0.ɵsetClassMetadata(VgScrubBarBufferingTimeComponent, [{\r\n        type: Component,\r\n        args: [{\r\n                selector: 'vg-scrub-bar-buffering-time',\r\n                encapsulation: ViewEncapsulation.None,\r\n                template: `<div class=\"background\" [style.width]=\"getBufferTime()\"></div>`,\r\n                styles: [`\r\n      vg-scrub-bar-buffering-time {\r\n        display: flex;\r\n        width: 100%;\r\n        height: 5px;\r\n        pointer-events: none;\r\n        position: absolute;\r\n      }\r\n      vg-scrub-bar-buffering-time .background {\r\n        background-color: rgba(255, 255, 255, 0.3);\r\n      }\r\n      vg-controls vg-scrub-bar-buffering-time {\r\n        position: absolute;\r\n        top: calc(50% - 3px);\r\n      }\r\n      vg-controls vg-scrub-bar-buffering-time .background {\r\n        -webkit-border-radius: 2px;\r\n        -moz-border-radius: 2px;\r\n        border-radius: 2px;\r\n      }\r\n    `]\r\n            }]\r\n    }], function () { return [{ type: ɵngcc0.ElementRef }, { type: ɵngcc1.VgApiService }]; }, { vgFor: [{\r\n            type: Input\r\n        }] }); })();\r\nif (false) {\r\n    /** @type {?} */\r\n    VgScrubBarBufferingTimeComponent.prototype.vgFor;\r\n    /** @type {?} */\r\n    VgScrubBarBufferingTimeComponent.prototype.elem;\r\n    /** @type {?} */\r\n    VgScrubBarBufferingTimeComponent.prototype.target;\r\n    /** @type {?} */\r\n    VgScrubBarBufferingTimeComponent.prototype.subscriptions;\r\n    /** @type {?} */\r\n    VgScrubBarBufferingTimeComponent.prototype.API;\r\n}\r\n\r\n/**\r\n * @fileoverview added by tsickle\r\n * Generated from: lib/components/vg-scrub-bar/vg-scrub-bar-cue-points/vg-scrub-bar-cue-points.component.ts\r\n * @suppress {checkTypes,constantProperty,extraRequire,missingOverride,missingRequire,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\r\n */\r\n// tslint:disable-next-line: no-conflicting-lifecycle\r\nclass VgScrubBarCuePointsComponent {\r\n    /**\r\n     * @param {?} ref\r\n     * @param {?} API\r\n     */\r\n    constructor(ref, API) {\r\n        this.API = API;\r\n        this.onLoadedMetadataCalled = false;\r\n        this.cuePoints = [];\r\n        this.subscriptions = [];\r\n        this.totalCues = 0;\r\n        this.elem = ref.nativeElement;\r\n    }\r\n    /**\r\n     * @return {?}\r\n     */\r\n    ngOnInit() {\r\n        if (this.API.isPlayerReady) {\r\n            this.onPlayerReady();\r\n        }\r\n        else {\r\n            this.subscriptions.push(this.API.playerReadyEvent.subscribe((/**\r\n             * @return {?}\r\n             */\r\n            () => this.onPlayerReady())));\r\n        }\r\n    }\r\n    /**\r\n     * @return {?}\r\n     */\r\n    onPlayerReady() {\r\n        this.target = this.API.getMediaById(this.vgFor);\r\n        /** @type {?} */\r\n        const onTimeUpdate = this.target.subscriptions.loadedMetadata;\r\n        this.subscriptions.push(onTimeUpdate.subscribe(this.onLoadedMetadata.bind(this)));\r\n        if (this.onLoadedMetadataCalled) {\r\n            this.onLoadedMetadata();\r\n        }\r\n    }\r\n    /**\r\n     * @return {?}\r\n     */\r\n    onLoadedMetadata() {\r\n        if (this.vgCuePoints) {\r\n            // We need to transform the TextTrackCueList to Array or it doesn't work on IE11/Edge.\r\n            // See: https://github.com/videogular/videogular2/issues/369\r\n            this.cuePoints = [];\r\n            for (let i = 0, l = this.vgCuePoints.length; i < l; i++) {\r\n                /** @type {?} */\r\n                const end = this.vgCuePoints[i].endTime >= 0\r\n                    ? this.vgCuePoints[i].endTime\r\n                    : this.vgCuePoints[i].startTime + 1;\r\n                /** @type {?} */\r\n                const cuePointDuration = (end - this.vgCuePoints[i].startTime) * 1000;\r\n                /** @type {?} */\r\n                let position = '0';\r\n                /** @type {?} */\r\n                let percentWidth = '0';\r\n                if (typeof cuePointDuration === 'number' && this.target.time.total) {\r\n                    percentWidth =\r\n                        (cuePointDuration * 100) / this.target.time.total + '%';\r\n                    position =\r\n                        (this.vgCuePoints[i].startTime * 100) /\r\n                            Math.round(this.target.time.total / 1000) +\r\n                            '%';\r\n                }\r\n                ((/** @type {?} */ (this.vgCuePoints[i]))).$$style = {\r\n                    width: percentWidth,\r\n                    left: position,\r\n                };\r\n                this.cuePoints.push(this.vgCuePoints[i]);\r\n            }\r\n        }\r\n    }\r\n    /**\r\n     * @return {?}\r\n     */\r\n    updateCuePoints() {\r\n        if (!this.target) {\r\n            this.onLoadedMetadataCalled = true;\r\n            return;\r\n        }\r\n        this.onLoadedMetadata();\r\n    }\r\n    /**\r\n     * @param {?} changes\r\n     * @return {?}\r\n     */\r\n    ngOnChanges(changes) {\r\n        if (changes.vgCuePoints.currentValue) {\r\n            this.updateCuePoints();\r\n        }\r\n    }\r\n    /**\r\n     * @return {?}\r\n     */\r\n    ngDoCheck() {\r\n        if (this.vgCuePoints) {\r\n            /** @type {?} */\r\n            const changes = this.totalCues !== this.vgCuePoints.length;\r\n            if (changes) {\r\n                this.totalCues = this.vgCuePoints.length;\r\n                this.updateCuePoints();\r\n            }\r\n        }\r\n    }\r\n    /**\r\n     * @return {?}\r\n     */\r\n    ngOnDestroy() {\r\n        this.subscriptions.forEach((/**\r\n         * @param {?} s\r\n         * @return {?}\r\n         */\r\n        (s) => s.unsubscribe()));\r\n    }\r\n}\r\nVgScrubBarCuePointsComponent.ɵfac = function VgScrubBarCuePointsComponent_Factory(t) { return new (t || VgScrubBarCuePointsComponent)(ɵngcc0.ɵɵdirectiveInject(ɵngcc0.ElementRef), ɵngcc0.ɵɵdirectiveInject(ɵngcc1.VgApiService)); };\r\nVgScrubBarCuePointsComponent.ɵcmp = ɵngcc0.ɵɵdefineComponent({ type: VgScrubBarCuePointsComponent, selectors: [[\"vg-scrub-bar-cue-points\"]], inputs: { vgCuePoints: \"vgCuePoints\", vgFor: \"vgFor\" }, features: [ɵngcc0.ɵɵNgOnChangesFeature], decls: 2, vars: 1, consts: [[1, \"cue-point-container\"], [\"class\", \"cue-point\", 3, \"width\", \"left\", 4, \"ngFor\", \"ngForOf\"], [1, \"cue-point\"]], template: function VgScrubBarCuePointsComponent_Template(rf, ctx) { if (rf & 1) {\r\n        ɵngcc0.ɵɵelementStart(0, \"div\", 0);\r\n        ɵngcc0.ɵɵtemplate(1, VgScrubBarCuePointsComponent_span_1_Template, 1, 4, \"span\", 1);\r\n        ɵngcc0.ɵɵelementEnd();\r\n    } if (rf & 2) {\r\n        ɵngcc0.ɵɵadvance(1);\r\n        ɵngcc0.ɵɵproperty(\"ngForOf\", ctx.cuePoints);\r\n    } }, directives: [ɵngcc2.NgForOf], styles: [\"\\n      vg-scrub-bar-cue-points {\\n        display: flex;\\n        width: 100%;\\n        height: 5px;\\n        pointer-events: none;\\n        position: absolute;\\n      }\\n      vg-scrub-bar-cue-points .cue-point-container .cue-point {\\n        position: absolute;\\n        height: 5px;\\n        background-color: rgba(255, 204, 0, 0.7);\\n      }\\n      vg-controls vg-scrub-bar-cue-points {\\n        position: absolute;\\n        top: calc(50% - 3px);\\n      }\\n    \"], encapsulation: 2 });\r\n/** @nocollapse */\r\nVgScrubBarCuePointsComponent.ctorParameters = () => [\r\n    { type: ElementRef },\r\n    { type: VgApiService }\r\n];\r\nVgScrubBarCuePointsComponent.propDecorators = {\r\n    vgCuePoints: [{ type: Input }],\r\n    vgFor: [{ type: Input }]\r\n};\r\n/*@__PURE__*/ (function () { ɵngcc0.ɵsetClassMetadata(VgScrubBarCuePointsComponent, [{\r\n        type: Component,\r\n        args: [{\r\n                selector: 'vg-scrub-bar-cue-points',\r\n                encapsulation: ViewEncapsulation.None,\r\n                template: `\r\n    <div class=\"cue-point-container\">\r\n      <span\r\n        *ngFor=\"let cp of cuePoints\"\r\n        [style.width]=\"cp.$$style?.width\"\r\n        [style.left]=\"cp.$$style?.left\"\r\n        class=\"cue-point\"\r\n      ></span>\r\n    </div>\r\n  `,\r\n                styles: [`\r\n      vg-scrub-bar-cue-points {\r\n        display: flex;\r\n        width: 100%;\r\n        height: 5px;\r\n        pointer-events: none;\r\n        position: absolute;\r\n      }\r\n      vg-scrub-bar-cue-points .cue-point-container .cue-point {\r\n        position: absolute;\r\n        height: 5px;\r\n        background-color: rgba(255, 204, 0, 0.7);\r\n      }\r\n      vg-controls vg-scrub-bar-cue-points {\r\n        position: absolute;\r\n        top: calc(50% - 3px);\r\n      }\r\n    `]\r\n            }]\r\n    }], function () { return [{ type: ɵngcc0.ElementRef }, { type: ɵngcc1.VgApiService }]; }, { vgCuePoints: [{\r\n            type: Input\r\n        }], vgFor: [{\r\n            type: Input\r\n        }] }); })();\r\nif (false) {\r\n    /** @type {?} */\r\n    VgScrubBarCuePointsComponent.prototype.vgCuePoints;\r\n    /** @type {?} */\r\n    VgScrubBarCuePointsComponent.prototype.vgFor;\r\n    /** @type {?} */\r\n    VgScrubBarCuePointsComponent.prototype.elem;\r\n    /** @type {?} */\r\n    VgScrubBarCuePointsComponent.prototype.target;\r\n    /** @type {?} */\r\n    VgScrubBarCuePointsComponent.prototype.onLoadedMetadataCalled;\r\n    /** @type {?} */\r\n    VgScrubBarCuePointsComponent.prototype.cuePoints;\r\n    /** @type {?} */\r\n    VgScrubBarCuePointsComponent.prototype.subscriptions;\r\n    /** @type {?} */\r\n    VgScrubBarCuePointsComponent.prototype.totalCues;\r\n    /** @type {?} */\r\n    VgScrubBarCuePointsComponent.prototype.API;\r\n}\r\n\r\n/**\r\n * @fileoverview added by tsickle\r\n * Generated from: lib/components/vg-scrub-bar/vg-scrub-bar-current-time/vg-scrub-bar-current-time.component.ts\r\n * @suppress {checkTypes,constantProperty,extraRequire,missingOverride,missingRequire,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\r\n */\r\nclass VgScrubBarCurrentTimeComponent {\r\n    /**\r\n     * @param {?} ref\r\n     * @param {?} API\r\n     */\r\n    constructor(ref, API) {\r\n        this.API = API;\r\n        this.vgSlider = false;\r\n        this.subscriptions = [];\r\n        this.elem = ref.nativeElement;\r\n    }\r\n    /**\r\n     * @return {?}\r\n     */\r\n    ngOnInit() {\r\n        if (this.API.isPlayerReady) {\r\n            this.onPlayerReady();\r\n        }\r\n        else {\r\n            this.subscriptions.push(this.API.playerReadyEvent.subscribe((/**\r\n             * @return {?}\r\n             */\r\n            () => this.onPlayerReady())));\r\n        }\r\n    }\r\n    /**\r\n     * @return {?}\r\n     */\r\n    onPlayerReady() {\r\n        this.target = this.API.getMediaById(this.vgFor);\r\n    }\r\n    /**\r\n     * @return {?}\r\n     */\r\n    getPercentage() {\r\n        return this.target\r\n            ? Math.round((this.target.time.current * 100) / this.target.time.total) +\r\n                '%'\r\n            : '0%';\r\n    }\r\n    /**\r\n     * @return {?}\r\n     */\r\n    ngOnDestroy() {\r\n        this.subscriptions.forEach((/**\r\n         * @param {?} s\r\n         * @return {?}\r\n         */\r\n        (s) => s.unsubscribe()));\r\n    }\r\n}\r\nVgScrubBarCurrentTimeComponent.ɵfac = function VgScrubBarCurrentTimeComponent_Factory(t) { return new (t || VgScrubBarCurrentTimeComponent)(ɵngcc0.ɵɵdirectiveInject(ɵngcc0.ElementRef), ɵngcc0.ɵɵdirectiveInject(ɵngcc1.VgApiService)); };\r\nVgScrubBarCurrentTimeComponent.ɵcmp = ɵngcc0.ɵɵdefineComponent({ type: VgScrubBarCurrentTimeComponent, selectors: [[\"vg-scrub-bar-current-time\"]], inputs: { vgSlider: \"vgSlider\", vgFor: \"vgFor\" }, decls: 2, vars: 3, consts: [[1, \"background\"], [\"class\", \"slider\", 4, \"ngIf\"], [1, \"slider\"]], template: function VgScrubBarCurrentTimeComponent_Template(rf, ctx) { if (rf & 1) {\r\n        ɵngcc0.ɵɵelement(0, \"div\", 0);\r\n        ɵngcc0.ɵɵtemplate(1, VgScrubBarCurrentTimeComponent_span_1_Template, 1, 0, \"span\", 1);\r\n    } if (rf & 2) {\r\n        ɵngcc0.ɵɵstyleProp(\"width\", ctx.getPercentage());\r\n        ɵngcc0.ɵɵadvance(1);\r\n        ɵngcc0.ɵɵproperty(\"ngIf\", ctx.vgSlider);\r\n    } }, directives: [ɵngcc2.NgIf], styles: [\"\\n      vg-scrub-bar-current-time {\\n        display: flex;\\n        width: 100%;\\n        height: 5px;\\n        pointer-events: none;\\n        position: absolute;\\n      }\\n      vg-scrub-bar-current-time .background {\\n        background-color: white;\\n      }\\n      vg-controls vg-scrub-bar-current-time {\\n        position: absolute;\\n        top: calc(50% - 3px);\\n        -webkit-border-radius: 2px;\\n        -moz-border-radius: 2px;\\n        border-radius: 2px;\\n      }\\n      vg-controls vg-scrub-bar-current-time .background {\\n        border: 1px solid white;\\n        -webkit-border-radius: 2px;\\n        -moz-border-radius: 2px;\\n        border-radius: 2px;\\n      }\\n      vg-scrub-bar-current-time .slider {\\n        background: white;\\n        height: 15px;\\n        width: 15px;\\n        border-radius: 50%;\\n        box-shadow: 0px 0px 10px black;\\n        margin-top: -5px;\\n        margin-left: -10px;\\n      }\\n    \"], encapsulation: 2 });\r\n/** @nocollapse */\r\nVgScrubBarCurrentTimeComponent.ctorParameters = () => [\r\n    { type: ElementRef },\r\n    { type: VgApiService }\r\n];\r\nVgScrubBarCurrentTimeComponent.propDecorators = {\r\n    vgFor: [{ type: Input }],\r\n    vgSlider: [{ type: Input }]\r\n};\r\n/*@__PURE__*/ (function () { ɵngcc0.ɵsetClassMetadata(VgScrubBarCurrentTimeComponent, [{\r\n        type: Component,\r\n        args: [{\r\n                selector: 'vg-scrub-bar-current-time',\r\n                encapsulation: ViewEncapsulation.None,\r\n                template: `<div class=\"background\" [style.width]=\"getPercentage()\"></div>\r\n    <span class=\"slider\" *ngIf=\"vgSlider\"></span>`,\r\n                styles: [`\r\n      vg-scrub-bar-current-time {\r\n        display: flex;\r\n        width: 100%;\r\n        height: 5px;\r\n        pointer-events: none;\r\n        position: absolute;\r\n      }\r\n      vg-scrub-bar-current-time .background {\r\n        background-color: white;\r\n      }\r\n      vg-controls vg-scrub-bar-current-time {\r\n        position: absolute;\r\n        top: calc(50% - 3px);\r\n        -webkit-border-radius: 2px;\r\n        -moz-border-radius: 2px;\r\n        border-radius: 2px;\r\n      }\r\n      vg-controls vg-scrub-bar-current-time .background {\r\n        border: 1px solid white;\r\n        -webkit-border-radius: 2px;\r\n        -moz-border-radius: 2px;\r\n        border-radius: 2px;\r\n      }\r\n      vg-scrub-bar-current-time .slider {\r\n        background: white;\r\n        height: 15px;\r\n        width: 15px;\r\n        border-radius: 50%;\r\n        box-shadow: 0px 0px 10px black;\r\n        margin-top: -5px;\r\n        margin-left: -10px;\r\n      }\r\n    `]\r\n            }]\r\n    }], function () { return [{ type: ɵngcc0.ElementRef }, { type: ɵngcc1.VgApiService }]; }, { vgSlider: [{\r\n            type: Input\r\n        }], vgFor: [{\r\n            type: Input\r\n        }] }); })();\r\nif (false) {\r\n    /** @type {?} */\r\n    VgScrubBarCurrentTimeComponent.prototype.vgFor;\r\n    /** @type {?} */\r\n    VgScrubBarCurrentTimeComponent.prototype.vgSlider;\r\n    /** @type {?} */\r\n    VgScrubBarCurrentTimeComponent.prototype.elem;\r\n    /** @type {?} */\r\n    VgScrubBarCurrentTimeComponent.prototype.target;\r\n    /** @type {?} */\r\n    VgScrubBarCurrentTimeComponent.prototype.subscriptions;\r\n    /** @type {?} */\r\n    VgScrubBarCurrentTimeComponent.prototype.API;\r\n}\r\n\r\n/**\r\n * @fileoverview added by tsickle\r\n * Generated from: lib/controls.module.ts\r\n * @suppress {checkTypes,constantProperty,extraRequire,missingOverride,missingRequire,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\r\n */\r\n/** @type {?} */\r\nconst components = [\r\n    VgControlsComponent,\r\n    VgVolumeComponent,\r\n    VgTrackSelectorComponent,\r\n    VgTimeDisplayComponent,\r\n    VgScrubBarComponent,\r\n    VgQualitySelectorComponent,\r\n    VgPlaybackButtonComponent,\r\n    VgPlayPauseComponent,\r\n    VgMuteComponent,\r\n    VgFullscreenComponent,\r\n    VgUtcPipe,\r\n    VgScrubBarBufferingTimeComponent,\r\n    VgScrubBarCuePointsComponent,\r\n    VgScrubBarCurrentTimeComponent\r\n];\r\nclass VgControlsModule {\r\n}\r\nVgControlsModule.ɵmod = ɵngcc0.ɵɵdefineNgModule({ type: VgControlsModule });\r\nVgControlsModule.ɵinj = ɵngcc0.ɵɵdefineInjector({ factory: function VgControlsModule_Factory(t) { return new (t || VgControlsModule)(); }, imports: [[CommonModule, VgCoreModule]] });\r\n(function () { (typeof ngJitMode === \"undefined\" || ngJitMode) && ɵngcc0.ɵɵsetNgModuleScope(VgControlsModule, { declarations: function () { return [VgControlsComponent, VgVolumeComponent, VgTrackSelectorComponent, VgTimeDisplayComponent, VgScrubBarComponent, VgQualitySelectorComponent, VgPlaybackButtonComponent, VgPlayPauseComponent, VgMuteComponent, VgFullscreenComponent, VgUtcPipe, VgScrubBarBufferingTimeComponent, VgScrubBarCuePointsComponent, VgScrubBarCurrentTimeComponent]; }, imports: function () { return [CommonModule, VgCoreModule]; }, exports: function () { return [VgControlsComponent, VgVolumeComponent, VgTrackSelectorComponent, VgTimeDisplayComponent, VgScrubBarComponent, VgQualitySelectorComponent, VgPlaybackButtonComponent, VgPlayPauseComponent, VgMuteComponent, VgFullscreenComponent, VgUtcPipe, VgScrubBarBufferingTimeComponent, VgScrubBarCuePointsComponent, VgScrubBarCurrentTimeComponent]; } }); })();\r\n/*@__PURE__*/ (function () { ɵngcc0.ɵsetClassMetadata(VgControlsModule, [{\r\n        type: NgModule,\r\n        args: [{\r\n                imports: [CommonModule, VgCoreModule],\r\n                declarations: [...components],\r\n                exports: [...components]\r\n            }]\r\n    }], null, null); })();\r\n\r\n/**\r\n * @fileoverview added by tsickle\r\n * Generated from: index.ts\r\n * @suppress {checkTypes,constantProperty,extraRequire,missingOverride,missingRequire,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\r\n */\r\n\r\n/**\r\n * @fileoverview added by tsickle\r\n * Generated from: videogular-ngx-videogular-controls.ts\r\n * @suppress {checkTypes,constantProperty,extraRequire,missingOverride,missingRequire,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\r\n */\r\n\r\nexport { VgControlsComponent, VgControlsModule, VgFullscreenComponent, VgMuteComponent, VgPlayPauseComponent, VgPlaybackButtonComponent, VgQualitySelectorComponent, VgScrubBarBufferingTimeComponent, VgScrubBarComponent, VgScrubBarCuePointsComponent, VgScrubBarCurrentTimeComponent, VgTimeDisplayComponent, VgTrackSelectorComponent, VgUtcPipe, VgVolumeComponent };\r\n\r\n//# sourceMappingURL=videogular-ngx-videogular-controls.js.map","import { IonicModule } from '@ionic/angular';\r\nimport { RouterModule, Routes } from '@angular/router';\r\nimport { NgModule } from '@angular/core';\r\nimport { CommonModule } from '@angular/common';\r\n\r\nimport { VideoPlaylistPage } from './video-playlist.page';\r\nimport { VideoPlaylistResolver } from './video-playlist.resolver';\r\nimport { VideoPlaylistService } from './video-playlist.service';\r\nimport { ComponentsModule } from '../components/components.module';\r\n\r\nimport { VgCoreModule } from '@videogular/ngx-videogular/core';\r\nimport { VgControlsModule } from '@videogular/ngx-videogular/controls';\r\nimport { VgOverlayPlayModule } from '@videogular/ngx-videogular/overlay-play';\r\nimport { VgBufferingModule } from '@videogular/ngx-videogular/buffering';\r\n\r\n\r\nconst routes: Routes = [\r\n  {\r\n    path: '',\r\n    component: VideoPlaylistPage,\r\n    resolve: {\r\n      data: VideoPlaylistResolver\r\n    }\r\n  }\r\n];\r\n\r\n@NgModule({\r\n  imports: [\r\n    IonicModule,\r\n    CommonModule,\r\n    ComponentsModule,\r\n    RouterModule.forChild(routes),\r\n    VgCoreModule,\r\n    VgControlsModule,\r\n    VgOverlayPlayModule,\r\n    VgBufferingModule\r\n  ],\r\n  declarations: [ VideoPlaylistPage ],\r\n  providers: [\r\n    VideoPlaylistResolver,\r\n    VideoPlaylistService\r\n  ]\r\n})\r\nexport class VideoPlaylistPageModule {}\r\n"],"sourceRoot":"webpack:///"}