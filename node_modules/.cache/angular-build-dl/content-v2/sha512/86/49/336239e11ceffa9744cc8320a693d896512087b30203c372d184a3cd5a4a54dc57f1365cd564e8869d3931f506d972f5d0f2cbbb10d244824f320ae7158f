{"version":3,"sources":["webpack:///src/app/login/login.page.ts","webpack:///src/app/login/login.page.html","webpack:///src/app/login/login.module.ts"],"names":["LoginPage","router","menu","validation_messages","type","message","loginForm","compose","required","pattern","minLength","enable","console","log","navigate","doLogin","doFacebookLogin","doGoogleLogin","selector","templateUrl","styleUrls","routes","path","component","LoginPageModule","forChild","imports","declarations"],"mappings":"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","file":"login-login-module-es5.js","sourcesContent":["import { Component } from '@angular/core';\r\nimport { Validators, FormGroup, FormControl } from '@angular/forms';\r\nimport { Router } from '@angular/router';\r\nimport { MenuController } from '@ionic/angular';\r\n\r\n@Component({\r\n  selector: 'app-login',\r\n  templateUrl: './login.page.html',\r\n  styleUrls: [\r\n    './styles/login.page.scss'\r\n  ]\r\n})\r\nexport class LoginPage {\r\n  loginForm: FormGroup;\r\n\r\n  validation_messages = {\r\n    'email': [\r\n      { type: 'required', message: 'Email is required.' },\r\n      { type: 'pattern', message: 'Enter a valid email.' }\r\n    ],\r\n    'password': [\r\n      { type: 'required', message: 'Password is required.' },\r\n      { type: 'minlength', message: 'Password must be at least 5 characters long.' }\r\n    ]\r\n  };\r\n\r\n  constructor(\r\n    public router: Router,\r\n    public menu: MenuController\r\n  ) {\r\n    this.loginForm = new FormGroup({\r\n      'email': new FormControl('test@test.com', Validators.compose([\r\n        Validators.required,\r\n        Validators.pattern('^[a-zA-Z0-9_.+-]+@[a-zA-Z0-9-]+.[a-zA-Z0-9-.]+$')\r\n      ])),\r\n      'password': new FormControl('', Validators.compose([\r\n        Validators.minLength(5),\r\n        Validators.required\r\n      ]))\r\n    });\r\n  }\r\n\r\n  // Disable side menu for this page\r\n  ionViewDidEnter(): void {\r\n    this.menu.enable(false);\r\n  }\r\n\r\n  // Restore to default when leaving this page\r\n  ionViewDidLeave(): void {\r\n    this.menu.enable(true);\r\n  }\r\n\r\n  doLogin(): void {\r\n    console.log('do Log In');\r\n    this.router.navigate(['app/categories']);\r\n  }\r\n\r\n  goToForgotPassword(): void {\r\n    console.log('redirect to forgot-password page');\r\n  }\r\n\r\n  doFacebookLogin(): void {\r\n    console.log('facebook login');\r\n    this.router.navigate(['app/categories']);\r\n  }\r\n\r\n  doGoogleLogin(): void {\r\n    console.log('google login');\r\n    this.router.navigate(['app/categories']);\r\n  }\r\n\r\n  doTwitterLogin(): void {\r\n    console.log('twitter login');\r\n    this.router.navigate(['app/categories']);\r\n  }\r\n}\r\n","<ion-header>\r\n  <ion-toolbar color=\"primary\">\r\n    <ion-buttons slot=\"start\">\r\n      <ion-back-button></ion-back-button>\r\n    </ion-buttons>\r\n    <ion-title>Log In</ion-title>\r\n  </ion-toolbar>\r\n</ion-header>\r\n\r\n<ion-content class=\"login-content\">\r\n  <h2 class=\"auth-title\">\r\n    Welcome!\r\n    <br/>\r\n    Discover the new Ionic 5\r\n  </h2>\r\n  <form [formGroup]=\"loginForm\" (ngSubmit)=\"doLogin()\">\r\n    <ion-list class=\"inputs-list\" lines=\"full\">\r\n      <ion-item class=\"input-item\">\r\n        <ion-input type=\"email\" placeholder=\"Email\" formControlName=\"email\" clearInput autocapitalize=\"off\" inputmode=\"email\"></ion-input>\r\n      </ion-item>\r\n      <div class=\"error-container\">\r\n        <ng-container *ngFor=\"let validation of validation_messages.email\">\r\n          <div class=\"error-message\" *ngIf=\"loginForm.get('email').hasError(validation.type) && (loginForm.get('email').dirty || loginForm.get('email').touched)\">\r\n            <ion-icon name=\"information-circle-outline\"></ion-icon>\r\n            <span>{{ validation.message }}</span>\r\n          </div>\r\n        </ng-container>\r\n      </div>\r\n\r\n      <ion-item class=\"input-item\">\r\n        <app-show-hide-password>\r\n          <ion-input type=\"password\" placeholder=\"Password\" formControlName=\"password\"></ion-input>\r\n        </app-show-hide-password>\r\n      </ion-item>\r\n      <div class=\"error-container\">\r\n        <ng-container *ngFor=\"let validation of validation_messages.password\">\r\n          <div class=\"error-message\" *ngIf=\"loginForm.get('password').hasError(validation.type) && (loginForm.get('password').dirty || loginForm.get('password').touched)\">\r\n            <ion-icon name=\"information-circle-outline\"></ion-icon>\r\n            <span>{{ validation.message }}</span>\r\n          </div>\r\n        </ng-container>\r\n      </div>\r\n    </ion-list>\r\n\r\n    <ion-button class=\"login-btn\" type=\"submit\" expand=\"block\" [disabled]=\"!loginForm.valid\">Log In</ion-button>\r\n    <ion-row class=\"other-auth-options-row\">\r\n      <ion-button class=\"forgot-btn\" fill=\"clear\" [routerLink]=\"['/auth/forgot-password']\">\r\n        Forgot Password?\r\n      </ion-button>\r\n      <ion-button class=\"signup-btn\" fill=\"clear\" [routerLink]=\"['/auth/signup']\">\r\n        Sign Up!\r\n      </ion-button>\r\n    </ion-row>\r\n  </form>\r\n\r\n  <div class=\"social-auth-options\">\r\n    <p class=\"options-divider\">Or</p>\r\n    <ion-button class=\"social-auth-btn facebook-auth-btn\" expand=\"block\" color=\"facebook\" (click)=\"doFacebookLogin()\">Log In with Facebook</ion-button>\r\n    <ion-button class=\"social-auth-btn google-auth-btn\" expand=\"block\" color=\"google\" (click)=\"doGoogleLogin()\">Log In with Google</ion-button>\r\n  </div>\r\n</ion-content>\r\n","import { NgModule } from '@angular/core';\r\nimport { CommonModule } from '@angular/common';\r\nimport { FormsModule, ReactiveFormsModule } from '@angular/forms';\r\nimport { Routes, RouterModule } from '@angular/router';\r\n\r\nimport { IonicModule } from '@ionic/angular';\r\n\r\nimport { ComponentsModule } from '../components/components.module';\r\n\r\nimport { LoginPage } from './login.page';\r\n\r\nconst routes: Routes = [\r\n  {\r\n    path: '',\r\n    component: LoginPage\r\n  }\r\n];\r\n\r\n@NgModule({\r\n  imports: [\r\n    CommonModule,\r\n    FormsModule,\r\n    ReactiveFormsModule,\r\n    IonicModule,\r\n    RouterModule.forChild(routes),\r\n    ComponentsModule\r\n  ],\r\n  declarations: [LoginPage]\r\n})\r\nexport class LoginPageModule {}\r\n"]}