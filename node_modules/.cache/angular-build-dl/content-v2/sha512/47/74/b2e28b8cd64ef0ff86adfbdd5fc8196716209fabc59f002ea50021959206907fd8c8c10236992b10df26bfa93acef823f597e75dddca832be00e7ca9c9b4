{"version":3,"sources":["./src/app/showcase/route-resolvers-ux/blocking-resolvers/blocking-resolvers.page.ts","./src/app/showcase/route-resolvers-ux/blocking-resolvers/blocking-resolvers.page.html","./src/app/showcase/route-resolvers-ux/route-resolvers-ux.module.ts","./src/app/showcase/route-resolvers-ux/progressive-shell-resolvers/progressive-shell.resolver.ts","./src/app/shell/data-store.ts","./src/app/showcase/route-resolvers-ux/blocking-resolvers/blocking.resolver.ts","./src/app/showcase/route-resolvers-ux/non-blocking-resolvers/non-blocking.resolver.ts","./src/app/showcase/route-resolvers-ux/route-resolvers-ux.page.ts","./src/app/showcase/route-resolvers-ux/route-resolvers-ux.page.html","./src/app/showcase/route-resolvers-ux/non-blocking-resolvers/non-blocking-resolvers.page.ts","./src/app/showcase/route-resolvers-ux/non-blocking-resolvers/non-blocking-resolvers.page.html","./src/app/showcase/route-resolvers-ux/progressive-shell-resolvers/progressive-shell-resolvers.page.ts","./src/app/showcase/route-resolvers-ux/progressive-shell-resolvers/progressive-shell-resolvers.page.html"],"names":[],"mappings":"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","file":"route-resolvers-ux-route-resolvers-ux-module-es2015.js","sourcesContent":["import { Component, OnInit } from '@angular/core';\r\nimport { ActivatedRoute } from '@angular/router';\r\n\r\n// You can also use a Class object as a shell model\r\nimport { ShowcaseShellModel } from '../../showcase-shell.model';\r\n\r\n@Component({\r\n  selector: 'app-showcase-blocking-resolvers',\r\n  templateUrl: './blocking-resolvers.page.html',\r\n  styleUrls: ['./blocking-resolvers.page.scss']\r\n})\r\nexport class BlockingResovlersPage implements OnInit {\r\n  // We will assign data coming from the Route Resolver to this property\r\n  routeResolveData: ShowcaseShellModel;\r\n\r\n  constructor(\r\n    private route: ActivatedRoute\r\n  ) { }\r\n\r\n  ngOnInit(): void {\r\n    console.log('Showcase Blocking Resovlers - ngOnInit()');\r\n\r\n    if (this.route && this.route.data) {\r\n      const dataObservable = this.route.data;\r\n      console.log('Showcase Blocking Resovlers - Route Resolve Observable => dataObservable: ', dataObservable);\r\n\r\n      if (dataObservable) {\r\n        dataObservable.subscribe(observableValue => {\r\n          const pageData: ShowcaseShellModel = observableValue['data'];\r\n          // tslint:disable-next-line:max-line-length\r\n          console.log('Showcase Blocking Resovlers - Subscribe to dataObservable (will emmit just one value) => PageData (' + ((pageData && pageData.isShell) ? 'SHELL' : 'REAL') + '): ', pageData);\r\n          if (pageData) {\r\n            this.routeResolveData = pageData;\r\n          }\r\n        });\r\n      } else {\r\n        console.warn('No dataObservable coming from Route Resolver data');\r\n      }\r\n    } else {\r\n      console.warn('No data coming from Route Resolver');\r\n    }\r\n  }\r\n}\r\n","<ion-header>\r\n  <ion-toolbar color=\"primary\">\r\n    <ion-buttons slot=\"start\">\r\n      <ion-back-button defaultHref=\"showcase/route-resolvers-ux\"></ion-back-button>\r\n    </ion-buttons>\r\n    <ion-title>\r\n      Blocking Resovler Showcase\r\n    </ion-title>\r\n  </ion-toolbar>\r\n</ion-header>\r\n\r\n<ion-content class=\"showcase-content\">\r\n  <section class=\"showcase-section\">\r\n    <p>\r\n      Notice how the UX degrades when using <b>Blocking</b> Route Resolvers in Angular\r\n    </p>\r\n    <ion-row style=\"background-color: #FFF; padding: 10px;\">\r\n      <ion-col size=\"12\">\r\n        <div [ngStyle]=\"{'background-image': 'url(' + routeResolveData?.cover + ')'}\" style=\"background-size: cover; background-repeat: no-repeat;\">\r\n          <app-aspect-ratio [ratio]=\"{w:2, h:1}\">\r\n            <h4 style=\"margin: 10px; text-align: center; color: #FFF;\">Heading on top of a cover image</h4>\r\n          </app-aspect-ratio>\r\n        </div>\r\n      </ion-col>\r\n      <ion-col size=\"4\">\r\n        <app-aspect-ratio [ratio]=\"{w:1, h:1}\">\r\n          <img [src]=\"routeResolveData?.image\" alt=\"Sample Image\" style=\"width: 100%; height: 100%;\"/>\r\n        </app-aspect-ratio>\r\n      </ion-col>\r\n      <ion-col size=\"8\">\r\n        <h3 style=\"margin-top: 0px;\">\r\n          {{ routeResolveData?.title }}\r\n        </h3>\r\n        <p>\r\n          {{ routeResolveData?.description }}\r\n        </p>\r\n      </ion-col>\r\n    </ion-row>\r\n  </section>\r\n</ion-content>\r\n","import { NgModule } from '@angular/core';\r\nimport { CommonModule } from '@angular/common';\r\nimport { FormsModule } from '@angular/forms';\r\nimport { Routes, RouterModule } from '@angular/router';\r\nimport { IonicModule } from '@ionic/angular';\r\nimport { ComponentsModule } from '../../components/components.module';\r\n\r\nimport { RouteResovlersUXPage } from './route-resolvers-ux.page';\r\nimport { NonBlockingResolversPage } from './non-blocking-resolvers/non-blocking-resolvers.page';\r\nimport { BlockingResovlersPage } from './blocking-resolvers/blocking-resolvers.page';\r\nimport { ProgressiveShellResovlersPage } from './progressive-shell-resolvers/progressive-shell-resolvers.page';\r\n\r\nimport { BlockingResolver } from './blocking-resolvers/blocking.resolver';\r\nimport { NonBlockingResolver } from './non-blocking-resolvers/non-blocking.resolver';\r\nimport { ProgressiveShellResolver } from './progressive-shell-resolvers/progressive-shell.resolver';\r\n\r\nimport { ShowcaseService } from '../showcase.service';\r\n\r\nconst routes: Routes = [\r\n  {\r\n    path: '',\r\n    component: RouteResovlersUXPage\r\n  },\r\n  {\r\n    path: 'blocking-resolvers',\r\n    component: BlockingResovlersPage,\r\n    resolve: {\r\n      data: BlockingResolver\r\n    }\r\n  },\r\n  {\r\n    path: 'non-blocking-resolvers',\r\n    component: NonBlockingResolversPage,\r\n    resolve: {\r\n      data: NonBlockingResolver\r\n    }\r\n  },\r\n  {\r\n    path: 'progressive-shell-resolvers',\r\n    component: ProgressiveShellResovlersPage,\r\n    resolve: {\r\n      data: ProgressiveShellResolver\r\n    }\r\n  }\r\n];\r\n\r\n@NgModule({\r\n  imports: [\r\n    CommonModule,\r\n    FormsModule,\r\n    IonicModule,\r\n    RouterModule.forChild(routes),\r\n    ComponentsModule\r\n  ],\r\n  declarations: [\r\n    RouteResovlersUXPage,\r\n    BlockingResovlersPage,\r\n    NonBlockingResolversPage,\r\n    ProgressiveShellResovlersPage\r\n  ],\r\n  providers: [\r\n    BlockingResolver,\r\n    NonBlockingResolver,\r\n    ProgressiveShellResolver,\r\n    ShowcaseService\r\n  ]\r\n})\r\nexport class RouteResolversUXModule {}\r\n","import { Injectable } from '@angular/core';\r\nimport { Resolve } from '@angular/router';\r\n\r\nimport { ShowcaseService } from '../../showcase.service';\r\nimport { ShowcaseShellModel } from '../../showcase-shell.model';\r\nimport { Observable } from 'rxjs';\r\nimport { DataStore } from '../../../shell/data-store';\r\n\r\n@Injectable()\r\nexport class ProgressiveShellResolver implements Resolve<any> {\r\n\r\n  constructor(private showcaseService: ShowcaseService) {}\r\n\r\n  resolve() {\r\n    const dataSource: Observable<ShowcaseShellModel> = this.showcaseService.getDataSourceWithDelay();\r\n    const dataStore: DataStore<ShowcaseShellModel> = this.showcaseService.getSimpleDataStore(dataSource);\r\n\r\n    return dataStore;\r\n  }\r\n}\r\n","import { Observable, of, combineLatest, ReplaySubject } from 'rxjs';\r\nimport { delay, map, startWith } from 'rxjs/operators';\r\nimport { environment } from '../../environments/environment';\r\n\r\nexport class ShellModel {\r\n  isShell = false;\r\n}\r\n\r\nexport class DataStore<T> {\r\n  // We wait on purpose 2 secs on local environment when fetching from json to simulate the backend roundtrip.\r\n  // However, in production you should set this delay to 0 in the environment.prod file.\r\n  // tslint:disable-next-line:max-line-length\r\n  private networkDelay = (environment.appShellConfig && environment.appShellConfig.networkDelay) ? environment.appShellConfig.networkDelay : 0;\r\n\r\n  private timeline: ReplaySubject<T & ShellModel> = new ReplaySubject(1);\r\n\r\n  constructor(private shellModel: T) { }\r\n\r\n  // Static function with generics\r\n  // (ref: https://stackoverflow.com/a/24293088/1116959)\r\n  // Append a shell (T & ShellModel) to every value (T) emmited to the timeline\r\n  public static AppendShell<T>(dataObservable: Observable<T>, shellModel: T, networkDelay = 400): Observable<T & ShellModel> {\r\n    const delayObservable = of(true).pipe(\r\n      delay(networkDelay)\r\n    );\r\n\r\n    // Assign shell flag accordingly\r\n    // (ref: https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Object/assign)\r\n    return combineLatest([\r\n      delayObservable,\r\n      dataObservable\r\n    ]).pipe(\r\n      // Dismiss unnecessary delayValue\r\n      map(([delayValue, dataValue]: [boolean, T]): (T & ShellModel) => Object.assign(dataValue, {isShell: false})),\r\n      // Set the shell model as the initial value\r\n      startWith(Object.assign(shellModel, {isShell: true}))\r\n    );\r\n  }\r\n\r\n  load(dataSourceObservable: Observable<T>, networkDelay?: number): void {\r\n    // tslint:disable-next-line:no-shadowed-variable\r\n    const delay = (typeof networkDelay === 'number') ? networkDelay : this.networkDelay;\r\n\r\n    let processedDataSource: Observable<any>;\r\n\r\n    // If no network delay, then don't show shell\r\n    if (delay === 0) {\r\n      processedDataSource = dataSourceObservable;\r\n    } else {\r\n      processedDataSource = DataStore.AppendShell(dataSourceObservable, this.shellModel, delay);\r\n    }\r\n\r\n    processedDataSource\r\n    .subscribe((dataValue: T & ShellModel) => {\r\n      this.timeline.next(dataValue);\r\n    });\r\n  }\r\n\r\n  public get state(): Observable<T & ShellModel> {\r\n    return this.timeline.asObservable();\r\n  }\r\n}\r\n","import { Injectable } from '@angular/core';\r\nimport { Resolve } from '@angular/router';\r\nimport { LoadingController } from '@ionic/angular';\r\n\r\nimport { defer } from 'rxjs';\r\nimport { finalize } from 'rxjs/operators';\r\n\r\nimport { ShowcaseService } from '../../showcase.service';\r\n\r\n@Injectable()\r\nexport class BlockingResolver implements Resolve<any> {\r\n  private loadingElement: any;\r\n\r\n  constructor(\r\n    private showcaseService: ShowcaseService,\r\n    private loadingController: LoadingController\r\n  ) { }\r\n\r\n  async presentLoader() {\r\n    this.loadingElement = await this.loadingController.create({\r\n      message: 'Loading ...'\r\n    });\r\n\r\n    await this.loadingElement.present();\r\n  }\r\n\r\n  async dismissLoader() {\r\n    if (this.loadingElement) {\r\n      await this.loadingElement.dismiss();\r\n    }\r\n  }\r\n\r\n  resolve() {\r\n    // WITHOUT LOADING INDICATOR\r\n\r\n    // Base Observable (where we get data from)\r\n    // const dataObservable = this.showcaseService.getData();\r\n\r\n    // Basic Resolver that returns the base Observable\r\n    // return dataObservable;\r\n\r\n\r\n    // WITH LOADING INDICATOR\r\n\r\n    // Base Observable (where we get data from)\r\n    const dataObservable = this.showcaseService.getDataSourceWithDelay().pipe(\r\n      finalize(() => {\r\n        console.log('dataObservable COMPLETED - HIDE LOADER');\r\n        this.dismissLoader();\r\n      })\r\n    );\r\n\r\n    const deferedObservable = defer(() => {\r\n      // Will be logged at the moment of subscription\r\n      console.log('dataObservable STARTED - SHOW LOADER');\r\n      this.presentLoader();\r\n      return dataObservable;\r\n    });\r\n\r\n    // Basic Resolver that returns the base Observable\r\n    return deferedObservable;\r\n  }\r\n}\r\n","import { Injectable } from '@angular/core';\r\nimport { Resolve } from '@angular/router';\r\n\r\nimport { ShowcaseService } from '../../showcase.service';\r\n\r\n@Injectable()\r\nexport class NonBlockingResolver implements Resolve<any> {\r\n\r\n  constructor(private showcaseService: ShowcaseService) {}\r\n\r\n  resolve() {\r\n\r\n    // Base Observable (where we get data from)\r\n    const dataObservable = this.showcaseService.getDataSourceWithDelay();\r\n\r\n    // NON-BLOCKING RESOLVERS\r\n\r\n    // Resolver using a ReplySubject that emits the base Observable and then completes\r\n    // const subject = new ReplaySubject();\r\n    // subject.next(dataObservable);\r\n    // subject.complete();\r\n    // return subject;\r\n\r\n    // Resolver using an Observable that emits the base Observable and then completes\r\n    // const observable = Observable.create((observer) => {\r\n    //   observer.next(dataObservable);\r\n    //   observer.complete();\r\n    // });\r\n    // return observable;\r\n\r\n    // Resolver using a Promise that resolves the base Observable\r\n    const observablePromise = new Promise((resolve, reject) => {\r\n      resolve(dataObservable);\r\n    });\r\n    return observablePromise;\r\n  }\r\n}\r\n","import { Component } from '@angular/core';\r\n\r\n@Component({\r\n  selector: 'app-showcase-route-resolvers-ux',\r\n  templateUrl: './route-resolvers-ux.page.html',\r\n  styleUrls: ['./route-resolvers-ux.page.scss']\r\n})\r\n\r\nexport class RouteResovlersUXPage {\r\n\r\n  constructor() { }\r\n\r\n}\r\n","<ion-header>\r\n  <ion-toolbar color=\"primary\">\r\n    <ion-buttons slot=\"start\">\r\n      <ion-menu-button></ion-menu-button>\r\n    </ion-buttons>\r\n    <ion-title>\r\n      Improve Route Resolvers UX\r\n    </ion-title>\r\n  </ion-toolbar>\r\n</ion-header>\r\n\r\n<ion-content class=\"showcase-content\">\r\n  <section class=\"showcase-section\">\r\n    <p>\r\n      Lets see the difference between the different implementations of Route Resolvers.\r\n    </p>\r\n    <h5>Blocking Route Resolvers</h5>\r\n    <p>\r\n      By default, Angular Route Resolvers won't transition to the page until the Resolver Observable completes.\r\n    </p>\r\n    <p>\r\n      Let's suppose the backend is slow and takes 5 seconds to fetch data and return it to the client, this is what's going to happen.\r\n    </p>\r\n    <p>\r\n      <b>Expected behavior:</b> Page transition will be delayed 5 seconds until the server sends data back to the client.\r\n    </p>\r\n    <ion-button expand=\"block\" [routerLink]=\"['/showcase/route-resolvers-ux/blocking-resolvers']\">Blocking Resolvers</ion-button>\r\n  </section>\r\n  <section class=\"showcase-section\">\r\n    <h5>NON-Blocking Route Resolvers</h5>\r\n    <p>\r\n      To avoid waiting for the Observable to complete, we can wrap the base Observable (the one we are getting data from) with a dummy Observable, Subject or Promise that emits the base Observable and immediately completes.\r\n    </p>\r\n    <p>\r\n      <b>Expected behavior:</b> Page transition will be instant and the transitioned page will show a blank state while the server sends data back to the client.\r\n    </p>\r\n    <ion-button expand=\"block\" [routerLink]=\"['/showcase/route-resolvers-ux/non-blocking-resolvers']\">Non-Blocking Resolvers</ion-button>\r\n  </section>\r\n  <section class=\"showcase-section\">\r\n    <h5>Progressive Shell Resolvers</h5>\r\n    <p>\r\n      By using the <code>DataStore</code> utility in conjunction with Angular Route Resolvers, we can solve this UX problem and make page transitions immediate.\r\n    </p>\r\n    <p>\r\n      This approach uses a non-blocking Resolver in conjunction with the <code>DataStore</code> utility.\r\n    </p>\r\n    <p>\r\n      <b>Expected behavior:</b> Page transition will be instant and the transitioned page will show some shell elements while the server sends data back to the client.\r\n    </p>\r\n    <ion-button expand=\"block\" [routerLink]=\"['/showcase/route-resolvers-ux/progressive-shell-resolvers']\">Progressive Shell Resolvers</ion-button>\r\n  </section>\r\n</ion-content>\r\n","import { Component, OnInit } from '@angular/core';\r\nimport { ActivatedRoute } from '@angular/router';\r\n\r\n// You can also use a Class object as a shell model\r\nimport { ShowcaseShellModel } from '../../showcase-shell.model';\r\n\r\n@Component({\r\n  selector: 'app-showcase-non-blocking-resolvers',\r\n  templateUrl: './non-blocking-resolvers.page.html',\r\n  styleUrls: ['./non-blocking-resolvers.page.scss']\r\n})\r\nexport class NonBlockingResolversPage implements OnInit {\r\n  // We will assign data coming from the Route Resolver to this property\r\n  routeResolveData: ShowcaseShellModel;\r\n\r\n  constructor(\r\n    private route: ActivatedRoute\r\n  ) { }\r\n\r\n  ngOnInit(): void {\r\n    console.log('Showcase NON Blocking Resovlers - ngOnInit()');\r\n\r\n    if (this.route && this.route.data) {\r\n      // We resolved a promise for the data Observable\r\n      const promiseObservable = this.route.data;\r\n      console.log('Showcase NON Blocking Resovlers - Route Resolve Observable => promiseObservable: ', promiseObservable);\r\n\r\n      if (promiseObservable) {\r\n        promiseObservable.subscribe(promiseValue => {\r\n          const dataObservable = promiseValue['data'];\r\n          console.log('Showcase NON Blocking Resovlers - Subscribe to promiseObservable => dataObservable: ', dataObservable);\r\n\r\n          if (dataObservable) {\r\n            dataObservable.subscribe(observableValue => {\r\n              const pageData: ShowcaseShellModel = observableValue;\r\n              // tslint:disable-next-line:max-line-length\r\n              console.log('Showcase NON Blocking Resovlers - Subscribe to dataObservable (will emmit just one value) => PageData (' + ((pageData && pageData.isShell) ? 'SHELL' : 'REAL') + '): ', pageData);\r\n              if (pageData) {\r\n                this.routeResolveData = pageData;\r\n              }\r\n            });\r\n          } else {\r\n            console.warn('No dataObservable coming from Route Resolver promiseObservable');\r\n          }\r\n        });\r\n      } else {\r\n        console.warn('No promiseObservable coming from Route Resolver data');\r\n      }\r\n    } else {\r\n      console.warn('No data coming from Route Resolver');\r\n    }\r\n  }\r\n}\r\n","<ion-header>\r\n  <ion-toolbar color=\"primary\">\r\n    <ion-buttons slot=\"start\">\r\n      <ion-back-button defaultHref=\"showcase/route-resolvers-ux\"></ion-back-button>\r\n    </ion-buttons>\r\n    <ion-title>\r\n      NON Blocking Resovler Showcase\r\n    </ion-title>\r\n  </ion-toolbar>\r\n</ion-header>\r\n\r\n<ion-content class=\"showcase-content\">\r\n  <section class=\"showcase-section\">\r\n    <p>\r\n      With Non-Blocking Resolvers, page transition is immediate. However UX degrades because you are showing a static loading indicator while the server sends data back to the client.\r\n    </p>\r\n    <ng-container *ngIf=\"!routeResolveData\">\r\n      <div style=\"margin: 20px 40px; text-align: center;\">\r\n        <ion-spinner></ion-spinner>\r\n        <p>\r\n          <b>You can show a static shell while fetching data from the backend</b>\r\n        </p>\r\n      </div>\r\n    </ng-container>\r\n    <ng-container *ngIf=\"routeResolveData\">\r\n      <ion-row style=\"background-color: #FFF; padding: 10px;\">\r\n        <ion-col size=\"12\">\r\n          <div [ngStyle]=\"{'background-image': 'url(' + routeResolveData?.cover + ')'}\" style=\"background-size: cover; background-repeat: no-repeat;\">\r\n            <app-aspect-ratio [ratio]=\"{w:2, h:1}\">\r\n              <h4 style=\"margin: 10px; text-align: center; color: #FFF;\">Heading on top of a cover image</h4>\r\n            </app-aspect-ratio>\r\n          </div>\r\n        </ion-col>\r\n        <ion-col size=\"4\">\r\n          <app-aspect-ratio [ratio]=\"{w:1, h:1}\">\r\n            <img [src]=\"routeResolveData?.image\" alt=\"Sample Image\" style=\"width: 100%; height: 100%;\"/>\r\n          </app-aspect-ratio>\r\n        </ion-col>\r\n        <ion-col size=\"8\">\r\n          <h3 style=\"margin-top: 0px;\">\r\n            {{ routeResolveData?.title }}\r\n          </h3>\r\n          <p>\r\n            {{ routeResolveData?.description }}\r\n          </p>\r\n        </ion-col>\r\n      </ion-row>\r\n    </ng-container>\r\n  </section>\r\n</ion-content>\r\n","import { Component, OnInit } from '@angular/core';\r\nimport { ActivatedRoute } from '@angular/router';\r\n\r\n// You can also use a Class object as a shell model\r\nimport { ShowcaseShellModel } from '../../showcase-shell.model';\r\nimport { switchMap } from 'rxjs/operators';\r\n\r\n@Component({\r\n  selector: 'app-showcase-progressive-shell-resolvers',\r\n  templateUrl: './progressive-shell-resolvers.page.html',\r\n  styleUrls: ['./progressive-shell-resolvers.page.scss']\r\n})\r\nexport class ProgressiveShellResovlersPage implements OnInit {\r\n  // We will assign data coming from the Route Resolver to this property\r\n  routeResolveData: ShowcaseShellModel;\r\n\r\n  constructor(private route: ActivatedRoute) { }\r\n\r\n  ngOnInit(): void {\r\n    console.log('Showcase Progressive Shell Resovlers - ngOnInit()');\r\n\r\n    this.route.data\r\n    .pipe(\r\n      // Extract data for this page\r\n      switchMap((resolvedRouteData) => resolvedRouteData['data'].state)\r\n    )\r\n    .subscribe((state: any) => {\r\n      this.routeResolveData = state;\r\n    }, (error) => console.log(error));\r\n  }\r\n}\r\n","<ion-header>\r\n  <ion-toolbar color=\"primary\">\r\n    <ion-buttons slot=\"start\">\r\n      <ion-back-button defaultHref=\"showcase/route-resolvers-ux\"></ion-back-button>\r\n    </ion-buttons>\r\n    <ion-title>\r\n      Progressive Shell Showcase\r\n    </ion-title>\r\n  </ion-toolbar>\r\n</ion-header>\r\n\r\n<ion-content class=\"showcase-content\">\r\n  <section class=\"showcase-section\">\r\n    <ion-row style=\"background-color: #FFF; padding: 10px;\">\r\n      <ion-col size=\"12\">\r\n        <app-image-shell class=\"add-overlay\" animation=\"spinner\" [display]=\"'cover'\" [src]=\"routeResolveData?.cover\" [alt]=\"'Sample Image Cover'\">\r\n          <app-aspect-ratio [ratio]=\"{w:2, h:1}\">\r\n            <h4 style=\"margin: 10px; text-align: center; color: #FFF;\">Heading on top of a cover image</h4>\r\n          </app-aspect-ratio>\r\n        </app-image-shell>\r\n      </ion-col>\r\n      <ion-col size=\"4\">\r\n        <app-aspect-ratio [ratio]=\"{w:1, h:1}\">\r\n          <app-image-shell animation=\"spinner\" [src]=\"routeResolveData?.image\" [alt]=\"'Sample Image'\"></app-image-shell>\r\n        </app-aspect-ratio>\r\n      </ion-col>\r\n      <ion-col size=\"8\">\r\n        <h3 style=\"margin-top: 0px;\">\r\n          <app-text-shell [data]=\"routeResolveData?.title\"></app-text-shell>\r\n        </h3>\r\n        <p>\r\n          <app-text-shell animation=\"bouncing\" lines=\"3\" [data]=\"routeResolveData?.description\"></app-text-shell>\r\n        </p>\r\n      </ion-col>\r\n    </ion-row>\r\n  </section>\r\n</ion-content>\r\n"],"sourceRoot":"webpack:///"}