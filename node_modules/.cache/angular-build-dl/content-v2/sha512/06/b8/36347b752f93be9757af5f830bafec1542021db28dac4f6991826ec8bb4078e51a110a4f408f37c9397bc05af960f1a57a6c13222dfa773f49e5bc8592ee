{"version":3,"sources":["./src/app/notifications/notifications.resolver.ts","./src/app/notifications/notifications.page.ts","./src/app/notifications/notifications.page.html","./src/app/notifications/notifications.module.ts","./src/app/notifications/notifications.service.ts"],"names":[],"mappings":"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","file":"notifications-notifications-module-es2015.js","sourcesContent":["import { Injectable } from '@angular/core';\r\nimport { Resolve } from '@angular/router';\r\nimport { Observable } from 'rxjs';\r\n\r\nimport { NotificationsService } from './notifications.service';\r\n\r\n@Injectable()\r\nexport class NotificationsResolver implements Resolve<any> {\r\n\r\n  constructor(private notificationsService: NotificationsService) { }\r\n\r\n  resolve() {\r\n    // Base Observable (where we get data from)\r\n    const dataObservable: Observable<any> = this.notificationsService.getData();\r\n\r\n    return { source: dataObservable };\r\n  }\r\n}\r\n","import { Component, OnInit } from '@angular/core';\r\nimport { ActivatedRoute } from '@angular/router';\r\nimport { Subscription, Observable } from 'rxjs';\r\nimport { switchMap } from 'rxjs/operators';\r\n\r\n@Component({\r\n  selector: 'app-notifications',\r\n  templateUrl: './notifications.page.html',\r\n  styleUrls: [\r\n    './styles/notifications.page.scss',\r\n    './styles/notifications.shell.scss'\r\n  ]\r\n})\r\nexport class NotificationsPage implements OnInit {\r\n  // Gather all component subscription in one place. Can be one Subscription or multiple (chained using the Subscription.add() method)\r\n  subscriptions: Subscription;\r\n\r\n  notifications: any;\r\n\r\n  constructor(private route: ActivatedRoute) { }\r\n\r\n  ngOnInit(): void {\r\n    this.subscriptions = this.route.data\r\n    .pipe(\r\n      // Extract data for this page\r\n      switchMap((resolvedRouteData: {source: Observable<any>}) => {\r\n        return resolvedRouteData['data'].source;\r\n      })\r\n    )\r\n    .subscribe((pageData) => {\r\n      this.notifications = pageData;\r\n    }, (error) => console.log(error));\r\n  }\r\n\r\n\r\n  // NOTE: Ionic only calls ngOnDestroy if the page was popped (ex: when navigating back)\r\n  // Since ngOnDestroy might not fire when you navigate from the current page, use ionViewWillLeave to cleanup Subscriptions\r\n  ionViewWillLeave(): void {\r\n    this.subscriptions.unsubscribe();\r\n  }\r\n}\r\n","<ion-header>\r\n  <ion-toolbar color=\"primary\">\r\n    <ion-buttons slot=\"start\">\r\n      <ion-menu-button></ion-menu-button>\r\n    </ion-buttons>\r\n    <ion-title>\r\n      Notifications\r\n    </ion-title>\r\n  </ion-toolbar>\r\n</ion-header>\r\n\r\n<ion-content class=\"notifications-content\">\r\n  <ng-container *ngIf=\"notifications\">\r\n    <ion-item-group>\r\n      <ion-item-divider sticky>\r\n        <ion-label>Today</ion-label>\r\n      </ion-item-divider>\r\n      <ion-item class=\"notification-item\" lines=\"none\" *ngFor=\"let notification of notifications.today\">\r\n        <ion-row class=\"notification-item-wrapper\">\r\n          <ion-col size=\"2\">\r\n            <app-aspect-ratio [ratio]=\"{w: 1, h: 1}\">\r\n              <app-image-shell class=\"notification-image\" [src]=\"notification.image\" [alt]=\"'user image'\"></app-image-shell>\r\n            </app-aspect-ratio>\r\n          </ion-col>\r\n          <ion-col class=\"details-wrapper\">\r\n            <h2 class=\"details-name\">{{ notification.name }}</h2>\r\n            <p class=\"details-description\">{{ notification.message }}</p>\r\n          </ion-col>\r\n          <ion-col size=\"2\" class=\"date-wrapper\">\r\n            <h3 class=\"notification-date\">{{ notification.date }}</h3>\r\n          </ion-col>\r\n        </ion-row>\r\n      </ion-item>\r\n    </ion-item-group>\r\n    <ion-item-group>\r\n      <ion-item-divider sticky>\r\n        <ion-label>Yesterday</ion-label>\r\n      </ion-item-divider>\r\n      <ion-item class=\"notification-item\" lines=\"none\" *ngFor=\"let notification of notifications.yesterday\">\r\n        <ion-row class=\"notification-item-wrapper\">\r\n          <ion-col size=\"2\">\r\n            <app-aspect-ratio [ratio]=\"{w: 1, h: 1}\">\r\n              <app-image-shell class=\"notification-image\" [src]=\"notification.image\" [alt]=\"'user image'\"></app-image-shell>\r\n            </app-aspect-ratio>\r\n          </ion-col>\r\n          <ion-col class=\"details-wrapper\">\r\n            <h2 class=\"details-name\">{{ notification.name }}</h2>\r\n            <p class=\"details-description\">{{ notification.message }}</p>\r\n          </ion-col>\r\n          <ion-col size=\"2\" class=\"date-wrapper\">\r\n            <h3 class=\"notification-date\">{{ notification.date }}</h3>\r\n          </ion-col>\r\n        </ion-row>\r\n      </ion-item>\r\n    </ion-item-group>\r\n  </ng-container>\r\n</ion-content>\r\n","import { IonicModule } from '@ionic/angular';\r\nimport { RouterModule } from '@angular/router';\r\nimport { NgModule } from '@angular/core';\r\nimport { CommonModule } from '@angular/common';\r\n\r\nimport { ComponentsModule } from '../components/components.module';\r\n\r\nimport { NotificationsPage } from './notifications.page';\r\nimport { NotificationsResolver } from '../notifications/notifications.resolver';\r\nimport { NotificationsService } from '../notifications/notifications.service';\r\n\r\n@NgModule({\r\n  imports: [\r\n    IonicModule,\r\n    CommonModule,\r\n    ComponentsModule,\r\n    RouterModule.forChild([\r\n      {\r\n        path: '',\r\n        component: NotificationsPage,\r\n        resolve: {\r\n          data: NotificationsResolver\r\n        }\r\n      }\r\n    ])\r\n  ],\r\n  declarations: [ NotificationsPage ],\r\n  providers: [\r\n    NotificationsResolver,\r\n    NotificationsService\r\n  ]\r\n})\r\nexport class NotificationsPageModule {}\r\n","import { Injectable } from '@angular/core';\r\nimport { HttpClient } from '@angular/common/http';\r\nimport { Observable } from 'rxjs';\r\n\r\n@Injectable()\r\nexport class NotificationsService {\r\n  constructor(private http: HttpClient) { }\r\n\r\n  public getData(): Observable<any> {\r\n    return this.http.get<any>('./assets/sample-data/notifications.json');\r\n  }\r\n}\r\n"],"sourceRoot":"webpack:///"}