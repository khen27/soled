{"version":3,"sources":["webpack:///node_modules/@ionic/core/dist/esm/haptic-7b8ba70a.js","webpack:///src/app/showcase/showcase.service.ts","webpack:///node_modules/@ionic/core/dist/esm/spinner-configs-c78e170e.js","webpack:///node_modules/@angular/fire/__ivy_ngcc__/fesm2015/angular-fire-auth-guard.js","webpack:///node_modules/@ionic/core/dist/esm/framework-delegate-d1eb6504.js","webpack:///src/app/deals/listing/deals-listing.model.ts","webpack:///node_modules/@ionic/core/dist/esm/button-active-5da929d4.js","webpack:///src/app/deals/details/deals-details.model.ts","webpack:///node_modules/@ionic/core/dist/esm/theme-5641d27f.js","webpack:///src/app/validators/password.validator.ts","webpack:///src/app/showcase/showcase-shell.model.ts","webpack:///src/app/deals/deals.service.ts"],"names":["HapticEngine","getEngine","win","window","TapticEngine","Capacitor","isPluginAvailable","Plugins","Haptics","available","isCordova","isCapacitor","impact","options","engine","style","toUpperCase","notification","selection","selectionStart","gestureSelectionStart","selectionChanged","gestureSelectionChanged","selectionEnd","gestureSelectionEnd","hapticSelection","hapticSelectionStart","hapticSelectionChanged","hapticSelectionEnd","hapticImpact","ShowcaseService","http","openDataStream","get","pipe","val","console","log","time","timeEnd","dataSource","showcaseDataStore","shellModel","load","result","page","results","length","dependantDataSource","post","isShell","id","userId","dataObservable","jsonResponse","filteredData","company","getTasks","tasks","completeTaskData","map","task","taskUser","getUser","taskData","user","firstLoadData","getPaginationDataSource","asObservable","stackedValues","getStackedValues","next","newUser","first_name","last_name","avatar","getRand","max","min","Math","floor","random","Array","fill","spinners","dur","circles","fn","index","total","animationDelay","angle","PI","r","sin","cos","step","elmDuration","cx","cy","viewBox","transform","_","lines","y1","y2","SPINNERS","ɵ0","loggedIn","AngularFireAuthGuard","nameOrConfig","zone","router","canActivate","state","authPipeFactory","data","authGuardPipe","authState","can","createUrlTree","schedulers","keepUnstableUntilFirst","auth","undefined","outsideAngular","runOutsideAngular","app","bufferSize","refCount","onAuthStateChanged","bind","ɵfac","AngularFireAuthGuard_Factory","t","ctorParameters","type","decorators","args","ɵprov","factory","token","providedIn","ɵ1","isAnonymous","isNotAnonymous","ɵ2","getIdTokenResult","idTokenResult","ɵ3","emailVerified","ɵ4","claims","customClaims","hasCustomClaim","claim","hasOwnProperty","redirectUnauthorizedTo","redirect","redirectLoggedInTo","AngularFireAuthGuardModule","ɵmod","ɵinj","AngularFireAuthGuardModule_Factory","providers","attachComponent","delegate","container","component","cssClasses","componentProps","attachViewToDom","HTMLElement","Error","el","ownerDocument","createElement","forEach","c","classList","add","Object","assign","appendChild","componentOnReady","detachComponent","element","parentElement","removeViewFromDom","remove","Promise","resolve","DealsItemModel","expirationDate","format","DealsListingModel","items","createButtonActiveGesture","isButton","currentTouchedButton","initialTouchedButton","activateButtonAtPoint","x","y","hapticFeedbackFn","document","target","elementFromPoint","clearActiveButton","setActiveButton","button","buttonToModify","dispatchClick","click","gestureName","threshold","onStart","ev","currentX","currentY","onMove","onEnd","DealsDetailsModel","showcaseImages","relatedDeals","logo","name","description","hostContext","selector","closest","createColorClasses","color","cssClassMap","getClassList","classes","array","isArray","split","filter","trim","getClassMap","SCHEME","openURL","url","direction","animation","test","querySelector","preventDefault","push","PasswordValidator","formGroup","firstControlValue","valid","key","controls","control","value","areNotEqual","ShowcaseShellModel","ShowcaseShellUserModel","ShowcaseCommentModel","ShowcasePostModel","ShowcaseTaskModel","ShowcaseUser2Model","ShowcaseCompanyModel","ShowcaseCombinedTaskUserModel","DealsService","platformId","transferStateHelper","rawDataSource","otherData","itemsWithRelativeDates","dealItem","relativeDates","updatedListingData","listing","cachedDataSource","checkDataSourceState","listingDataStore","updatedDetailsData","details","detailsDataStore","subtract"],"mappings":"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","file":"common-es5.js","sourcesContent":["const HapticEngine = {\r\n    getEngine() {\r\n        const win = window;\r\n        return (win.TapticEngine) || (win.Capacitor && win.Capacitor.isPluginAvailable('Haptics') && win.Capacitor.Plugins.Haptics);\r\n    },\r\n    available() {\r\n        return !!this.getEngine();\r\n    },\r\n    isCordova() {\r\n        return !!window.TapticEngine;\r\n    },\r\n    isCapacitor() {\r\n        const win = window;\r\n        return !!win.Capacitor;\r\n    },\r\n    impact(options) {\r\n        const engine = this.getEngine();\r\n        if (!engine) {\r\n            return;\r\n        }\r\n        const style = this.isCapacitor() ? options.style.toUpperCase() : options.style;\r\n        engine.impact({ style });\r\n    },\r\n    notification(options) {\r\n        const engine = this.getEngine();\r\n        if (!engine) {\r\n            return;\r\n        }\r\n        const style = this.isCapacitor() ? options.style.toUpperCase() : options.style;\r\n        engine.notification({ style });\r\n    },\r\n    selection() {\r\n        this.impact({ style: 'light' });\r\n    },\r\n    selectionStart() {\r\n        const engine = this.getEngine();\r\n        if (!engine) {\r\n            return;\r\n        }\r\n        if (this.isCapacitor()) {\r\n            engine.selectionStart();\r\n        }\r\n        else {\r\n            engine.gestureSelectionStart();\r\n        }\r\n    },\r\n    selectionChanged() {\r\n        const engine = this.getEngine();\r\n        if (!engine) {\r\n            return;\r\n        }\r\n        if (this.isCapacitor()) {\r\n            engine.selectionChanged();\r\n        }\r\n        else {\r\n            engine.gestureSelectionChanged();\r\n        }\r\n    },\r\n    selectionEnd() {\r\n        const engine = this.getEngine();\r\n        if (!engine) {\r\n            return;\r\n        }\r\n        if (this.isCapacitor()) {\r\n            engine.selectionEnd();\r\n        }\r\n        else {\r\n            engine.gestureSelectionEnd();\r\n        }\r\n    }\r\n};\r\n/**\r\n * Trigger a selection changed haptic event. Good for one-time events\r\n * (not for gestures)\r\n */\r\nconst hapticSelection = () => {\r\n    HapticEngine.selection();\r\n};\r\n/**\r\n * Tell the haptic engine that a gesture for a selection change is starting.\r\n */\r\nconst hapticSelectionStart = () => {\r\n    HapticEngine.selectionStart();\r\n};\r\n/**\r\n * Tell the haptic engine that a selection changed during a gesture.\r\n */\r\nconst hapticSelectionChanged = () => {\r\n    HapticEngine.selectionChanged();\r\n};\r\n/**\r\n * Tell the haptic engine we are done with a gesture. This needs to be\r\n * called lest resources are not properly recycled.\r\n */\r\nconst hapticSelectionEnd = () => {\r\n    HapticEngine.selectionEnd();\r\n};\r\n/**\r\n * Use this to indicate success/failure/warning to the user.\r\n * options should be of the type `{ style: 'light' }` (or `medium`/`heavy`)\r\n */\r\nconst hapticImpact = (options) => {\r\n    HapticEngine.impact(options);\r\n};\r\n\r\nexport { hapticSelectionStart as a, hapticSelectionChanged as b, hapticSelection as c, hapticImpact as d, hapticSelectionEnd as h };\r\n","import { Injectable } from '@angular/core';\r\nimport { HttpClient } from '@angular/common/http';\r\n\r\nimport { Observable, combineLatest, of, forkJoin, ReplaySubject, merge } from 'rxjs';\r\nimport { delay, finalize, tap, map, filter, concatMap } from 'rxjs/operators';\r\n// tslint:disable-next-line:max-line-length\r\nimport { ShowcaseShellModel, ShowcasePostModel, ShowcaseCommentModel, ShowcaseCombinedTaskUserModel, ShowcaseUser2Model, ShowcaseTaskModel, ShowcaseShellUserModel, ShowcaseCompanyModel } from './showcase-shell.model';\r\nimport { DataStore, ShellModel } from '../shell/data-store';\r\nimport { TravelListingModel } from '../travel/listing/travel-listing.model';\r\nimport { FashionListingModel } from '../fashion/listing/fashion-listing.model';\r\n\r\n@Injectable()\r\nexport class ShowcaseService {\r\n  private showcaseDataStore: DataStore<ShowcaseShellModel>;\r\n  private openDataStream: ReplaySubject<Array<ShowcaseShellUserModel>> = new ReplaySubject<Array<ShowcaseShellUserModel>>();\r\n\r\n  constructor(private http: HttpClient) { }\r\n\r\n  public getDataSourceWithDelay(): Observable<ShowcaseShellModel> {\r\n    return this.http.get<ShowcaseShellModel>('./assets/sample-data/showcase/shell.json').pipe(\r\n      tap(val => {\r\n        console.log('getData STARTED');\r\n        // tslint:disable-next-line:no-console\r\n        console.time('getData Roundtrip');\r\n      }),\r\n      delay(5000),\r\n      finalize(() => {\r\n        console.log('getData COMPLETED');\r\n        // tslint:disable-next-line:no-console\r\n        console.timeEnd('getData Roundtrip');\r\n      }));\r\n  }\r\n\r\n  public getSimpleDataSource(): Observable<ShowcaseShellModel> {\r\n    return this.http.get<ShowcaseShellModel>('./assets/sample-data/showcase/shell.json');\r\n  }\r\n\r\n  public getSimpleDataStore(dataSource: Observable<ShowcaseShellModel>): DataStore<ShowcaseShellModel> {\r\n    // Use cache if available\r\n    if (!this.showcaseDataStore) {\r\n      // Initialize the model specifying that it is a shell model\r\n      const shellModel: ShowcaseShellModel = new ShowcaseShellModel();\r\n      this.showcaseDataStore = new DataStore(shellModel);\r\n      // Trigger the loading mechanism (with shell) in the dataStore\r\n      this.showcaseDataStore.load(dataSource);\r\n    }\r\n    return this.showcaseDataStore;\r\n  }\r\n\r\n  public getListDataSource(): Observable<any> {\r\n    return this.http.get('https://reqres.in/api/users').pipe(map(result => result['data']));\r\n  }\r\n\r\n  public getPaginationDataSource(page: number): Observable<any> {\r\n    return this.http.get('https://reqres.in/api/users?page=' + page).pipe(\r\n      map(result => result['data']),\r\n      filter(results => results.length > 0)\r\n    );\r\n  }\r\n\r\n  public getMultipleDataSourceA(): Observable<TravelListingModel> {\r\n    return this.http.get<TravelListingModel>('./assets/sample-data/travel/listing.json');\r\n  }\r\n\r\n  public getMultipleDataSourceB(): Observable<FashionListingModel> {\r\n      return this.http.get<FashionListingModel>('./assets/sample-data/fashion/listing.json');\r\n  }\r\n\r\n  public getDependantDataSourcePost(): Observable<ShowcasePostModel> {\r\n    return this.http.get<any>('https://jsonplaceholder.typicode.com/posts/1');\r\n  }\r\n\r\n  // tslint:disable-next-line:max-line-length\r\n  public getDependantDataSourcePostComments(dependantDataSource: Observable<ShowcasePostModel & ShellModel>): Observable<Array<ShowcaseCommentModel>> {\r\n    return dependantDataSource.pipe(\r\n      // Filter user values that are not shells. We need to add this filter if using the combinedUserDataStore timeline\r\n      filter(post => !post.isShell),\r\n      concatMap(post => {\r\n        return this.http.get<any>('https://jsonplaceholder.typicode.com/comments?postId=' + post.id);\r\n      })\r\n    );\r\n  }\r\n\r\n  getUser(userId: number): Observable<ShowcaseUser2Model> {\r\n    return this.http.get<ShowcaseUser2Model>('https://jsonplaceholder.typicode.com/users/' + userId);\r\n  }\r\n\r\n  // get the company details, a subset of the user data\r\n  getUserSubsetData(userId: number): Observable<ShowcaseCompanyModel> {\r\n    const dataObservable = this.http.get<ShowcaseUser2Model>('https://jsonplaceholder.typicode.com/users/' + userId);\r\n\r\n    return dataObservable.pipe(\r\n      map((jsonResponse) => {\r\n        const filteredData: ShowcaseCompanyModel = {\r\n          ...jsonResponse.company\r\n        };\r\n        return filteredData;\r\n      })\r\n    );\r\n  }\r\n\r\n  getTasks(): Observable<Array<ShowcaseTaskModel>> {\r\n    return this.http.get<Array<ShowcaseTaskModel>>('https://jsonplaceholder.typicode.com/todos');\r\n  }\r\n\r\n  // Concat the task with the details of the user\r\n  public getCombinedTasksUserDataSource(): Observable<Array<ShowcaseCombinedTaskUserModel>> {\r\n    return this.getTasks().pipe(\r\n      concatMap(tasks => {\r\n        const completeTaskData = tasks.map(task => {\r\n          // for each task retrun a new observable with the ShowcaseCombinedTaskUserModel\r\n          const taskUser: Observable<ShowcaseUser2Model> = this.getUser(task.userId);\r\n\r\n          return combineLatest([\r\n            of(task),\r\n            taskUser\r\n          ]).pipe(\r\n            map(([taskData, user]: [ShowcaseTaskModel, ShowcaseUser2Model]) => {\r\n              return {\r\n                ...taskData,\r\n                user: user\r\n              } as ShowcaseCombinedTaskUserModel;\r\n            })\r\n          );\r\n        });\r\n        return forkJoin(completeTaskData);\r\n      })\r\n    );\r\n  }\r\n\r\n  public getOpenDataStream(): Observable<Array<ShowcaseShellUserModel>> {\r\n    const firstLoadData = this.getPaginationDataSource(1);\r\n\r\n    return merge(\r\n      this.openDataStream.asObservable(),\r\n      firstLoadData\r\n    );\r\n  }\r\n\r\n  public pushValuesToOpenStream(): void {\r\n    const stackedValues = this.getStackedValues();\r\n\r\n    this.openDataStream.next(stackedValues);\r\n  }\r\n\r\n  public getStackedValuesDataSource(): Observable<Array<ShowcaseShellUserModel>> {\r\n    const stackedValues = this.getStackedValues();\r\n\r\n    return of(stackedValues).pipe(delay(3000));\r\n  }\r\n\r\n  public getStackedValues(): Array<ShowcaseShellUserModel> {\r\n    const newUser = {\r\n      first_name: 'Agustin',\r\n      last_name: 'Nitsuga',\r\n      avatar: './assets/sample-images/user/person_1.jpg'\r\n    } as ShowcaseShellUserModel;\r\n\r\n    // Get a random integer between 1 (and only 1) and 'max'\r\n    const getRand: (max: number, min?: number) => number = (max, min = 1) => {\r\n      return Math.floor(Math.random() * max) + min;\r\n    };\r\n\r\n    // Randomly send one, two or three users\r\n    return Array(getRand(3)).fill(newUser);\r\n  }\r\n}\r\n","const spinners = {\r\n    'bubbles': {\r\n        dur: 1000,\r\n        circles: 9,\r\n        fn: (dur, index, total) => {\r\n            const animationDelay = `${(dur * index / total) - dur}ms`;\r\n            const angle = 2 * Math.PI * index / total;\r\n            return {\r\n                r: 5,\r\n                style: {\r\n                    'top': `${9 * Math.sin(angle)}px`,\r\n                    'left': `${9 * Math.cos(angle)}px`,\r\n                    'animation-delay': animationDelay,\r\n                }\r\n            };\r\n        }\r\n    },\r\n    'circles': {\r\n        dur: 1000,\r\n        circles: 8,\r\n        fn: (dur, index, total) => {\r\n            const step = index / total;\r\n            const animationDelay = `${(dur * step) - dur}ms`;\r\n            const angle = 2 * Math.PI * step;\r\n            return {\r\n                r: 5,\r\n                style: {\r\n                    'top': `${9 * Math.sin(angle)}px`,\r\n                    'left': `${9 * Math.cos(angle)}px`,\r\n                    'animation-delay': animationDelay,\r\n                }\r\n            };\r\n        }\r\n    },\r\n    'circular': {\r\n        dur: 1400,\r\n        elmDuration: true,\r\n        circles: 1,\r\n        fn: () => {\r\n            return {\r\n                r: 20,\r\n                cx: 48,\r\n                cy: 48,\r\n                fill: 'none',\r\n                viewBox: '24 24 48 48',\r\n                transform: 'translate(0,0)',\r\n                style: {}\r\n            };\r\n        }\r\n    },\r\n    'crescent': {\r\n        dur: 750,\r\n        circles: 1,\r\n        fn: () => {\r\n            return {\r\n                r: 26,\r\n                style: {}\r\n            };\r\n        }\r\n    },\r\n    'dots': {\r\n        dur: 750,\r\n        circles: 3,\r\n        fn: (_, index) => {\r\n            const animationDelay = -(110 * index) + 'ms';\r\n            return {\r\n                r: 6,\r\n                style: {\r\n                    'left': `${9 - (9 * index)}px`,\r\n                    'animation-delay': animationDelay,\r\n                }\r\n            };\r\n        }\r\n    },\r\n    'lines': {\r\n        dur: 1000,\r\n        lines: 12,\r\n        fn: (dur, index, total) => {\r\n            const transform = `rotate(${30 * index + (index < 6 ? 180 : -180)}deg)`;\r\n            const animationDelay = `${(dur * index / total) - dur}ms`;\r\n            return {\r\n                y1: 17,\r\n                y2: 29,\r\n                style: {\r\n                    'transform': transform,\r\n                    'animation-delay': animationDelay,\r\n                }\r\n            };\r\n        }\r\n    },\r\n    'lines-small': {\r\n        dur: 1000,\r\n        lines: 12,\r\n        fn: (dur, index, total) => {\r\n            const transform = `rotate(${30 * index + (index < 6 ? 180 : -180)}deg)`;\r\n            const animationDelay = `${(dur * index / total) - dur}ms`;\r\n            return {\r\n                y1: 12,\r\n                y2: 20,\r\n                style: {\r\n                    'transform': transform,\r\n                    'animation-delay': animationDelay,\r\n                }\r\n            };\r\n        }\r\n    }\r\n};\r\nconst SPINNERS = spinners;\r\n\r\nexport { SPINNERS as S };\r\n","import { Injectable, Inject, Optional, NgZone, ɵɵdefineInjectable, ɵɵinject, NgModule } from '@angular/core';\r\nimport { Router } from '@angular/router';\r\nimport { of, Observable, pipe } from 'rxjs';\r\nimport { map, take, observeOn, switchMap, shareReplay } from 'rxjs/operators';\r\nimport { ɵAngularFireSchedulers, ɵkeepUnstableUntilFirstFactory, ɵfirebaseAppFactory, FIREBASE_OPTIONS, FIREBASE_APP_NAME } from '@angular/fire';\r\n\r\n/**\r\n * @fileoverview added by tsickle\r\n * Generated from: auth-guard.ts\r\n * @suppress {checkTypes,constantProperty,extraRequire,missingOverride,missingRequire,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\r\n */\r\nimport * as ɵngcc0 from '@angular/core';\r\nimport * as ɵngcc1 from '@angular/router';\r\nconst ɵ0 = /**\r\n * @param {?} user\r\n * @return {?}\r\n */\r\nuser => !!user;\r\n/** @type {?} */\r\nconst loggedIn = map((ɵ0));\r\nclass AngularFireAuthGuard {\r\n    /**\r\n     * @param {?} options\r\n     * @param {?} nameOrConfig\r\n     * @param {?} zone\r\n     * @param {?} router\r\n     */\r\n    constructor(options, nameOrConfig, zone, router) {\r\n        this.router = router;\r\n        this.canActivate = (/**\r\n         * @param {?} next\r\n         * @param {?} state\r\n         * @return {?}\r\n         */\r\n        (next, state) => {\r\n            /** @type {?} */\r\n            const authPipeFactory = (/** @type {?} */ (next.data.authGuardPipe)) || ((/**\r\n             * @return {?}\r\n             */\r\n            () => loggedIn));\r\n            return this.authState.pipe(take(1), authPipeFactory(next, state), map((/**\r\n             * @param {?} can\r\n             * @return {?}\r\n             */\r\n            can => typeof can === 'boolean' ? can : this.router.createUrlTree((/** @type {?} */ (can))))));\r\n        });\r\n        /** @type {?} */\r\n        const schedulers = new ɵAngularFireSchedulers(zone);\r\n        /** @type {?} */\r\n        const keepUnstableUntilFirst = ɵkeepUnstableUntilFirstFactory(schedulers);\r\n        /** @type {?} */\r\n        const auth = of(undefined).pipe(observeOn(new ɵAngularFireSchedulers(zone).outsideAngular), switchMap((/**\r\n         * @return {?}\r\n         */\r\n        () => zone.runOutsideAngular((/**\r\n         * @return {?}\r\n         */\r\n        () => import('firebase/auth'))))), map((/**\r\n         * @return {?}\r\n         */\r\n        () => ɵfirebaseAppFactory(options, zone, nameOrConfig))), map((/**\r\n         * @param {?} app\r\n         * @return {?}\r\n         */\r\n        app => zone.runOutsideAngular((/**\r\n         * @return {?}\r\n         */\r\n        () => app.auth())))), shareReplay({ bufferSize: 1, refCount: false }));\r\n        this.authState = auth.pipe(switchMap((/**\r\n         * @param {?} auth\r\n         * @return {?}\r\n         */\r\n        auth => new Observable(auth.onAuthStateChanged.bind(auth)))), keepUnstableUntilFirst);\r\n    }\r\n}\r\nAngularFireAuthGuard.ɵfac = function AngularFireAuthGuard_Factory(t) { return new (t || AngularFireAuthGuard)(ɵngcc0.ɵɵinject(FIREBASE_OPTIONS), ɵngcc0.ɵɵinject(FIREBASE_APP_NAME, 8), ɵngcc0.ɵɵinject(ɵngcc0.NgZone), ɵngcc0.ɵɵinject(ɵngcc1.Router)); };\r\n/** @nocollapse */\r\nAngularFireAuthGuard.ctorParameters = () => [\r\n    { type: undefined, decorators: [{ type: Inject, args: [FIREBASE_OPTIONS,] }] },\r\n    { type: undefined, decorators: [{ type: Optional }, { type: Inject, args: [FIREBASE_APP_NAME,] }] },\r\n    { type: NgZone },\r\n    { type: Router }\r\n];\r\n/** @nocollapse */ AngularFireAuthGuard.ɵprov = ɵɵdefineInjectable({ factory: function AngularFireAuthGuard_Factory() { return new AngularFireAuthGuard(ɵɵinject(FIREBASE_OPTIONS), ɵɵinject(FIREBASE_APP_NAME, 8), ɵɵinject(NgZone), ɵɵinject(Router)); }, token: AngularFireAuthGuard, providedIn: \"any\" });\r\n/*@__PURE__*/ (function () { ɵngcc0.ɵsetClassMetadata(AngularFireAuthGuard, [{\r\n        type: Injectable,\r\n        args: [{\r\n                providedIn: 'any'\r\n            }]\r\n    }], function () { return [{ type: undefined, decorators: [{\r\n                type: Inject,\r\n                args: [FIREBASE_OPTIONS]\r\n            }] }, { type: undefined, decorators: [{\r\n                type: Optional\r\n            }, {\r\n                type: Inject,\r\n                args: [FIREBASE_APP_NAME]\r\n            }] }, { type: ɵngcc0.NgZone }, { type: ɵngcc1.Router }]; }, null); })();\r\nif (false) {\r\n    /** @type {?} */\r\n    AngularFireAuthGuard.prototype.authState;\r\n    /** @type {?} */\r\n    AngularFireAuthGuard.prototype.canActivate;\r\n    /**\r\n     * @type {?}\r\n     * @private\r\n     */\r\n    AngularFireAuthGuard.prototype.router;\r\n}\r\n/** @type {?} */\r\nconst canActivate = (/**\r\n * @param {?} pipe\r\n * @return {?}\r\n */\r\n(pipe) => ({\r\n    canActivate: [AngularFireAuthGuard], data: { authGuardPipe: pipe }\r\n}));\r\nconst ɵ1 = /**\r\n * @param {?} user\r\n * @return {?}\r\n */\r\nuser => !!user && !user.isAnonymous;\r\n/** @type {?} */\r\nconst isNotAnonymous = map((ɵ1));\r\nconst ɵ2 = /**\r\n * @param {?} user\r\n * @return {?}\r\n */\r\n(user) => user ? user.getIdTokenResult() : of(null);\r\n/** @type {?} */\r\nconst idTokenResult = switchMap((ɵ2));\r\nconst ɵ3 = /**\r\n * @param {?} user\r\n * @return {?}\r\n */\r\nuser => !!user && user.emailVerified;\r\n/** @type {?} */\r\nconst emailVerified = map((ɵ3));\r\nconst ɵ4 = /**\r\n * @param {?} idTokenResult\r\n * @return {?}\r\n */\r\nidTokenResult => idTokenResult ? idTokenResult.claims : [];\r\n/** @type {?} */\r\nconst customClaims = pipe(idTokenResult, map((ɵ4)));\r\n/** @type {?} */\r\nconst hasCustomClaim = (/**\r\n * @param {?} claim\r\n * @return {?}\r\n */\r\n(claim) => pipe(customClaims, map((/**\r\n * @param {?} claims\r\n * @return {?}\r\n */\r\nclaims => claims.hasOwnProperty(claim)))));\r\n/** @type {?} */\r\nconst redirectUnauthorizedTo = (/**\r\n * @param {?} redirect\r\n * @return {?}\r\n */\r\n(redirect) => pipe(loggedIn, map((/**\r\n * @param {?} loggedIn\r\n * @return {?}\r\n */\r\nloggedIn => loggedIn || redirect))));\r\n/** @type {?} */\r\nconst redirectLoggedInTo = (/**\r\n * @param {?} redirect\r\n * @return {?}\r\n */\r\n(redirect) => pipe(loggedIn, map((/**\r\n * @param {?} loggedIn\r\n * @return {?}\r\n */\r\nloggedIn => loggedIn && redirect || true))));\r\n\r\n/**\r\n * @fileoverview added by tsickle\r\n * Generated from: auth-guard.module.ts\r\n * @suppress {checkTypes,constantProperty,extraRequire,missingOverride,missingRequire,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\r\n */\r\nclass AngularFireAuthGuardModule {\r\n}\r\nAngularFireAuthGuardModule.ɵmod = ɵngcc0.ɵɵdefineNgModule({ type: AngularFireAuthGuardModule });\r\nAngularFireAuthGuardModule.ɵinj = ɵngcc0.ɵɵdefineInjector({ factory: function AngularFireAuthGuardModule_Factory(t) { return new (t || AngularFireAuthGuardModule)(); }, providers: [AngularFireAuthGuard] });\r\n/*@__PURE__*/ (function () { ɵngcc0.ɵsetClassMetadata(AngularFireAuthGuardModule, [{\r\n        type: NgModule,\r\n        args: [{\r\n                providers: [AngularFireAuthGuard]\r\n            }]\r\n    }], null, null); })();\r\n\r\n/**\r\n * @fileoverview added by tsickle\r\n * Generated from: public_api.ts\r\n * @suppress {checkTypes,constantProperty,extraRequire,missingOverride,missingRequire,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\r\n */\r\n\r\n/**\r\n * @fileoverview added by tsickle\r\n * Generated from: angular-fire-auth-guard.ts\r\n * @suppress {checkTypes,constantProperty,extraRequire,missingOverride,missingRequire,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\r\n */\r\n\r\nexport { AngularFireAuthGuard, AngularFireAuthGuardModule, canActivate, customClaims, emailVerified, hasCustomClaim, idTokenResult, isNotAnonymous, loggedIn, redirectLoggedInTo, redirectUnauthorizedTo };\r\n\r\n//# sourceMappingURL=angular-fire-auth-guard.js.map","const attachComponent = async (delegate, container, component, cssClasses, componentProps) => {\r\n    if (delegate) {\r\n        return delegate.attachViewToDom(container, component, componentProps, cssClasses);\r\n    }\r\n    if (typeof component !== 'string' && !(component instanceof HTMLElement)) {\r\n        throw new Error('framework delegate is missing');\r\n    }\r\n    const el = (typeof component === 'string')\r\n        ? container.ownerDocument && container.ownerDocument.createElement(component)\r\n        : component;\r\n    if (cssClasses) {\r\n        cssClasses.forEach(c => el.classList.add(c));\r\n    }\r\n    if (componentProps) {\r\n        Object.assign(el, componentProps);\r\n    }\r\n    container.appendChild(el);\r\n    if (el.componentOnReady) {\r\n        await el.componentOnReady();\r\n    }\r\n    return el;\r\n};\r\nconst detachComponent = (delegate, element) => {\r\n    if (element) {\r\n        if (delegate) {\r\n            const container = element.parentElement;\r\n            return delegate.removeViewFromDom(container, element);\r\n        }\r\n        element.remove();\r\n    }\r\n    return Promise.resolve();\r\n};\r\n\r\nexport { attachComponent as a, detachComponent as d };\r\n","import * as dayjs from 'dayjs';\r\n\r\nimport { ShellModel } from '../../shell/data-store';\r\n\r\nexport class DealsItemModel {\r\n  slug: string;\r\n  logo: string;\r\n  name: string;\r\n  code: string;\r\n  description: string;\r\n  // Default mock value\r\n  // expirationDate = '12/01/2018';\r\n  expirationDate: string = dayjs().add(5, 'day').format('MM/DD/YYYY HH:mm:ss') as string;\r\n}\r\n\r\nexport class DealsListingModel extends ShellModel {\r\n  items: Array<DealsItemModel> = [\r\n    new DealsItemModel(),\r\n    new DealsItemModel(),\r\n    new DealsItemModel(),\r\n    new DealsItemModel()\r\n  ];\r\n\r\n  constructor() {\r\n    super();\r\n  }\r\n}\r\n","import { c as writeTask } from './index-92848855.js';\r\nimport { createGesture } from './index-eea61379.js';\r\nimport { h as hapticSelectionEnd, a as hapticSelectionStart, b as hapticSelectionChanged } from './haptic-7b8ba70a.js';\r\n\r\nconst createButtonActiveGesture = (el, isButton) => {\r\n    let currentTouchedButton;\r\n    let initialTouchedButton;\r\n    const activateButtonAtPoint = (x, y, hapticFeedbackFn) => {\r\n        if (typeof document === 'undefined') {\r\n            return;\r\n        }\r\n        const target = document.elementFromPoint(x, y);\r\n        if (!target || !isButton(target)) {\r\n            clearActiveButton();\r\n            return;\r\n        }\r\n        if (target !== currentTouchedButton) {\r\n            clearActiveButton();\r\n            setActiveButton(target, hapticFeedbackFn);\r\n        }\r\n    };\r\n    const setActiveButton = (button, hapticFeedbackFn) => {\r\n        currentTouchedButton = button;\r\n        if (!initialTouchedButton) {\r\n            initialTouchedButton = currentTouchedButton;\r\n        }\r\n        const buttonToModify = currentTouchedButton;\r\n        writeTask(() => buttonToModify.classList.add('ion-activated'));\r\n        hapticFeedbackFn();\r\n    };\r\n    const clearActiveButton = (dispatchClick = false) => {\r\n        if (!currentTouchedButton) {\r\n            return;\r\n        }\r\n        const buttonToModify = currentTouchedButton;\r\n        writeTask(() => buttonToModify.classList.remove('ion-activated'));\r\n        /**\r\n         * Clicking on one button, but releasing on another button\r\n         * does not dispatch a click event in browsers, so we\r\n         * need to do it manually here. Some browsers will\r\n         * dispatch a click if clicking on one button, dragging over\r\n         * another button, and releasing on the original button. In that\r\n         * case, we need to make sure we do not cause a double click there.\r\n         */\r\n        if (dispatchClick && initialTouchedButton !== currentTouchedButton) {\r\n            currentTouchedButton.click();\r\n        }\r\n        currentTouchedButton = undefined;\r\n    };\r\n    return createGesture({\r\n        el,\r\n        gestureName: 'buttonActiveDrag',\r\n        threshold: 0,\r\n        onStart: ev => activateButtonAtPoint(ev.currentX, ev.currentY, hapticSelectionStart),\r\n        onMove: ev => activateButtonAtPoint(ev.currentX, ev.currentY, hapticSelectionChanged),\r\n        onEnd: () => {\r\n            clearActiveButton(true);\r\n            hapticSelectionEnd();\r\n            initialTouchedButton = undefined;\r\n        }\r\n    });\r\n};\r\n\r\nexport { createButtonActiveGesture as c };\r\n","import * as dayjs from 'dayjs';\r\n\r\nimport { ShellModel } from '../../shell/data-store';\r\n\r\nexport class DealsDetailsModel extends ShellModel {\r\n  showcaseImages: Array<string> = [\r\n    '',\r\n    '',\r\n    ''\r\n  ];\r\n  previewImage: string;\r\n  logo: string;\r\n  name: string;\r\n  code: string;\r\n  description: string;\r\n  // Default mock value\r\n  // expirationDate = '03/03/2019';\r\n  expirationDate: string = dayjs().add(5, 'day').format('MM/DD/YYYY HH:mm:ss') as string;\r\n  relatedDeals: Array<{logo: string, name: string, description: string}> = [\r\n    {\r\n      logo: '',\r\n      name: '',\r\n      description: ''\r\n    },\r\n    {\r\n      logo: '',\r\n      name: '',\r\n      description: ''\r\n    },\r\n    {\r\n      logo: '',\r\n      name: '',\r\n      description: ''\r\n    }\r\n  ];\r\n\r\n  constructor() {\r\n    super();\r\n  }\r\n}\r\n","const hostContext = (selector, el) => {\r\n    return el.closest(selector) !== null;\r\n};\r\n/**\r\n * Create the mode and color classes for the component based on the classes passed in\r\n */\r\nconst createColorClasses = (color, cssClassMap) => {\r\n    return (typeof color === 'string' && color.length > 0) ? Object.assign({ 'ion-color': true, [`ion-color-${color}`]: true }, cssClassMap) : cssClassMap;\r\n};\r\nconst getClassList = (classes) => {\r\n    if (classes !== undefined) {\r\n        const array = Array.isArray(classes) ? classes : classes.split(' ');\r\n        return array\r\n            .filter(c => c != null)\r\n            .map(c => c.trim())\r\n            .filter(c => c !== '');\r\n    }\r\n    return [];\r\n};\r\nconst getClassMap = (classes) => {\r\n    const map = {};\r\n    getClassList(classes).forEach(c => map[c] = true);\r\n    return map;\r\n};\r\nconst SCHEME = /^[a-z][a-z0-9+\\-.]*:/;\r\nconst openURL = async (url, ev, direction, animation) => {\r\n    if (url != null && url[0] !== '#' && !SCHEME.test(url)) {\r\n        const router = document.querySelector('ion-router');\r\n        if (router) {\r\n            if (ev != null) {\r\n                ev.preventDefault();\r\n            }\r\n            return router.push(url, direction, animation);\r\n        }\r\n    }\r\n    return false;\r\n};\r\n\r\nexport { createColorClasses as c, getClassMap as g, hostContext as h, openURL as o };\r\n","import { FormControl, FormGroup } from '@angular/forms';\r\n\r\nexport class PasswordValidator {\r\n\r\n  // If our validation fails, we return an object with a key for the error name and a value of true.\r\n  // Otherwise, if the validation passes, we simply return null because there is no error.\r\n\r\n  static areNotEqual(formGroup: FormGroup) {\r\n    let firstControlValue: any;\r\n    let valid = true;\r\n\r\n    for (const key in formGroup.controls) {\r\n      if (formGroup.controls.hasOwnProperty(key)) {\r\n        const control: FormControl = <FormControl>formGroup.controls[key];\r\n\r\n        if (firstControlValue === undefined) {\r\n          firstControlValue = control.value;\r\n        } else {\r\n          // check if the value of the first control is equal to the value of the second control\r\n          if (firstControlValue !== control.value) {\r\n            valid = false;\r\n            break;\r\n          }\r\n        }\r\n      }\r\n    }\r\n\r\n    if (valid) {\r\n      return null;\r\n    }\r\n\r\n    return {\r\n      areNotEqual: true\r\n    };\r\n  }\r\n}\r\n","import { ShellModel } from '../shell/data-store';\r\n\r\nexport class ShowcaseShellModel extends ShellModel {\r\n  cover: string;\r\n  image: string;\r\n  title: string;\r\n  description: string;\r\n\r\n  constructor() {\r\n    super();\r\n  }\r\n}\r\n\r\nexport class ShowcaseShellUserModel extends ShellModel {\r\n  email: string;\r\n  first_name: string;\r\n  last_name: string;\r\n  avatar: string;\r\n\r\n  constructor() {\r\n    super();\r\n  }\r\n}\r\n\r\nexport class ShowcaseCommentModel extends ShellModel {\r\n  postId: number;\r\n  name: string;\r\n  email: string;\r\n  body: string;\r\n\r\n  constructor() {\r\n    super();\r\n  }\r\n}\r\n\r\nexport class ShowcasePostModel extends ShellModel {\r\n  id: number;\r\n  title: string;\r\n  body: string;\r\n\r\n  constructor() {\r\n    super();\r\n  }\r\n}\r\n\r\nexport class ShowcaseTaskModel extends ShellModel {\r\n  id: number;\r\n  userId: number;\r\n  title: string;\r\n  completed: boolean;\r\n\r\n  constructor() {\r\n    super();\r\n  }\r\n}\r\n\r\nexport class ShowcaseUser2Model extends ShellModel {\r\n  id: number;\r\n  name: string;\r\n  email: string;\r\n  username: string;\r\n  company?: ShowcaseCompanyModel;\r\n\r\n  constructor() {\r\n    super();\r\n  }\r\n}\r\n\r\nexport class ShowcaseCompanyModel extends ShellModel {\r\n  catchPhrase: string;\r\n  name: string;\r\n  bs: string;\r\n\r\n  constructor() {\r\n    super();\r\n  }\r\n}\r\n\r\nexport class ShowcaseCombinedTaskUserModel extends ShowcaseTaskModel {\r\n  user: ShowcaseUser2Model;\r\n\r\n  constructor() {\r\n    super();\r\n  }\r\n}\r\n","import { Inject, Injectable, PLATFORM_ID } from '@angular/core';\r\nimport { HttpClient } from '@angular/common/http';\r\n\r\nimport { Observable } from 'rxjs';\r\nimport { map } from 'rxjs/operators';\r\n\r\nimport * as dayjs from 'dayjs';\r\n\r\nimport { DataStore } from '../shell/data-store';\r\nimport { DealsListingModel } from './listing/deals-listing.model';\r\nimport { DealsDetailsModel } from './details/deals-details.model';\r\nimport { TransferStateHelper } from '../utils/transfer-state-helper';\r\nimport { isPlatformServer } from '@angular/common';\r\n\r\n@Injectable()\r\nexport class DealsService {\r\n  private listingDataStore: DataStore<DealsListingModel>;\r\n  private detailsDataStore: DataStore<DealsDetailsModel>;\r\n\r\n  constructor(\r\n    @Inject(PLATFORM_ID) private platformId: object,\r\n    private transferStateHelper: TransferStateHelper,\r\n    private http: HttpClient\r\n  ) { }\r\n\r\n  get relativeDates(): Array<string> {\r\n    return [\r\n      dayjs().add(1, 'day').add(8, 'hour').add(10, 'second').format('MM/DD/YYYY HH:mm:ss') as string,\r\n      dayjs().add(7, 'day').format('MM/DD/YYYY') as string,\r\n      dayjs().subtract(1, 'month').format('MM/DD/YYYY') as string,\r\n      dayjs().add(2, 'month').format('MM/DD/YYYY') as string\r\n    ];\r\n  }\r\n\r\n  public getListingDataSource(): Observable<DealsListingModel> {\r\n    const rawDataSource = this.http.get<DealsListingModel>('./assets/sample-data/deals/listing.json')\r\n    .pipe(\r\n      map(\r\n        (data: DealsListingModel) => {\r\n          // Using rest operator to divide the data (see: https://dev.to/napoleon039/how-to-use-the-spread-and-rest-operator-4jbb)\r\n          const {items, ...otherData} = data;\r\n\r\n          const itemsWithRelativeDates = items.map((dealItem, index) => {\r\n            // Relative date (better to showcase UI micro-interactions)\r\n            return {...dealItem, expirationDate: this.relativeDates[index]};\r\n          });\r\n\r\n          // Using spread operator to concat the data (see: https://dev.to/napoleon039/how-to-use-the-spread-and-rest-operator-4jbb)\r\n          const updatedListingData = {...otherData, items: itemsWithRelativeDates};\r\n\r\n          // Note: HttpClient cannot know how to instantiate a class for the returned data\r\n          // We need to properly cast types from json data\r\n          const listing = new DealsListingModel();\r\n\r\n          // The Object.assign() method copies all enumerable own properties from one or more source objects to a target object.\r\n          // Note: If you have non-enummerable properties, you can try a spread operator instead. listing = {...data};\r\n          // (see: https://scotch.io/bar-talk/copying-objects-in-javascript#toc-using-spread-elements-)\r\n          Object.assign(listing, updatedListingData);\r\n\r\n          return listing;\r\n        }\r\n      )\r\n    );\r\n\r\n    // This method tapps into the raw data source and stores the resolved data in the TransferState, then when\r\n    // transitioning from the server rendered view to the browser, checks if we already loaded the data in the server to prevent\r\n    // duplicate http requests.\r\n    const cachedDataSource = this.transferStateHelper.checkDataSourceState('deals-listing-state', rawDataSource);\r\n\r\n    return cachedDataSource;\r\n  }\r\n\r\n  public getListingStore(dataSource: Observable<DealsListingModel>): DataStore<DealsListingModel> {\r\n    // Use cache if available\r\n    if (!this.listingDataStore) {\r\n      // Initialize the model specifying that it is a shell model\r\n      const shellModel: DealsListingModel = new DealsListingModel();\r\n      this.listingDataStore = new DataStore(shellModel);\r\n\r\n      // If running in the server, then don't add shell to the Data Store\r\n      // If we already loaded the Data Source in the server, then don't show a shell when transitioning back to the broswer from the server\r\n      if (isPlatformServer(this.platformId) || dataSource['ssr_state']) {\r\n        // Trigger loading mechanism with 0 delay (this will prevent the shell to be shown)\r\n        this.listingDataStore.load(dataSource, 0);\r\n      } else { // On browser transitions\r\n        // Trigger the loading mechanism (with shell)\r\n        this.listingDataStore.load(dataSource);\r\n      }\r\n    }\r\n    return this.listingDataStore;\r\n  }\r\n\r\n  public getDetailsDataSource(): Observable<DealsDetailsModel> {\r\n    const rawDataSource = this.http.get<DealsDetailsModel>('./assets/sample-data/deals/details.json')\r\n    .pipe(\r\n      map(\r\n        (data: DealsDetailsModel) => {\r\n          const expirationDate = dayjs().add(1, 'day').add(8, 'hour').add(10, 'second').format('MM/DD/YYYY HH:mm:ss') as string;\r\n          const updatedDetailsData = {...data, expirationDate};\r\n\r\n          // Note: HttpClient cannot know how to instantiate a class for the returned data\r\n          // We need to properly cast types from json data\r\n          const details = new DealsDetailsModel();\r\n\r\n          // The Object.assign() method copies all enumerable own properties from one or more source objects to a target object.\r\n          // Note: If you have non-enummerable properties, you can try a spread operator instead. details = {...data};\r\n          // (see: https://scotch.io/bar-talk/copying-objects-in-javascript#toc-using-spread-elements-)\r\n          Object.assign(details, updatedDetailsData);\r\n\r\n          return details;\r\n        }\r\n      )\r\n    );\r\n\r\n    // This method tapps into the raw data source and stores the resolved data in the TransferState, then when\r\n    // transitioning from the server rendered view to the browser, checks if we already loaded the data in the server to prevent\r\n    // duplicate http requests.\r\n    const cachedDataSource = this.transferStateHelper.checkDataSourceState('deals-details-state', rawDataSource);\r\n\r\n    return cachedDataSource;\r\n  }\r\n\r\n  public getDetailsStore(dataSource: Observable<DealsDetailsModel>): DataStore<DealsDetailsModel> {\r\n    // Initialize the model specifying that it is a shell model\r\n    const shellModel: DealsDetailsModel = new DealsDetailsModel();\r\n    this.detailsDataStore = new DataStore(shellModel);\r\n\r\n    // If running in the server, then don't add shell to the Data Store\r\n    // If we already loaded the Data Source in the server, then don't show a shell when transitioning back to the broswer from the server\r\n    if (isPlatformServer(this.platformId) || dataSource['ssr_state']) {\r\n      // Trigger loading mechanism with 0 delay (this will prevent the shell to be shown)\r\n      this.detailsDataStore.load(dataSource, 0);\r\n    } else { // On browser transitions\r\n      // Trigger the loading mechanism (with shell)\r\n      this.detailsDataStore.load(dataSource);\r\n    }\r\n\r\n    return this.detailsDataStore;\r\n  }\r\n\r\n}\r\n"]}