{"version":3,"sources":["./src/app/deals/listing/deals-listing.resolver.ts","./src/app/deals/listing/deals-listing.page.ts","./src/app/deals/listing/deals-listing.page.html","./src/app/deals/listing/deals-listing.module.ts"],"names":[],"mappings":"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","file":"deals-listing-deals-listing-module-es2015.js","sourcesContent":["import { Injectable } from '@angular/core';\r\nimport { Resolve } from '@angular/router';\r\nimport { Observable } from 'rxjs';\r\n\r\nimport { DataStore } from '../../shell/data-store';\r\nimport { DealsService } from '../deals.service';\r\nimport { DealsListingModel } from './deals-listing.model';\r\n\r\n@Injectable()\r\nexport class DealsListingResolver implements Resolve<DataStore<DealsListingModel>> {\r\n\r\n  constructor(private dealsService: DealsService) {}\r\n\r\n  resolve(): DataStore<DealsListingModel> {\r\n    const dataSource: Observable<DealsListingModel> = this.dealsService.getListingDataSource();\r\n    const dataStore: DataStore<DealsListingModel> = this.dealsService.getListingStore(dataSource);\r\n\r\n    return dataStore;\r\n  }\r\n}\r\n","import { Component, OnInit, HostBinding } from '@angular/core';\r\nimport { ActivatedRoute } from '@angular/router';\r\nimport { Subscription } from 'rxjs';\r\n\r\nimport { IResolvedRouteData, ResolverHelper } from '../../utils/resolver-helper';\r\nimport { DealsListingModel } from './deals-listing.model';\r\nimport { switchMap } from 'rxjs/operators';\r\n\r\n@Component({\r\n  selector: 'app-deals-listing',\r\n  templateUrl: './deals-listing.page.html',\r\n  styleUrls: [\r\n    './styles/deals-listing.page.scss',\r\n    './styles/deals-listing.shell.scss',\r\n    './styles/deals-listing.ios.scss'\r\n  ]\r\n})\r\nexport class DealsListingPage implements OnInit {\r\n  // Gather all component subscription in one place. Can be one Subscription or multiple (chained using the Subscription.add() method)\r\n  subscriptions: Subscription;\r\n\r\n  listing: DealsListingModel;\r\n\r\n  @HostBinding('class.is-shell') get isShell() {\r\n    return (this.listing && this.listing.isShell) ? true : false;\r\n  }\r\n\r\n  constructor(private route: ActivatedRoute) { }\r\n\r\n  ngOnInit(): void {\r\n    this.subscriptions = this.route.data\r\n    .pipe(\r\n      // Extract data for this page\r\n      switchMap((resolvedRouteData: IResolvedRouteData<DealsListingModel>) => {\r\n        return ResolverHelper.extractData<DealsListingModel>(resolvedRouteData.data, DealsListingModel);\r\n      })\r\n    )\r\n    .subscribe((state) => {\r\n      this.listing = state;\r\n    }, (error) => console.log(error));\r\n  }\r\n\r\n  // NOTE: Ionic only calls ngOnDestroy if the page was popped (ex: when navigating back)\r\n  // Since ngOnDestroy might not fire when you navigate from the current page, use ionViewWillLeave to cleanup Subscriptions\r\n  ionViewWillLeave(): void {\r\n    this.subscriptions.unsubscribe();\r\n  }\r\n}\r\n","<ion-header>\r\n  <ion-toolbar color=\"primary\">\r\n    <ion-buttons slot=\"start\">\r\n      <ion-back-button defaultHref=\"app/categories\"></ion-back-button>\r\n    </ion-buttons>\r\n    <ion-title>Deals Listing</ion-title>\r\n  </ion-toolbar>\r\n</ion-header>\r\n\r\n<ion-content class=\"deals-listing-content\">\r\n  <ng-container *ngIf=\"listing?.items\">\r\n    <div class=\"listing-item\" *ngFor=\"let item of listing?.items\" [ngClass]=\"{'ended': ((item.expirationDate | appTimeDifference) < 0), 'imminent-end': ((item.expirationDate | appTimeDifference) > 0 && (item.expirationDate | appTimeDifference) <= 2), 'ends-soon': ((item.expirationDate | appTimeDifference) > 0 && (item.expirationDate | appTimeDifference) > 2 && (item.expirationDate | appTimeDifference) < 10), 'distant-end': ((item.expirationDate | appTimeDifference) >= 10)}\">\r\n      <ion-row class=\"top-row\">\r\n        <ion-col class=\"logo-col\" size=\"6\">\r\n          <app-aspect-ratio [ratio]=\"{w: 128, h: 32}\">\r\n            <app-image-shell [src]=\"item.logo\" [alt]=\"'deals logo'\" class=\"deal-logo\" animation=\"spinner\"></app-image-shell>\r\n          </app-aspect-ratio>\r\n        </ion-col>\r\n        <ion-col *ngIf=\"((item.expirationDate | appTimeDifference) > 0)\" class=\"call-to-action-col\">\r\n          <ion-button class=\"claim-button\" expand=\"block\" color=\"claim\" [routerLink]=\"['/app/categories/deals/', item.slug]\">\r\n            <span class=\"button-cta\">CLAIM</span>\r\n            <ion-icon slot=\"end\" name=\"arrow-forward\"></ion-icon>\r\n          </ion-button>\r\n        </ion-col>\r\n        <ion-col *ngIf=\"((item.expirationDate | appTimeDifference) < 0)\" class=\"call-to-action-col\">\r\n          <span class=\"expired-cta\">EXPIRED</span>\r\n        </ion-col>\r\n      </ion-row>\r\n      <ion-row class=\"middle-row\">\r\n        <ion-col class=\"info-col\">\r\n          <h4 class=\"item-name\">\r\n            <a class=\"name-anchor\" [routerLink]=\"['/app/categories/deals/', item.slug]\">\r\n              <app-text-shell animation=\"bouncing\" [data]=\"item.name\"></app-text-shell>\r\n            </a>\r\n          </h4>\r\n          <p class=\"item-description\">\r\n            <app-text-shell animation=\"bouncing\" lines=\"3\" [data]=\"item.description\"></app-text-shell>\r\n          </p>\r\n        </ion-col>\r\n        <ion-col size=\"2\">\r\n          <ion-button class=\"bookmark-button\" expand=\"block\" fill=\"clear\" color=\"claim\">\r\n            <ion-icon slot=\"icon-only\" name=\"pricetag\"></ion-icon>\r\n          </ion-button>\r\n        </ion-col>\r\n      </ion-row>\r\n      <ion-row class=\"bottom-row\">\r\n        <ion-col class=\"code-wrapper\">\r\n          <span class=\"code-cta\">Use this code:</span>\r\n          <span class=\"item-code\" [ngClass]=\"{'expired': ((item.expirationDate | appTimeDifference) < 0)}\">\r\n            <app-text-shell [data]=\"item.code\"></app-text-shell>\r\n          </span>\r\n        </ion-col>\r\n        <ion-col class=\"time-left-wrapper\" size=\"5\" [ngClass]=\"{'countdown-active': ((item.expirationDate | appTimeDifference) > 0 && (item.expirationDate | appTimeDifference) <= 2)}\">\r\n          <span class=\"expiration-cta\">DEAL {{ ((item.expirationDate | appTimeDifference) < 0) ? 'EXPIRED' : 'EXPIRES IN' }}:</span>\r\n          <ng-container *ngIf=\"((item.expirationDate | appTimeDifference) < 0 || (item.expirationDate | appTimeDifference) > 2)\">\r\n            <span class=\"item-time-left\">\r\n              <app-text-shell [data]=\"(item.expirationDate | appTimeAgo)\"></app-text-shell>\r\n            </span>\r\n          </ng-container>\r\n          <ng-container *ngIf=\"((item.expirationDate | appTimeDifference) > 0 && (item.expirationDate | appTimeDifference) <= 2)\">\r\n            <ion-row class=\"countdown-wrapper\">\r\n              <app-countdown-timer class=\"item-countdown\" fill=\"inner-time\" [end]=\"item.expirationDate\" [units]=\"{from: 'hour', to: 'second'}\"></app-countdown-timer>\r\n            </ion-row>\r\n          </ng-container>\r\n        </ion-col>\r\n      </ion-row>\r\n    </div>\r\n  </ng-container>\r\n</ion-content>\r\n","import { NgModule } from '@angular/core';\r\nimport { CommonModule } from '@angular/common';\r\nimport { Routes, RouterModule } from '@angular/router';\r\n\r\nimport { IonicModule } from '@ionic/angular';\r\n\r\nimport { ComponentsModule } from '../../components/components.module';\r\nimport { PipesModule } from '../../pipes/pipes.module';\r\n\r\nimport { DealsService } from '../deals.service';\r\nimport { DealsListingPage } from './deals-listing.page';\r\nimport { DealsListingResolver } from './deals-listing.resolver';\r\n\r\nconst routes: Routes = [\r\n  {\r\n    path: '',\r\n    component: DealsListingPage,\r\n    resolve: {\r\n      data: DealsListingResolver\r\n    }\r\n  }\r\n];\r\n\r\n@NgModule({\r\n  imports: [\r\n    CommonModule,\r\n    IonicModule,\r\n    RouterModule.forChild(routes),\r\n    ComponentsModule,\r\n    PipesModule\r\n  ],\r\n  declarations: [\r\n    DealsListingPage\r\n  ],\r\n  providers: [\r\n    DealsListingResolver,\r\n    DealsService\r\n  ]\r\n})\r\nexport class DealsListingPageModule {}\r\n"],"sourceRoot":"webpack:///"}