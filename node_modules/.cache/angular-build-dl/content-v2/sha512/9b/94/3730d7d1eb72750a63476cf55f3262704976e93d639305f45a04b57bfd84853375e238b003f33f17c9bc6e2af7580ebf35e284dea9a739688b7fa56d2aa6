{"version":3,"sources":["./node_modules/capacitor-firebase-auth/dist/esm/facades.js","./node_modules/firebase/auth/dist/index.esm.js","./node_modules/capacitor-firebase-auth/dist/esm/providers/facebook.provider.js","./node_modules/capacitor-firebase-auth/dist/esm/providers/phone.provider.js","./node_modules/capacitor-firebase-auth/dist/esm/providers/twitter.provider.js","./node_modules/capacitor-firebase-auth/dist/esm/web.js","./src/app/firebase/auth/firebase-auth.service.ts","./node_modules/@angular/fire/__ivy_ngcc__/fesm2015/angular-fire-auth.js","./src/app/firebase/auth/profile/firebase-profile.model.ts","./node_modules/capacitor-firebase-auth/dist/esm/operators.js","./src/app/firebase/auth/firebase-auth.module.ts","./src/app/shell/data-store.ts","./node_modules/capacitor-firebase-auth/dist/esm/providers/google.provider.js","./node_modules/capacitor-firebase-auth/dist/esm/definitions.js","./node_modules/capacitor-firebase-auth/dist/esm/index.js"],"names":[],"mappings":";;;;;;;;;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAwE;AAC/B;AAClB;AACuB;AACA;AAC9C,eAAe,uDAAO;AACtB,IAAI,yDAAS;AACb,IAAI,yEAAiB,CAAC,0DAAqB;AAC3C;AACA;AACA;AACA;AACA;AACA;AACO;AACP,+BAA+B,iDAAa;AAC5C,iCAAiC,iDAAa;AAC9C,gCAAgC,iDAAa;AAC7C,8BAA8B,iDAAa;AAC3C;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,mBAAmB,uDAAU,mBAAmB,WAAW;AAC3D;AACA;AACA;AACA;AACA;AACO;AACP,eAAe,+CAAU;AACzB;AACA,2BAA2B,iDAAa;AACxC;AACA,uBAAuB,aAAa;AACpC;AACA,+BAA+B,iDAAa;AAC5C;AACA,YAAY,gDAAY;AACxB;AACA;AACA;AACA,aAAa;AACb;AACA;AACA,aAAa;AACb,SAAS;AACT;AACA,SAAS;AACT,KAAK;AACL;AACA;AACA;AACA;AACO;AACP,eAAe,+CAAU;AACzB;AACA,2BAA2B,iDAAa;AACxC;AACA,uBAAuB,aAAa;AACpC;AACA,+BAA+B,iDAAa;AAC5C;AACA,YAAY,gDAAY;AACxB;AACA;AACA;AACA,aAAa;AACb;AACA,SAAS;AACT,KAAK;AACL;AACA;AACA;AACA;AACO;AACP,eAAe,+CAAU;AACzB;AACA,2BAA2B,iDAAa;AACxC;AACA,uBAAuB,aAAa;AACpC;AACA,+BAA+B,iDAAa;AAC5C;AACA,YAAY,gDAAY;AACxB;AACA;AACA;AACA,aAAa;AACb;AACA,SAAS;AACT,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACO;AACP,eAAe,+CAAU;AACzB;AACA,2BAA2B,iDAAa;AACxC,uBAAuB,oBAAoB,0BAA0B,EAAE;AACvE;AACA;AACA;AACA;AACA;AACA,+BAA+B,iDAAa;AAC5C;AACA,YAAY,gDAAY;AACxB;AACA;AACA;AACA,aAAa;AACb;AACA,SAAS;AACT,KAAK;AACL;AACA;AACA;AACA;AACO;AACP,eAAe,+CAAU;AACzB;AACA;AACA;AACA;AACA,SAAS;AACT,KAAK;AACL;AACA;AACA;AACA;AACO;AACP,eAAe,+CAAU;AACzB;AACA;AACA;AACA;AACA,SAAS;AACT,KAAK;AACL;AACA;AACA;AACA;AACO;AACP,eAAe,+CAAU;AACzB,yBAAyB;AACzB;AACA,YAAY,gDAAY;AACxB;AACA;AACA;AACA,aAAa;AACb;AACA,SAAS;AACT,KAAK;AACL;AACA,mC;;;;;;;;;;;;ACrKA;AAAA;AAAA;AAAwB;AACxB;;;;;;;;;;;;;ACDA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,iBAAiB,SAAI,IAAI,SAAI;AAC7B,2BAA2B,+DAA+D,gBAAgB,EAAE,EAAE;AAC9G;AACA,mCAAmC,MAAM,6BAA6B,EAAE,YAAY,WAAW,EAAE;AACjG,kCAAkC,MAAM,iCAAiC,EAAE,YAAY,WAAW,EAAE;AACpG,+BAA+B,qFAAqF;AACpH;AACA,KAAK;AACL;AACyC;AAClB;AAC+B;AAC/C;AACP,yBAAyB,iDAAa;AACtC,IAAI,iDAAa;AACjB,iCAAiC,iDAAa;AAC9C,WAAW,aAAa;AACxB,eAAe,iEAAoB;AACnC,CAAC;AACD,6C;;;;;;;;;;;;ACnBA;AAAA;AAAA;AAAA,iBAAiB,SAAI,IAAI,SAAI;AAC7B,2BAA2B,+DAA+D,gBAAgB,EAAE,EAAE;AAC9G;AACA,mCAAmC,MAAM,6BAA6B,EAAE,YAAY,WAAW,EAAE;AACjG,kCAAkC,MAAM,iCAAiC,EAAE,YAAY,WAAW,EAAE;AACpG,+BAA+B,qFAAqF;AACpH;AACA,KAAK;AACL;AACuB;AAChB;AACP;AACA,kCAAkC,mBAAmB;AACrD,CAAC;AACD,0C;;;;;;;;;;;;ACdA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,iBAAiB,SAAI,IAAI,SAAI;AAC7B,2BAA2B,+DAA+D,gBAAgB,EAAE,EAAE;AAC9G;AACA,mCAAmC,MAAM,6BAA6B,EAAE,YAAY,WAAW,EAAE;AACjG,kCAAkC,MAAM,iCAAiC,EAAE,YAAY,WAAW,EAAE;AACpG,+BAA+B,qFAAqF;AACpH;AACA,KAAK;AACL;AACyC;AAClB;AAC8B;AAC9C;AACP;AACA,6BAA6B,iDAAa;AAC1C,QAAQ,iDAAa;AACrB,qCAAqC,iDAAa;AAClD,eAAe,aAAa;AAC5B,mBAAmB,gEAAmB;AACtC;AACA;AACA;AACA;AACA,CAAC;AACD,4C;;;;;;;;;;;;ACxBA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,iBAAiB,SAAI,IAAI,SAAI;AAC7B,2BAA2B,+DAA+D,gBAAgB,EAAE,EAAE;AAC9G;AACA,mCAAmC,MAAM,6BAA6B,EAAE,YAAY,WAAW,EAAE;AACjG,kCAAkC,MAAM,iCAAiC,EAAE,YAAY,WAAW,EAAE;AACpG,+BAA+B,qFAAqF;AACpH;AACA,KAAK;AACL;AAC+D;AACtB;AAClB;AAC2C;AACJ;AACF;AACI;AACzD,uCAAuC,yDAAS;AACvD;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA,uCAAuC,iDAAa;AACpD,yCAAyC,iDAAa;AACtD,wCAAwC,iDAAa;AACrD,sCAAsC,iDAAa;AACnD;AACA;AACA,2BAA2B,kFAAe;AAC1C;AACA,2BAA2B,oFAAgB;AAC3C;AACA,2BAA2B,sFAAiB;AAC5C;AACA,2BAA2B,gFAAc;AACzC;AACA,0CAA0C,mBAAmB;AAC7D,SAAS;AACT;AACA;AACA;AACA;AACA,mBAAmB,iDAAa;AAChC,SAAS;AACT;AACA;AACA;AACiC;AACjC;AACA,yEAAiB;AACjB,+B;;;;;;;;;;;;ACrDA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAgE;AACX;AACA;AACF;AACqB;AAC9B;AACG;AAEH;AACsB;AACZ;;;;AAG7C,MAAM,mBAAmB;IAQ9B,YACS,WAA4B,EAC5B,QAAkB,EACI,UAAkB;QAFxC,gBAAW,GAAX,WAAW,CAAiB;QAC5B,aAAQ,GAAR,QAAQ,CAAU;QACI,eAAU,GAAV,UAAU,CAAQ;QANjD,mBAAc,GAAiB,IAAI,4CAAO,EAAO,CAAC;QAQhD,IAAI,yEAAiB,CAAC,IAAI,CAAC,UAAU,CAAC,EAAE;YACtC,IAAI,CAAC,WAAW,CAAC,kBAAkB,CAAC,CAAC,IAAI,EAAE,EAAE;gBAC3C,IAAI,IAAI,EAAE;oBACR,qBAAqB;oBACrB,IAAI,CAAC,WAAW,GAAG,IAAI,CAAC;iBACzB;qBAAM;oBACL,wBAAwB;oBACxB,IAAI,CAAC,WAAW,GAAG,IAAI,CAAC;iBACzB;YACH,CAAC,CAAC,CAAC;YAEH,IAAI,CAAC,IAAI,CAAC,QAAQ,CAAC,EAAE,CAAC,WAAW,CAAC,EAAE;gBAClC,uEAAuE;gBACvE,IAAI,CAAC,WAAW,CAAC,iBAAiB,EAAE;qBACnC,IAAI,CAAC,CAAC,MAAM,EAAE,EAAE;oBACf,gHAAgH;oBAChH,IAAI,MAAM,CAAC,IAAI,EAAE;wBACf,IAAI,CAAC,0BAA0B,GAAG,MAAM,CAAC,kBAAkB,CAAC,OAAO,CAAC;wBACpE,IAAI,CAAC,cAAc,CAAC,IAAI,CAAC,MAAM,CAAC,CAAC;qBAClC;gBACH,CAAC,EAAE,CAAC,KAAK,EAAE,EAAE;oBACX,IAAI,CAAC,cAAc,CAAC,IAAI,CAAC,EAAC,KAAK,EAAE,KAAK,CAAC,IAAI,EAAC,CAAC,CAAC;gBAChD,CAAC,CAAC,CAAC;aACJ;SACF;IACH,CAAC;IAED,iBAAiB;QACf,OAAO,IAAI,CAAC,cAAc,CAAC,YAAY,EAAE,CAAC;IAC5C,CAAC;IAED,WAAW,CAAC,gBAAwB,EAAE,QAAgB;QACpD,8DAA8D;QAC9D,QAAQ,gBAAgB,EAAE;YACxB,KAAK,cAAc;gBACjB,OAAO,QAAQ,GAAG,aAAa,CAAC;YAClC,KAAK,UAAU;gBACb,OAAO,6EAA6E,CAAC;YACvF,KAAK,aAAa;gBAChB,OAAO,QAAQ,CAAC,OAAO,CAAC,SAAS,EAAE,UAAU,CAAC,CAAC;YACjD,KAAK,YAAY;gBACf,OAAO,QAAQ,CAAC,KAAK,CAAC,GAAG,CAAC,CAAC,CAAC,CAAC,CAAC;YAChC;gBACE,OAAO,QAAQ,CAAC;SACnB;IACH,CAAC;IAED,OAAO;QACL,IAAI,IAAI,CAAC,QAAQ,CAAC,EAAE,CAAC,WAAW,CAAC,EAAE;YACjC,OAAO,0EAAU,EAAE,CAAC;SACrB;aAAM;YACL,OAAO,iDAAI,CAAC,IAAI,CAAC,WAAW,CAAC,OAAO,EAAE,CAAC,CAAC;SACzC;IACH,CAAC;IAED,eAAe,CAAC,KAAa,EAAE,QAAgB;QAC7C,OAAO,IAAI,CAAC,WAAW,CAAC,0BAA0B,CAAC,KAAK,EAAE,QAAQ,CAAC,CAAC;IACtE,CAAC;IAED,eAAe,CAAC,KAAa,EAAE,QAAgB;QAC7C,OAAO,IAAI,CAAC,WAAW,CAAC,8BAA8B,CAAC,KAAK,EAAE,QAAQ,CAAC,CAAC;IAC1E,CAAC;IAED,YAAY,CAAC,YAAoB,EAAE,MAAsB;QACvD,IAAI,IAAI,CAAC,QAAQ,CAAC,EAAE,CAAC,WAAW,CAAC,EAAE;YACjC,OAAO,yEAAS,CAAC,YAAY,CAAC,CAAC;SAChC;aAAM;YACL,MAAM,QAAQ,GAAG,IAAI,iDAAI,CAAC,aAAa,CAAC,YAAY,CAAC,CAAC;YAEtD,IAAI,MAAM,EAAE;gBACV,MAAM,CAAC,OAAO,CAAC,KAAK,CAAC,EAAE;oBACrB,QAAQ,CAAC,QAAQ,CAAC,KAAK,CAAC,CAAC;gBAC3B,CAAC,CAAC,CAAC;aACJ;YAED,IAAI,IAAI,CAAC,QAAQ,CAAC,EAAE,CAAC,SAAS,CAAC,EAAE;gBAC/B,OAAO,iDAAI,CAAC,IAAI,CAAC,WAAW,CAAC,eAAe,CAAC,QAAQ,CAAC,CAAC,CAAC;aACzD;iBAAM;gBACL,8CAA8C;gBAC9C,OAAO,iDAAI,CAAC,IAAI,CAAC,WAAW,CAAC,kBAAkB,CAAC,QAAQ,CAAC,CAAC,CAAC;aAC5D;SACF;IACH,CAAC;IAED,kBAAkB;QAChB,MAAM,QAAQ,GAAG,IAAI,iDAAI,CAAC,oBAAoB,EAAE,CAAC;QACjD,OAAO,IAAI,CAAC,YAAY,CAAC,QAAQ,CAAC,UAAU,CAAC,CAAC;IAChD,CAAC;IAED,gBAAgB;QACd,MAAM,QAAQ,GAAG,IAAI,iDAAI,CAAC,kBAAkB,EAAE,CAAC;QAC/C,MAAM,MAAM,GAAG,CAAC,SAAS,EAAE,OAAO,CAAC,CAAC;QACpC,OAAO,IAAI,CAAC,YAAY,CAAC,QAAQ,CAAC,UAAU,EAAE,MAAM,CAAC,CAAC;IACxD,CAAC;IAED,iBAAiB;QACf,MAAM,QAAQ,GAAG,IAAI,iDAAI,CAAC,mBAAmB,EAAE,CAAC;QAChD,OAAO,IAAI,CAAC,YAAY,CAAC,QAAQ,CAAC,UAAU,CAAC,CAAC;IAChD,CAAC;IAEM,oBAAoB;QACzB,+DAA+D;QAC/D,8DAA8D;QAC9D,IAAI,IAAI,CAAC,QAAQ,CAAC,EAAE,CAAC,WAAW,CAAC,EAAE;YACjC,OAAO,+CAAE,CAAC,IAAI,CAAC,sBAAsB,EAAE,CAAC,CAAC;SAC1C;aAAM;YACL,OAAO,IAAI,CAAC,WAAW,CAAC,IAAI;iBAC3B,IAAI,CACH,6DAAM,CAAC,CAAC,IAAU,EAAE,EAAE,CAAC,IAAI,IAAI,IAAI,CAAC,EACpC,0DAAG,CAAC,CAAC,IAAU,EAAE,EAAE;gBACjB,OAAO,IAAI,CAAC,sBAAsB,EAAE,CAAC;YACvC,CAAC,CAAC,CACH,CAAC;SACH;IACH,CAAC;IAEO,sBAAsB;QAC5B,MAAM,SAAS,GAAG,IAAI,oFAAoB,EAAE,CAAC;QAC7C,MAAM,WAAW,GAAG,IAAI,CAAC,WAAW,CAAC,YAAY,CAAC,CAAC,CAAC,CAAC;QACrD,MAAM,QAAQ,GAAG,IAAI,CAAC,0BAA0B,CAAC,CAAC,CAAC,IAAI,CAAC,0BAA0B,CAAC,CAAC,CAAC,WAAW,CAAC;QACjG,SAAS,CAAC,KAAK,GAAG,IAAI,CAAC,WAAW,CAAC,WAAW,CAAC,UAAU,EAAE,WAAW,CAAC,QAAQ,CAAC,CAAC;QACjF,SAAS,CAAC,IAAI,GAAG,QAAQ,CAAC,IAAI,IAAI,QAAQ,CAAC,WAAW,IAAI,oBAAoB,CAAC;QAC/E,SAAS,CAAC,IAAI,GAAG,kCAAkC,CAAC;QACpD,SAAS,CAAC,WAAW,GAAG,QAAQ,CAAC,WAAW,IAAI,uDAAuD,CAAC;QACxG,SAAS,CAAC,WAAW,GAAG,QAAQ,CAAC,WAAW,IAAI,0CAA0C,CAAC;QAC3F,SAAS,CAAC,KAAK,GAAG,QAAQ,CAAC,KAAK,IAAI,8BAA8B,CAAC;QACnE,SAAS,CAAC,QAAQ,GAAG,CAAC,WAAW,CAAC,UAAU,KAAK,UAAU,CAAC,CAAC,CAAC,CAAC,WAAW,CAAC,UAAU,CAAC,CAAC,CAAC,aAAa,CAAC;QAEtG,OAAO,SAAS,CAAC;IACnB,CAAC;IAEM,eAAe,CAAC,UAA4C;QACjE,2DAA2D;QAC3D,MAAM,UAAU,GAAyB,IAAI,oFAAoB,EAAE,CAAC;QACpE,IAAI,CAAC,gBAAgB,GAAG,IAAI,2DAAS,CAAC,UAAU,CAAC,CAAC;QAClD,8DAA8D;QAC9D,IAAI,CAAC,gBAAgB,CAAC,IAAI,CAAC,UAAU,CAAC,CAAC;QACvC,OAAO,IAAI,CAAC,gBAAgB,CAAC;IAC/B,CAAC;;sFAvJU,mBAAmB,sSAWpB,yDAAW;sGAXV,mBAAmB,WAAnB,mBAAmB;6FAAnB,mBAAmB;cAD/B,wDAAU;;sBAYN,oDAAM;uBAAC,yDAAW;;;;;;;;;;;;;;ACxBvB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAA0H;AAC9E;AACmC;AACiF;AAC7G;;AAEnD;AACA;AACA;AACA,cAAc,uHAAuH;AACrI;AACA;AACwC;AACxC;AACA;AACA,eAAe,EAAE;AACjB,eAAe,EAAE;AACjB,eAAe,EAAE;AACjB,eAAe,EAAE;AACjB;AACA;AACA;AACA;AACA,mBAAmB,EAAE;AACrB,+BAA+B,oEAAsB;AACrD,mBAAmB,EAAE;AACrB,uCAAuC,oFAA8B;AACrE,mBAAmB,EAAE;AACrB,qBAAqB,+CAAE,iBAAiB,gEAAS,6BAA6B,gEAAS;AACvF,oBAAoB;AACpB;AACA;AACA,oBAAoB;AACpB;AACA,cAAc,kGAAuB,MAAM,0DAAG;AAC9C,oBAAoB;AACpB;AACA,cAAc,yEAAmB,iCAAiC,0DAAG;AACrE,mBAAmB,EAAE;AACrB,oBAAoB;AACpB;AACA;AACA,oBAAoB;AACpB;AACA,8BAA8B,kEAAW,EAAE,iCAAiC;AAC5E,YAAY,wEAAgB;AAC5B,6EAA6E,+CAAE;AAC/E;AACA;AACA;AACA,oCAAoC,OAAO;AAC3C;AACA;AACA;AACA,uBAAuB,EAAE;AACzB,gCAAgC,4DAAK;AACrC,uCAAuC,gEAAS;AAChD,uBAAuB,EAAE;AACzB,wBAAwB;AACxB;AACA;AACA,wBAAwB;AACxB;AACA,4BAA4B,gEAAS;AACrC,uBAAuB,EAAE;AACzB,wBAAwB;AACxB;AACA;AACA,wBAAwB;AACxB;AACA,sBAAsB,+CAAU;AAChC,kCAAkC,gEAAS;AAC3C,uBAAuB,EAAE;AACzB,wBAAwB;AACxB;AACA;AACA,wBAAwB;AACxB;AACA,4BAA4B,gEAAS;AACrC,uBAAuB,EAAE;AACzB,wBAAwB;AACxB;AACA;AACA,wBAAwB;AACxB;AACA,sBAAsB,+CAAU;AAChC,0CAA0C,gEAAS;AACnD,uBAAuB,EAAE;AACzB,wBAAwB;AACxB;AACA,2BAA2B,iDAAI,sBAAsB,+CAAE;AACvD,gDAAgD,gEAAS;AACzD,uBAAuB,EAAE;AACzB,wBAAwB;AACxB;AACA,2BAA2B,iDAAI,4BAA4B,+CAAE;AAC7D;AACA,eAAe,mEAAa;AAC5B;AACA;AACA,4DAA4D,mCAAmC,sDAAe,CAAC,8DAAgB,GAAG,sDAAe,CAAC,+DAAiB,MAAM,sDAAe,CAAC,yDAAW,GAAG,sDAAe,CAAC,oDAAa,GAAG;AACvO;AACA;AACA,KAAK,gCAAgC,OAAO,oDAAM,SAAS,8DAAgB,IAAI,GAAG;AAClF,KAAK,gCAAgC,OAAO,sDAAQ,EAAE,GAAG,OAAO,oDAAM,SAAS,+DAAiB,IAAI,GAAG;AACvG,KAAK,6BAA6B,OAAO,oDAAM,SAAS,yDAAW,IAAI,GAAG;AAC1E,KAAK,OAAO,oDAAM;AAClB;AACA,2CAA2C,wEAAkB,EAAE,8CAA8C,4BAA4B,8DAAQ,CAAC,8DAAgB,GAAG,8DAAQ,CAAC,+DAAiB,MAAM,8DAAQ,CAAC,yDAAW,GAAG,8DAAQ,CAAC,oDAAM,GAAG,EAAE,6CAA6C;AAC7R,4BAA4B,CAAC,+DAAwB;AACrD,cAAc,wDAAU;AACxB;AACA;AACA,aAAa;AACb,KAAK,gBAAgB,UAAU;AAC/B,sBAAsB,oDAAM;AAC5B,uBAAuB,8DAAgB;AACvC,aAAa,GAAG,GAAG;AACnB,sBAAsB,sDAAQ;AAC9B,aAAa;AACb,sBAAsB,oDAAM;AAC5B,uBAAuB,+DAAiB;AACxC,aAAa,GAAG,GAAG;AACnB,sBAAsB,oDAAM;AAC5B,uBAAuB,yDAAW;AAClC,aAAa,GAAG,GAAG,OAAO,oDAAa,EAAE,EAAE,EAAE,QAAQ,EAAE;AACvD,WAAW,EAuBV;;AAED;AACA;AACA;AACA,cAAc,uHAAuH;AACrI;AACA;AACA;AACA,6BAA6B,8DAAuB,EAAE,8BAA8B;AACpF,6BAA6B,8DAAuB,EAAE,qDAAqD,2CAA2C,EAAE,gCAAgC;AACxL,4BAA4B,CAAC,+DAAwB;AACrD,cAAc,sDAAQ;AACtB;AACA;AACA,aAAa;AACb,KAAK,eAAe,EAAE;;AAEtB;AACA;AACA;AACA,cAAc,uHAAuH;AACrI;;AAEA;AACA;AACA;AACA,cAAc,uHAAuH;AACrI;;AAEkD;;AAElD,6C;;;;;;;;;;;;ACrLA;AAAA;AAAA;AAAuD;AAEhD,MAAM,oBAAqB,SAAQ,4DAAU;IASlD;QACE,KAAK,EAAE,CAAC;IACV,CAAC;CACF;;;;;;;;;;;;;ACdD;AAAA;AAAA;AAAA;AAAA;AAAgC;AACW;AAC3C;AACA;AACA;AACA;AACA;AACA;AACA,WAAW,6BAA6B;AACxC,WAAW,SAAS;AACpB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACO,gCAAgC,iDAAI,CAAC,gEAAS;AACrD;AACA,eAAe,6DAA6D;AAC5E,eAAe,+CAAE,EAAE,6DAA6D;AAChF;AACA,WAAW,+CAAE;AACb,CAAC;AACD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,WAAW,6BAA6B;AACxC,WAAW,SAAS;AACpB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACO,0CAA0C,iDAAI,CAAC,gEAAS,GAAG,iBAAiB;AACnF;AACA,eAAe,6DAA6D;AAC5E,eAAe,+CAAE,EAAE,6DAA6D;AAChF;AACA,WAAW,+CAAE;AACb,CAAC;AACD,qC;;;;;;;;;;;;AClDA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAyC;AACM;AACQ;AACV;AACyB;AACX;AACT;AACc;AACF;;;;AAE9D,MAAM,MAAM,GAAW;IACrB;QACE,IAAI,EAAE,EAAE;QACR,QAAQ,EAAE;YACR,0BAA0B;YAC1B;gBACE,IAAI,EAAE,EAAE;gBACR,UAAU,EAAE,SAAS;gBACrB,SAAS,EAAE,MAAM;aAClB;YACD;gBACE,IAAI,EAAE,SAAS;gBACf,YAAY,EAAE,GAAG,EAAE,CAAC,+OAA2C,CAAC,IAAI,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,wBAAwB,CAAC;aACtG;YACD;gBACE,IAAI,EAAE,SAAS;gBACf,YAAY,EAAE,GAAG,EAAE,CAAC,+OAA2C,CAAC,IAAI,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,wBAAwB,CAAC;aACtG;YACD;gBACE,IAAI,EAAE,SAAS;gBACf,YAAY,EAAE,GAAG,EAAE,CAAC,+OAA2C,CAAC,IAAI,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,yBAAyB,CAAC;aACvG;SACF;KACF;CACF,CAAC;AAaK,MAAM,kBAAkB;;iGAAlB,kBAAkB;8JAAlB,kBAAkB,mBAFlB,CAAC,0EAAmB,CAAC,YARvB;YACP,4DAAY;YACZ,0DAAW;YACX,8EAAgB;YAChB,4DAAY,CAAC,QAAQ,CAAC,MAAM,CAAC;YAC7B,+DAAiB,CAAC,aAAa,CAAC,qEAAW,CAAC,QAAQ,CAAC;YACrD,wEAAqB;SACtB;mIAGU,kBAAkB,cAT3B,4DAAY;QACZ,0DAAW;QACX,8EAAgB,iIAGhB,wEAAqB;6FAIZ,kBAAkB;cAX9B,sDAAQ;eAAC;gBACR,OAAO,EAAE;oBACP,4DAAY;oBACZ,0DAAW;oBACX,8EAAgB;oBAChB,4DAAY,CAAC,QAAQ,CAAC,MAAM,CAAC;oBAC7B,+DAAiB,CAAC,aAAa,CAAC,qEAAW,CAAC,QAAQ,CAAC;oBACrD,wEAAqB;iBACtB;gBACD,SAAS,EAAE,CAAC,0EAAmB,CAAC;aACjC;;;;;;;;;;;;;;AC9CD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAoE;AACb;AACM;AAEtD,MAAM,UAAU;IAAvB;QACE,YAAO,GAAG,KAAK,CAAC;IAClB,CAAC;CAAA;AAEM,MAAM,SAAS;IAQpB,YAAoB,UAAa;QAAb,eAAU,GAAV,UAAU,CAAG;QAPjC,4GAA4G;QAC5G,sFAAsF;QACtF,2CAA2C;QACnC,iBAAY,GAAG,CAAC,qEAAW,CAAC,cAAc,IAAI,qEAAW,CAAC,cAAc,CAAC,YAAY,CAAC,CAAC,CAAC,CAAC,qEAAW,CAAC,cAAc,CAAC,YAAY,CAAC,CAAC,CAAC,CAAC,CAAC;QAErI,aAAQ,GAAkC,IAAI,kDAAa,CAAC,CAAC,CAAC,CAAC;IAElC,CAAC;IAEtC,gCAAgC;IAChC,sDAAsD;IACtD,6EAA6E;IACtE,MAAM,CAAC,WAAW,CAAI,cAA6B,EAAE,UAAa,EAAE,YAAY,GAAG,GAAG;QAC3F,MAAM,eAAe,GAAG,+CAAE,CAAC,IAAI,CAAC,CAAC,IAAI,CACnC,4DAAK,CAAC,YAAY,CAAC,CACpB,CAAC;QAEF,gCAAgC;QAChC,wGAAwG;QACxG,OAAO,0DAAa,CAAC;YACnB,eAAe;YACf,cAAc;SACf,CAAC,CAAC,IAAI;QACL,iCAAiC;QACjC,0DAAG,CAAC,CAAC,CAAC,UAAU,EAAE,SAAS,CAAe,EAAoB,EAAE,CAAC,MAAM,CAAC,MAAM,CAAC,SAAS,EAAE,EAAC,OAAO,EAAE,KAAK,EAAC,CAAC,CAAC;QAC5G,2CAA2C;QAC3C,gEAAS,CAAC,MAAM,CAAC,MAAM,CAAC,UAAU,EAAE,EAAC,OAAO,EAAE,IAAI,EAAC,CAAC,CAAC,CACtD,CAAC;IACJ,CAAC;IAED,IAAI,CAAC,oBAAmC,EAAE,YAAqB;QAC7D,gDAAgD;QAChD,MAAM,KAAK,GAAG,CAAC,OAAO,YAAY,KAAK,QAAQ,CAAC,CAAC,CAAC,CAAC,YAAY,CAAC,CAAC,CAAC,IAAI,CAAC,YAAY,CAAC;QAEpF,IAAI,mBAAoC,CAAC;QAEzC,6CAA6C;QAC7C,IAAI,KAAK,KAAK,CAAC,EAAE;YACf,mBAAmB,GAAG,oBAAoB,CAAC;SAC5C;aAAM;YACL,mBAAmB,GAAG,SAAS,CAAC,WAAW,CAAC,oBAAoB,EAAE,IAAI,CAAC,UAAU,EAAE,KAAK,CAAC,CAAC;SAC3F;QAED,mBAAmB;aAClB,SAAS,CAAC,CAAC,SAAyB,EAAE,EAAE;YACvC,IAAI,CAAC,QAAQ,CAAC,IAAI,CAAC,SAAS,CAAC,CAAC;QAChC,CAAC,CAAC,CAAC;IACL,CAAC;IAED,IAAW,KAAK;QACd,OAAO,IAAI,CAAC,QAAQ,CAAC,YAAY,EAAE,CAAC;IACtC,CAAC;CACF;;;;;;;;;;;;;AC7DD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,iBAAiB,SAAI,IAAI,SAAI;AAC7B,2BAA2B,+DAA+D,gBAAgB,EAAE,EAAE;AAC9G;AACA,mCAAmC,MAAM,6BAA6B,EAAE,YAAY,WAAW,EAAE;AACjG,kCAAkC,MAAM,iCAAiC,EAAE,YAAY,WAAW,EAAE;AACpG,+BAA+B,qFAAqF;AACpH;AACA,KAAK;AACL;AACyC;AAClB;AAC6B;AAC7C;AACP;AACA,6BAA6B,iDAAa;AAC1C,QAAQ,iDAAa;AACrB,qCAAqC,iDAAa;AAClD,eAAe,aAAa;AAC5B,mBAAmB,+DAAkB;AACrC;AACA;AACA;AACA;AACA,CAAC;AACD,2C;;;;;;;;;;;;ACxBA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAyC;AAClB;AAChB;AACP;AACA;AACA,0BAA0B,iDAAa;AACvC;AACA;AACO;AACP;AACA;AACA;AACA,0BAA0B,iDAAa;AACvC;AACA;AACO;AACP;AACA;AACA,0BAA0B,iDAAa;AACvC;AACA;AACO;AACP;AACA;AACA;AACA,0BAA0B,iDAAa;AACvC;AACA;AACA,uC;;;;;;;;;;;;AC5BA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAA8B;AACJ;AACE;AACN;AACtB,iC","file":"firebase-auth-firebase-auth-module-es2015.js","sourcesContent":["import { registerWebPlugin, Plugins, Capacitor } from '@capacitor/core';\r\nimport * as firebase from 'firebase/app';\r\nimport 'firebase/auth';\r\nimport { Observable, throwError } from 'rxjs';\r\nimport { CapacitorFirebaseAuth } from './web';\r\nconst plugin = Plugins.CapacitorFirebaseAuth;\r\nif (Capacitor.platform === 'web') {\r\n    registerWebPlugin(CapacitorFirebaseAuth);\r\n}\r\n/**\r\n * Call the sign in method on native layer and sign in on web layer with retrieved credentials.\r\n * @param providerId The provider identification.\r\n * @param data The provider additional information (optional).\r\n */\r\nexport const cfaSignIn = (providerId, data) => {\r\n    const googleProvider = new firebase.auth.GoogleAuthProvider().providerId;\r\n    const facebookProvider = new firebase.auth.FacebookAuthProvider().providerId;\r\n    const twitterProvider = new firebase.auth.TwitterAuthProvider().providerId;\r\n    const phoneProvider = new firebase.auth.PhoneAuthProvider().providerId;\r\n    switch (providerId) {\r\n        case googleProvider:\r\n            return cfaSignInGoogle();\r\n        case twitterProvider:\r\n            return cfaSignInTwitter();\r\n        case facebookProvider:\r\n            return cfaSignInFacebook();\r\n        case phoneProvider:\r\n            return cfaSignInPhone(data.phone, data.verificationCode);\r\n        default:\r\n            return throwError(new Error(`The '${providerId}' provider was not supported`));\r\n    }\r\n};\r\n/**\r\n * Call the Google sign in method on native layer and sign in on web layer with retrieved credentials.\r\n */\r\nexport const cfaSignInGoogle = () => {\r\n    return new Observable(observer => {\r\n        // get the provider id\r\n        const providerId = firebase.auth.GoogleAuthProvider.PROVIDER_ID;\r\n        // native sign in\r\n        plugin.signIn({ providerId }).then((result) => {\r\n            // create the credentials\r\n            const credential = firebase.auth.GoogleAuthProvider.credential(result.idToken);\r\n            // web sign in\r\n            firebase.app().auth().signInWithCredential(credential)\r\n                .then((userCredential) => {\r\n                observer.next(userCredential.user);\r\n                observer.complete();\r\n            })\r\n                .catch((reject) => {\r\n                observer.error(reject);\r\n            });\r\n        }).catch(reject => {\r\n            observer.error(reject);\r\n        });\r\n    });\r\n};\r\n/**\r\n * Call the Twitter sign in method on native and sign in on web layer with retrieved credentials.\r\n */\r\nexport const cfaSignInTwitter = () => {\r\n    return new Observable(observer => {\r\n        // get the provider id\r\n        const providerId = firebase.auth.TwitterAuthProvider.PROVIDER_ID;\r\n        // native sign in\r\n        plugin.signIn({ providerId }).then((result) => {\r\n            // create the credentials\r\n            const credential = firebase.auth.TwitterAuthProvider.credential(result.idToken, result.secret);\r\n            // web sign in\r\n            firebase.app().auth().signInWithCredential(credential)\r\n                .then((userCredential) => {\r\n                observer.next(userCredential.user);\r\n                observer.complete();\r\n            })\r\n                .catch((reject) => observer.error(reject));\r\n        }).catch(reject => observer.error(reject));\r\n    });\r\n};\r\n/**\r\n * Call the Facebook sign in method on native and sign in on web layer with retrieved credentials.\r\n */\r\nexport const cfaSignInFacebook = () => {\r\n    return new Observable(observer => {\r\n        // get the provider id\r\n        const providerId = firebase.auth.FacebookAuthProvider.PROVIDER_ID;\r\n        // native sign in\r\n        plugin.signIn({ providerId }).then((result) => {\r\n            // create the credentials\r\n            const credential = firebase.auth.FacebookAuthProvider.credential(result.idToken);\r\n            // web sign in\r\n            firebase.app().auth().signInWithCredential(credential)\r\n                .then((userCredential) => {\r\n                observer.next(userCredential.user);\r\n                observer.complete();\r\n            })\r\n                .catch((reject) => observer.error(reject));\r\n        }).catch(reject => observer.error(reject));\r\n    });\r\n};\r\n/**\r\n * Call the Phone verification sign in, handling send and retrieve to code on native, but only sign in on web with retrieved credentials.\r\n * @param phone The user phone number.\r\n * @param verificationCode The verification code sent by SMS (optional).\r\n */\r\nexport const cfaSignInPhone = (phone, verificationCode) => {\r\n    return new Observable(observer => {\r\n        // get the provider id\r\n        const providerId = firebase.auth.PhoneAuthProvider.PROVIDER_ID;\r\n        plugin.signIn({ providerId, data: { phone, verificationCode } }).then((result) => {\r\n            // if there is no verification code\r\n            if (!result.verificationCode) {\r\n                return observer.complete();\r\n            }\r\n            // create the credentials\r\n            const credential = firebase.auth.PhoneAuthProvider.credential(result.verificationId, result.verificationCode);\r\n            // web sign in\r\n            firebase.app().auth().signInWithCredential(credential)\r\n                .then((userCredential) => {\r\n                observer.next(userCredential.user);\r\n                observer.complete();\r\n            })\r\n                .catch((reject) => observer.error(reject));\r\n        }).catch(reject => observer.error(reject));\r\n    });\r\n};\r\n/**\r\n * Observable of one notification of <code>On Code Sent</code>event from Phone Verification process.\r\n */\r\nexport const cfaSignInPhoneOnCodeSent = () => {\r\n    return new Observable(observer => {\r\n        // @ts-ignore\r\n        return plugin.addListener('cfaSignInPhoneOnCodeSent', (event) => {\r\n            observer.next(event.verificationId);\r\n            observer.complete();\r\n        });\r\n    });\r\n};\r\n/**\r\n * Observable of one notification of <code>On Code Received</code> event from Phone Verification process.\r\n */\r\nexport const cfaSignInPhoneOnCodeReceived = () => {\r\n    return new Observable(observer => {\r\n        // @ts-ignore\r\n        return plugin.addListener('cfaSignInPhoneOnCodeReceived', (event) => {\r\n            observer.next(event);\r\n            observer.complete();\r\n        });\r\n    });\r\n};\r\n/**\r\n * Call Google sign out method on native and web layers.\r\n */\r\nexport const cfaSignOut = () => {\r\n    return new Observable(observer => {\r\n        plugin.signOut({}).then(() => {\r\n            // web sign out\r\n            firebase.app().auth().signOut()\r\n                .then(() => {\r\n                observer.next();\r\n                observer.complete();\r\n            })\r\n                .catch((reject) => observer.error(reject));\r\n        });\r\n    });\r\n};\r\n//# sourceMappingURL=facades.js.map","import '@firebase/auth';\r\n//# sourceMappingURL=index.esm.js.map\r\n","var __awaiter = (this && this.__awaiter) || function (thisArg, _arguments, P, generator) {\r\n    function adopt(value) { return value instanceof P ? value : new P(function (resolve) { resolve(value); }); }\r\n    return new (P || (P = Promise))(function (resolve, reject) {\r\n        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }\r\n        function rejected(value) { try { step(generator[\"throw\"](value)); } catch (e) { reject(e); } }\r\n        function step(result) { result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected); }\r\n        step((generator = generator.apply(thisArg, _arguments || [])).next());\r\n    });\r\n};\r\nimport * as firebase from 'firebase/app';\r\nimport 'firebase/auth';\r\nimport { FacebookSignInResult } from '../definitions';\r\nexport const facebookSignInWeb = () => __awaiter(void 0, void 0, void 0, function* () {\r\n    const provider = new firebase.auth.FacebookAuthProvider();\r\n    firebase.auth().useDeviceLanguage();\r\n    const userCredential = yield firebase.auth().signInWithPopup(provider);\r\n    const { credential } = userCredential;\r\n    return new FacebookSignInResult(credential.accessToken);\r\n});\r\n//# sourceMappingURL=facebook.provider.js.map","var __awaiter = (this && this.__awaiter) || function (thisArg, _arguments, P, generator) {\r\n    function adopt(value) { return value instanceof P ? value : new P(function (resolve) { resolve(value); }); }\r\n    return new (P || (P = Promise))(function (resolve, reject) {\r\n        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }\r\n        function rejected(value) { try { step(generator[\"throw\"](value)); } catch (e) { reject(e); } }\r\n        function step(result) { result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected); }\r\n        step((generator = generator.apply(thisArg, _arguments || [])).next());\r\n    });\r\n};\r\nimport 'firebase/auth';\r\nexport const phoneSignInWeb = (options) => __awaiter(void 0, void 0, void 0, function* () {\r\n    // const provider = new firebase.auth.PhoneAuthProvider();\r\n    return Promise.reject(`The '${options.providerId}' provider was not implemented for web yet`);\r\n});\r\n//# sourceMappingURL=phone.provider.js.map","var __awaiter = (this && this.__awaiter) || function (thisArg, _arguments, P, generator) {\r\n    function adopt(value) { return value instanceof P ? value : new P(function (resolve) { resolve(value); }); }\r\n    return new (P || (P = Promise))(function (resolve, reject) {\r\n        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }\r\n        function rejected(value) { try { step(generator[\"throw\"](value)); } catch (e) { reject(e); } }\r\n        function step(result) { result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected); }\r\n        step((generator = generator.apply(thisArg, _arguments || [])).next());\r\n    });\r\n};\r\nimport * as firebase from 'firebase/app';\r\nimport 'firebase/auth';\r\nimport { TwitterSignInResult } from '../definitions';\r\nexport const twitterSignInWeb = () => __awaiter(void 0, void 0, void 0, function* () {\r\n    try {\r\n        const provider = new firebase.auth.TwitterAuthProvider();\r\n        firebase.auth().useDeviceLanguage();\r\n        const userCredential = yield firebase.auth().signInWithPopup(provider);\r\n        const { credential } = userCredential;\r\n        return new TwitterSignInResult(credential.accessToken, credential.secret);\r\n    }\r\n    catch (e) {\r\n        return Promise.reject(e);\r\n    }\r\n});\r\n//# sourceMappingURL=twitter.provider.js.map","var __awaiter = (this && this.__awaiter) || function (thisArg, _arguments, P, generator) {\r\n    function adopt(value) { return value instanceof P ? value : new P(function (resolve) { resolve(value); }); }\r\n    return new (P || (P = Promise))(function (resolve, reject) {\r\n        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }\r\n        function rejected(value) { try { step(generator[\"throw\"](value)); } catch (e) { reject(e); } }\r\n        function step(result) { result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected); }\r\n        step((generator = generator.apply(thisArg, _arguments || [])).next());\r\n    });\r\n};\r\nimport { registerWebPlugin, WebPlugin } from '@capacitor/core';\r\nimport * as firebase from 'firebase/app';\r\nimport 'firebase/auth';\r\nimport { facebookSignInWeb } from './providers/facebook.provider';\r\nimport { googleSignInWeb } from './providers/google.provider';\r\nimport { phoneSignInWeb } from './providers/phone.provider';\r\nimport { twitterSignInWeb } from './providers/twitter.provider';\r\nexport class CapacitorFirebaseAuthWeb extends WebPlugin {\r\n    constructor() {\r\n        super({\r\n            name: 'CapacitorFirebaseAuth',\r\n            platforms: ['web']\r\n        });\r\n    }\r\n    signIn(options) {\r\n        return __awaiter(this, void 0, void 0, function* () {\r\n            const googleProvider = new firebase.auth.GoogleAuthProvider().providerId;\r\n            const facebookProvider = new firebase.auth.FacebookAuthProvider().providerId;\r\n            const twitterProvider = new firebase.auth.TwitterAuthProvider().providerId;\r\n            const phoneProvider = new firebase.auth.PhoneAuthProvider().providerId;\r\n            switch (options.providerId) {\r\n                case googleProvider:\r\n                    return googleSignInWeb(options);\r\n                case twitterProvider:\r\n                    return twitterSignInWeb(options);\r\n                case facebookProvider:\r\n                    return facebookSignInWeb(options);\r\n                case phoneProvider:\r\n                    return phoneSignInWeb(options);\r\n            }\r\n            return Promise.reject(`The '${options.providerId}' provider was not supported`);\r\n        });\r\n    }\r\n    signOut(options) {\r\n        return __awaiter(this, void 0, void 0, function* () {\r\n            console.log(options);\r\n            return firebase.auth().signOut();\r\n        });\r\n    }\r\n}\r\nconst CapacitorFirebaseAuth = new CapacitorFirebaseAuthWeb();\r\nexport { CapacitorFirebaseAuth };\r\n// Register as a web plugin\r\nregisterWebPlugin(CapacitorFirebaseAuth);\r\n//# sourceMappingURL=web.js.map","import { Inject, Injectable, PLATFORM_ID } from '@angular/core';\r\nimport { AngularFireAuth } from '@angular/fire/auth';\r\nimport { Observable, Subject, from, of } from 'rxjs';\r\nimport { DataStore } from '../../shell/data-store';\r\nimport { FirebaseProfileModel } from './profile/firebase-profile.model';\r\nimport { Platform } from '@ionic/angular';\r\nimport { filter, map } from 'rxjs/operators';\r\n\r\nimport { User, auth } from 'firebase/app';\r\nimport { cfaSignIn, cfaSignOut } from 'capacitor-firebase-auth';\r\nimport { isPlatformBrowser } from '@angular/common';\r\n\r\n@Injectable()\r\nexport class FirebaseAuthService {\r\n\r\n  currentUser: User;\r\n  userProviderAdditionalInfo: any;\r\n  profileDataStore: DataStore<FirebaseProfileModel>;\r\n  redirectResult: Subject<any> = new Subject<any>();\r\n\r\n\r\n  constructor(\r\n    public angularFire: AngularFireAuth,\r\n    public platform: Platform,\r\n    @Inject(PLATFORM_ID) private platformId: object\r\n  ) {\r\n    if (isPlatformBrowser(this.platformId)) {\r\n      this.angularFire.onAuthStateChanged((user) => {\r\n        if (user) {\r\n          // User is signed in.\r\n          this.currentUser = user;\r\n        } else {\r\n          // No user is signed in.\r\n          this.currentUser = null;\r\n        }\r\n      });\r\n\r\n      if (!this.platform.is('capacitor')) {\r\n        // when using signInWithRedirect, this listens for the redirect results\r\n        this.angularFire.getRedirectResult()\r\n        .then((result) => {\r\n          // result.credential.accessToken gives you the Provider Access Token. You can use it to access the Provider API.\r\n          if (result.user) {\r\n            this.userProviderAdditionalInfo = result.additionalUserInfo.profile;\r\n            this.redirectResult.next(result);\r\n          }\r\n        }, (error) => {\r\n          this.redirectResult.next({error: error.code});\r\n        });\r\n      }\r\n    }\r\n  }\r\n\r\n  getRedirectResult(): Observable<any> {\r\n    return this.redirectResult.asObservable();\r\n  }\r\n\r\n  getPhotoURL(signInProviderId: string, photoURL: string): string {\r\n    // Default imgs are too small and our app needs a bigger image\r\n    switch (signInProviderId) {\r\n      case 'facebook.com':\r\n        return photoURL + '?height=400';\r\n      case 'password':\r\n        return 'https://s3-us-west-2.amazonaws.com/ionicthemes/otros/avatar-placeholder.png';\r\n      case 'twitter.com':\r\n        return photoURL.replace('_normal', '_400x400');\r\n      case 'google.com':\r\n        return photoURL.split('=')[0];\r\n      default:\r\n        return photoURL;\r\n    }\r\n  }\r\n\r\n  signOut(): Observable<any> {\r\n    if (this.platform.is('capacitor')) {\r\n      return cfaSignOut();\r\n    } else {\r\n      return from(this.angularFire.signOut());\r\n    }\r\n  }\r\n\r\n  signInWithEmail(email: string, password: string): Promise<auth.UserCredential> {\r\n    return this.angularFire.signInWithEmailAndPassword(email, password);\r\n  }\r\n\r\n  signUpWithEmail(email: string, password: string): Promise<auth.UserCredential> {\r\n    return this.angularFire.createUserWithEmailAndPassword(email, password);\r\n  }\r\n\r\n  socialSignIn(providerName: string, scopes?: Array<string>): Observable<any> {\r\n    if (this.platform.is('capacitor')) {\r\n      return cfaSignIn(providerName);\r\n    } else {\r\n      const provider = new auth.OAuthProvider(providerName);\r\n\r\n      if (scopes) {\r\n        scopes.forEach(scope => {\r\n          provider.addScope(scope);\r\n        });\r\n      }\r\n\r\n      if (this.platform.is('desktop')) {\r\n        return from(this.angularFire.signInWithPopup(provider));\r\n      } else {\r\n        // web but not desktop, for example mobile PWA\r\n        return from(this.angularFire.signInWithRedirect(provider));\r\n      }\r\n    }\r\n  }\r\n\r\n  signInWithFacebook() {\r\n    const provider = new auth.FacebookAuthProvider();\r\n    return this.socialSignIn(provider.providerId);\r\n  }\r\n\r\n  signInWithGoogle() {\r\n    const provider = new auth.GoogleAuthProvider();\r\n    const scopes = ['profile', 'email'];\r\n    return this.socialSignIn(provider.providerId, scopes);\r\n  }\r\n\r\n  signInWithTwitter() {\r\n    const provider = new auth.TwitterAuthProvider();\r\n    return this.socialSignIn(provider.providerId);\r\n  }\r\n\r\n  public getProfileDataSource(): Observable<FirebaseProfileModel> {\r\n    // we need to do this differentiation because there is a bug in\r\n    // platform capacitor ios when executing this.angularFire.user\r\n    if (this.platform.is('capacitor')) {\r\n      return of(this.setUserModelForProfile());\r\n    } else {\r\n      return this.angularFire.user\r\n      .pipe(\r\n        filter((user: User) => user != null),\r\n        map((user: User) => {\r\n          return this.setUserModelForProfile();\r\n        })\r\n      );\r\n    }\r\n  }\r\n\r\n  private setUserModelForProfile(): FirebaseProfileModel {\r\n    const userModel = new FirebaseProfileModel();\r\n    const provierData = this.currentUser.providerData[0];\r\n    const userData = this.userProviderAdditionalInfo ? this.userProviderAdditionalInfo : provierData;\r\n    userModel.image = this.getPhotoURL(provierData.providerId, provierData.photoURL);\r\n    userModel.name = userData.name || userData.displayName || 'What\\'s your name?';\r\n    userModel.role = 'How would you describe yourself?';\r\n    userModel.description = userData.description || 'Anything else you would like to share with the world?';\r\n    userModel.phoneNumber = userData.phoneNumber || 'Is there a number where I can reach you?';\r\n    userModel.email = userData.email || 'Where can I send you emails?';\r\n    userModel.provider = (provierData.providerId !== 'password') ? provierData.providerId : 'Credentials';\r\n\r\n    return userModel;\r\n  }\r\n\r\n  public getProfileStore(dataSource: Observable<FirebaseProfileModel>): DataStore<FirebaseProfileModel> {\r\n    // Initialize the model specifying that it is a shell model\r\n    const shellModel: FirebaseProfileModel = new FirebaseProfileModel();\r\n    this.profileDataStore = new DataStore(shellModel);\r\n    // Trigger the loading mechanism (with shell) in the dataStore\r\n    this.profileDataStore.load(dataSource);\r\n    return this.profileDataStore;\r\n  }\r\n}\r\n","import { Injectable, Inject, Optional, PLATFORM_ID, NgZone, ɵɵdefineInjectable, ɵɵinject, NgModule } from '@angular/core';\r\nimport { of, Observable, from } from 'rxjs';\r\nimport { observeOn, switchMap, map, shareReplay, first } from 'rxjs/operators';\r\nimport { ɵAngularFireSchedulers, ɵkeepUnstableUntilFirstFactory, ɵfirebaseAppFactory, ɵlazySDKProxy, FIREBASE_OPTIONS, FIREBASE_APP_NAME } from '@angular/fire';\r\nimport { isPlatformServer } from '@angular/common';\r\n\r\n/**\r\n * @fileoverview added by tsickle\r\n * Generated from: auth.ts\r\n * @suppress {checkTypes,constantProperty,extraRequire,missingOverride,missingRequire,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\r\n */\r\n// WARNING: interface has both a type and a value, skipping emit\r\nimport * as ɵngcc0 from '@angular/core';\r\nclass AngularFireAuth {\r\n    /**\r\n     * @param {?} options\r\n     * @param {?} nameOrConfig\r\n     * @param {?} platformId\r\n     * @param {?} zone\r\n     */\r\n    constructor(options, nameOrConfig, \r\n    // tslint:disable-next-line:ban-types\r\n    platformId, zone) {\r\n        /** @type {?} */\r\n        const schedulers = new ɵAngularFireSchedulers(zone);\r\n        /** @type {?} */\r\n        const keepUnstableUntilFirst = ɵkeepUnstableUntilFirstFactory(schedulers);\r\n        /** @type {?} */\r\n        const auth = of(undefined).pipe(observeOn(schedulers.outsideAngular), switchMap((/**\r\n         * @return {?}\r\n         */\r\n        () => zone.runOutsideAngular((/**\r\n         * @return {?}\r\n         */\r\n        () => import('firebase/auth'))))), map((/**\r\n         * @return {?}\r\n         */\r\n        () => ɵfirebaseAppFactory(options, zone, nameOrConfig))), map((/**\r\n         * @param {?} app\r\n         * @return {?}\r\n         */\r\n        app => zone.runOutsideAngular((/**\r\n         * @return {?}\r\n         */\r\n        () => app.auth())))), shareReplay({ bufferSize: 1, refCount: false }));\r\n        if (isPlatformServer(platformId)) {\r\n            this.authState = this.user = this.idToken = this.idTokenResult = of(null);\r\n        }\r\n        else {\r\n            // HACK, as we're exporting auth.Auth, rather than auth, developers importing firebase.auth\r\n            //       (e.g, `import { auth } from 'firebase/app'`) are getting an undefined auth object unexpectedly\r\n            //       as we're completely lazy. Let's eagerly load the Auth SDK here.\r\n            //       There could potentially be race conditions still... but this greatly decreases the odds while\r\n            //       we reevaluate the API.\r\n            /** @type {?} */\r\n            const _ = auth.pipe(first()).subscribe();\r\n            this.authState = auth.pipe(switchMap((/**\r\n             * @param {?} auth\r\n             * @return {?}\r\n             */\r\n            auth => auth.getRedirectResult().then((/**\r\n             * @return {?}\r\n             */\r\n            () => auth)))), switchMap((/**\r\n             * @param {?} auth\r\n             * @return {?}\r\n             */\r\n            auth => zone.runOutsideAngular((/**\r\n             * @return {?}\r\n             */\r\n            () => new Observable(auth.onAuthStateChanged.bind(auth)))))), keepUnstableUntilFirst);\r\n            this.user = auth.pipe(switchMap((/**\r\n             * @param {?} auth\r\n             * @return {?}\r\n             */\r\n            auth => auth.getRedirectResult().then((/**\r\n             * @return {?}\r\n             */\r\n            () => auth)))), switchMap((/**\r\n             * @param {?} auth\r\n             * @return {?}\r\n             */\r\n            auth => zone.runOutsideAngular((/**\r\n             * @return {?}\r\n             */\r\n            () => new Observable(auth.onIdTokenChanged.bind(auth)))))), keepUnstableUntilFirst);\r\n            this.idToken = this.user.pipe(switchMap((/**\r\n             * @param {?} user\r\n             * @return {?}\r\n             */\r\n            user => user ? from(user.getIdToken()) : of(null))));\r\n            this.idTokenResult = this.user.pipe(switchMap((/**\r\n             * @param {?} user\r\n             * @return {?}\r\n             */\r\n            user => user ? from(user.getIdTokenResult()) : of(null))));\r\n        }\r\n        return ɵlazySDKProxy(this, auth, zone);\r\n    }\r\n}\r\nAngularFireAuth.ɵfac = function AngularFireAuth_Factory(t) { return new (t || AngularFireAuth)(ɵngcc0.ɵɵinject(FIREBASE_OPTIONS), ɵngcc0.ɵɵinject(FIREBASE_APP_NAME, 8), ɵngcc0.ɵɵinject(PLATFORM_ID), ɵngcc0.ɵɵinject(ɵngcc0.NgZone)); };\r\n/** @nocollapse */\r\nAngularFireAuth.ctorParameters = () => [\r\n    { type: undefined, decorators: [{ type: Inject, args: [FIREBASE_OPTIONS,] }] },\r\n    { type: undefined, decorators: [{ type: Optional }, { type: Inject, args: [FIREBASE_APP_NAME,] }] },\r\n    { type: Object, decorators: [{ type: Inject, args: [PLATFORM_ID,] }] },\r\n    { type: NgZone }\r\n];\r\n/** @nocollapse */ AngularFireAuth.ɵprov = ɵɵdefineInjectable({ factory: function AngularFireAuth_Factory() { return new AngularFireAuth(ɵɵinject(FIREBASE_OPTIONS), ɵɵinject(FIREBASE_APP_NAME, 8), ɵɵinject(PLATFORM_ID), ɵɵinject(NgZone)); }, token: AngularFireAuth, providedIn: \"any\" });\r\n/*@__PURE__*/ (function () { ɵngcc0.ɵsetClassMetadata(AngularFireAuth, [{\r\n        type: Injectable,\r\n        args: [{\r\n                providedIn: 'any'\r\n            }]\r\n    }], function () { return [{ type: undefined, decorators: [{\r\n                type: Inject,\r\n                args: [FIREBASE_OPTIONS]\r\n            }] }, { type: undefined, decorators: [{\r\n                type: Optional\r\n            }, {\r\n                type: Inject,\r\n                args: [FIREBASE_APP_NAME]\r\n            }] }, { type: Object, decorators: [{\r\n                type: Inject,\r\n                args: [PLATFORM_ID]\r\n            }] }, { type: ɵngcc0.NgZone }]; }, null); })();\r\nif (false) {\r\n    /**\r\n     * Observable of authentication state; as of Firebase 4.0 this is only triggered via sign-in/out\r\n     * @type {?}\r\n     */\r\n    AngularFireAuth.prototype.authState;\r\n    /**\r\n     * Observable of the currently signed-in user's JWT token used to identify the user to a Firebase service (or null).\r\n     * @type {?}\r\n     */\r\n    AngularFireAuth.prototype.idToken;\r\n    /**\r\n     * Observable of the currently signed-in user (or null).\r\n     * @type {?}\r\n     */\r\n    AngularFireAuth.prototype.user;\r\n    /**\r\n     * Observable of the currently signed-in user's IdTokenResult object which contains the ID token JWT string and other\r\n     * helper properties for getting different data associated with the token as well as all the decoded payload claims\r\n     * (or null).\r\n     * @type {?}\r\n     */\r\n    AngularFireAuth.prototype.idTokenResult;\r\n}\r\n\r\n/**\r\n * @fileoverview added by tsickle\r\n * Generated from: auth.module.ts\r\n * @suppress {checkTypes,constantProperty,extraRequire,missingOverride,missingRequire,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\r\n */\r\nclass AngularFireAuthModule {\r\n}\r\nAngularFireAuthModule.ɵmod = ɵngcc0.ɵɵdefineNgModule({ type: AngularFireAuthModule });\r\nAngularFireAuthModule.ɵinj = ɵngcc0.ɵɵdefineInjector({ factory: function AngularFireAuthModule_Factory(t) { return new (t || AngularFireAuthModule)(); }, providers: [AngularFireAuth] });\r\n/*@__PURE__*/ (function () { ɵngcc0.ɵsetClassMetadata(AngularFireAuthModule, [{\r\n        type: NgModule,\r\n        args: [{\r\n                providers: [AngularFireAuth]\r\n            }]\r\n    }], null, null); })();\r\n\r\n/**\r\n * @fileoverview added by tsickle\r\n * Generated from: public_api.ts\r\n * @suppress {checkTypes,constantProperty,extraRequire,missingOverride,missingRequire,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\r\n */\r\n\r\n/**\r\n * @fileoverview added by tsickle\r\n * Generated from: angular-fire-auth.ts\r\n * @suppress {checkTypes,constantProperty,extraRequire,missingOverride,missingRequire,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\r\n */\r\n\r\nexport { AngularFireAuth, AngularFireAuthModule };\r\n\r\n//# sourceMappingURL=angular-fire-auth.js.map","import { ShellModel } from '../../../shell/data-store';\r\n\r\nexport class FirebaseProfileModel extends ShellModel {\r\n  image: string;\r\n  name: string;\r\n  role: string;\r\n  description: string;\r\n  email: string;\r\n  provider: string;\r\n  phoneNumber: string;\r\n\r\n  constructor() {\r\n    super();\r\n  }\r\n}\r\n","import { of, pipe } from 'rxjs';\r\nimport { switchMap } from 'rxjs/operators';\r\n/**\r\n * Operator to map firebase.User to firebase.UserInfo.\r\n *\r\n * Sample of use:\r\n *\r\n * ```ts\r\n * import {cfaSignIn, mapUserToUserInfo} from 'capacitor-firebase-auth';\r\n * import {UserInfo} from 'firebase/app';\r\n *\r\n * cfaSignIn('google.com').pipe(\r\n *     mapUserToUserInfo(),\r\n * ).subscribe(\r\n *     (user: UserInfo) => console.log(user.displayName);\r\n * )\r\n * ```\r\n */\r\nexport const mapUserToUserInfo = () => pipe(switchMap((user) => {\r\n    if (user) {\r\n        const { uid, providerId, displayName, photoURL, phoneNumber, email } = user;\r\n        return of({ uid, providerId, displayName, photoURL, phoneNumber, email });\r\n    }\r\n    return of(user);\r\n}));\r\n/**\r\n * Operator to map firebase.auth.UserCredential to firebase.UserInfo.\r\n *\r\n * For use with alternative facade only.\r\n *\r\n * Sample of use:\r\n *\r\n * ```ts\r\n * import {cfaSignIn, mapUserToUserInfo} from 'capacitor-firebase-auth/alternative';\r\n * import {UserInfo} from 'firebase/app';\r\n *\r\n * cfaSignIn('google.com').pipe(\r\n *     mapUserToUserInfo(),\r\n * ).subscribe(\r\n *     (user: UserInfo) => console.log(user.displayName);\r\n * )\r\n * ```\r\n */\r\nexport const mapUserCredentialToUserInfo = () => pipe(switchMap(({ userCredential }) => {\r\n    if (!!userCredential) {\r\n        const { uid, providerId, displayName, photoURL, phoneNumber, email } = userCredential.user;\r\n        return of({ uid, providerId, displayName, photoURL, phoneNumber, email });\r\n    }\r\n    return of(null);\r\n}));\r\n//# sourceMappingURL=operators.js.map","import { NgModule } from '@angular/core';\r\nimport { CommonModule } from '@angular/common';\r\nimport { Routes, RouterModule } from '@angular/router';\r\nimport { IonicModule } from '@ionic/angular';\r\nimport { ComponentsModule } from '../../components/components.module';\r\nimport { AngularFireAuthModule } from '@angular/fire/auth';\r\nimport { AngularFireModule } from '@angular/fire';\r\nimport { environment } from '../../../environments/environment';\r\nimport { FirebaseAuthService } from './firebase-auth.service';\r\n\r\nconst routes: Routes = [\r\n  {\r\n    path: '',\r\n    children: [\r\n      // /firebase/auth redirect\r\n      {\r\n        path: '',\r\n        redirectTo: 'sign-in',\r\n        pathMatch: 'full',\r\n      },\r\n      {\r\n        path: 'sign-in',\r\n        loadChildren: () => import('./sign-in/firebase-sign-in.module').then(m => m.FirebaseSignInPageModule)\r\n      },\r\n      {\r\n        path: 'sign-up',\r\n        loadChildren: () => import('./sign-up/firebase-sign-up.module').then(m => m.FirebaseSignUpPageModule)\r\n      },\r\n      {\r\n        path: 'profile',\r\n        loadChildren: () => import('./profile/firebase-profile.module').then(m => m.FirebaseProfilePageModule)\r\n      }\r\n    ]\r\n  }\r\n];\r\n\r\n@NgModule({\r\n  imports: [\r\n    CommonModule,\r\n    IonicModule,\r\n    ComponentsModule,\r\n    RouterModule.forChild(routes),\r\n    AngularFireModule.initializeApp(environment.firebase),\r\n    AngularFireAuthModule\r\n  ],\r\n  providers: [FirebaseAuthService]\r\n})\r\nexport class FirebaseAuthModule {}\r\n","import { Observable, of, combineLatest, ReplaySubject } from 'rxjs';\r\nimport { delay, map, startWith } from 'rxjs/operators';\r\nimport { environment } from '../../environments/environment';\r\n\r\nexport class ShellModel {\r\n  isShell = false;\r\n}\r\n\r\nexport class DataStore<T> {\r\n  // We wait on purpose 2 secs on local environment when fetching from json to simulate the backend roundtrip.\r\n  // However, in production you should set this delay to 0 in the environment.prod file.\r\n  // tslint:disable-next-line:max-line-length\r\n  private networkDelay = (environment.appShellConfig && environment.appShellConfig.networkDelay) ? environment.appShellConfig.networkDelay : 0;\r\n\r\n  private timeline: ReplaySubject<T & ShellModel> = new ReplaySubject(1);\r\n\r\n  constructor(private shellModel: T) { }\r\n\r\n  // Static function with generics\r\n  // (ref: https://stackoverflow.com/a/24293088/1116959)\r\n  // Append a shell (T & ShellModel) to every value (T) emmited to the timeline\r\n  public static AppendShell<T>(dataObservable: Observable<T>, shellModel: T, networkDelay = 400): Observable<T & ShellModel> {\r\n    const delayObservable = of(true).pipe(\r\n      delay(networkDelay)\r\n    );\r\n\r\n    // Assign shell flag accordingly\r\n    // (ref: https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Object/assign)\r\n    return combineLatest([\r\n      delayObservable,\r\n      dataObservable\r\n    ]).pipe(\r\n      // Dismiss unnecessary delayValue\r\n      map(([delayValue, dataValue]: [boolean, T]): (T & ShellModel) => Object.assign(dataValue, {isShell: false})),\r\n      // Set the shell model as the initial value\r\n      startWith(Object.assign(shellModel, {isShell: true}))\r\n    );\r\n  }\r\n\r\n  load(dataSourceObservable: Observable<T>, networkDelay?: number): void {\r\n    // tslint:disable-next-line:no-shadowed-variable\r\n    const delay = (typeof networkDelay === 'number') ? networkDelay : this.networkDelay;\r\n\r\n    let processedDataSource: Observable<any>;\r\n\r\n    // If no network delay, then don't show shell\r\n    if (delay === 0) {\r\n      processedDataSource = dataSourceObservable;\r\n    } else {\r\n      processedDataSource = DataStore.AppendShell(dataSourceObservable, this.shellModel, delay);\r\n    }\r\n\r\n    processedDataSource\r\n    .subscribe((dataValue: T & ShellModel) => {\r\n      this.timeline.next(dataValue);\r\n    });\r\n  }\r\n\r\n  public get state(): Observable<T & ShellModel> {\r\n    return this.timeline.asObservable();\r\n  }\r\n}\r\n","var __awaiter = (this && this.__awaiter) || function (thisArg, _arguments, P, generator) {\r\n    function adopt(value) { return value instanceof P ? value : new P(function (resolve) { resolve(value); }); }\r\n    return new (P || (P = Promise))(function (resolve, reject) {\r\n        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }\r\n        function rejected(value) { try { step(generator[\"throw\"](value)); } catch (e) { reject(e); } }\r\n        function step(result) { result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected); }\r\n        step((generator = generator.apply(thisArg, _arguments || [])).next());\r\n    });\r\n};\r\nimport * as firebase from 'firebase/app';\r\nimport 'firebase/auth';\r\nimport { GoogleSignInResult } from '../definitions';\r\nexport const googleSignInWeb = () => __awaiter(void 0, void 0, void 0, function* () {\r\n    try {\r\n        const provider = new firebase.auth.GoogleAuthProvider();\r\n        firebase.auth().useDeviceLanguage();\r\n        const userCredential = yield firebase.auth().signInWithPopup(provider);\r\n        const { credential } = userCredential;\r\n        return new GoogleSignInResult(credential.idToken);\r\n    }\r\n    catch (e) {\r\n        return Promise.reject(e);\r\n    }\r\n});\r\n//# sourceMappingURL=google.provider.js.map","import * as firebase from 'firebase/app';\r\nimport 'firebase/auth';\r\nexport class GoogleSignInResult {\r\n    constructor(idToken) {\r\n        this.idToken = idToken;\r\n        this.providerId = firebase.auth.GoogleAuthProvider.PROVIDER_ID;\r\n    }\r\n}\r\nexport class TwitterSignInResult {\r\n    constructor(idToken, secret) {\r\n        this.idToken = idToken;\r\n        this.secret = secret;\r\n        this.providerId = firebase.auth.TwitterAuthProvider.PROVIDER_ID;\r\n    }\r\n}\r\nexport class FacebookSignInResult {\r\n    constructor(idToken) {\r\n        this.idToken = idToken;\r\n        this.providerId = firebase.auth.FacebookAuthProvider.PROVIDER_ID;\r\n    }\r\n}\r\nexport class PhoneSignInResult {\r\n    constructor(verificationId, verificationCode) {\r\n        this.verificationId = verificationId;\r\n        this.verificationCode = verificationCode;\r\n        this.providerId = firebase.auth.PhoneAuthProvider.PROVIDER_ID;\r\n    }\r\n}\r\n//# sourceMappingURL=definitions.js.map","export * from './definitions';\r\nexport * from './facades';\r\nexport * from './operators';\r\nexport * from './web';\r\n//# sourceMappingURL=index.js.map"],"sourceRoot":"webpack:///"}