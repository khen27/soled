{"version":3,"sources":["webpack:///src/app/signup/signup.module.ts","webpack:///src/app/signup/signup.page.html","webpack:///src/app/signup/signup.page.ts"],"names":["routes","path","component","SignupPageModule","forChild","imports","declarations","SignupPage","router","modalController","menu","routerOutlet","validation_messages","type","message","matching_passwords_group","compose","minLength","required","formGroup","areNotEqual","signupForm","pattern","enable","create","swipeToClose","presentingElement","nativeEl","modal","present","console","log","navigate","doSignup","doFacebookSignup","doGoogleSignup","showPrivacyModal","showTermsModal","selector","templateUrl","styleUrls"],"mappings":"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","file":"signup-signup-module-es5.js","sourcesContent":["import { NgModule } from '@angular/core';\r\nimport { CommonModule } from '@angular/common';\r\nimport { FormsModule, ReactiveFormsModule } from '@angular/forms';\r\nimport { Routes, RouterModule } from '@angular/router';\r\n\r\nimport { IonicModule } from '@ionic/angular';\r\nimport { ComponentsModule } from '../components/components.module';\r\n\r\nimport { SignupPage } from './signup.page';\r\nimport { TermsOfServicePage } from '../terms-of-service/terms-of-service.page';\r\nimport { PrivacyPolicyPage } from '../privacy-policy/privacy-policy.page';\r\n\r\nconst routes: Routes = [\r\n  {\r\n    path: '',\r\n    component: SignupPage\r\n  }\r\n];\r\n\r\n@NgModule({\r\n  imports: [\r\n    CommonModule,\r\n    FormsModule,\r\n    ReactiveFormsModule,\r\n    IonicModule,\r\n    RouterModule.forChild(routes),\r\n    ComponentsModule\r\n  ],\r\n  declarations: [SignupPage, TermsOfServicePage, PrivacyPolicyPage]\r\n})\r\nexport class SignupPageModule {}\r\n","<ion-header>\r\n  <ion-toolbar color=\"primary\">\r\n    <ion-buttons slot=\"start\">\r\n      <ion-back-button></ion-back-button>\r\n    </ion-buttons>\r\n    <ion-title>Sign Up</ion-title>\r\n  </ion-toolbar>\r\n</ion-header>\r\n\r\n<ion-content class=\"signup-content\">\r\n  <h2 class=\"auth-title\">\r\n    Hello World!\r\n  </h2>\r\n  <form [formGroup]=\"signupForm\" (ngSubmit)=\"doSignup()\">\r\n    <ion-list class=\"inputs-list\" lines=\"full\">\r\n      <ion-item class=\"input-item\">\r\n        <ion-input type=\"email\" placeholder=\"Email\" formControlName=\"email\" clearInput autocapitalize=\"off\" inputmode=\"email\"></ion-input>\r\n      </ion-item>\r\n      <div class=\"error-container\">\r\n        <ng-container *ngFor=\"let validation of validation_messages.email\">\r\n          <div class=\"error-message\" *ngIf=\"signupForm.get('email').hasError(validation.type) && (signupForm.get('email').dirty || signupForm.get('email').touched)\">\r\n            <ion-icon name=\"information-circle-outline\"></ion-icon>\r\n            <span>{{ validation.message }}</span>\r\n          </div>\r\n        </ng-container>\r\n      </div>\r\n\r\n      <div formGroupName=\"matching_passwords\">\r\n        <ion-item class=\"input-item\">\r\n          <app-show-hide-password>\r\n            <ion-input type=\"password\" placeholder=\"Password\" formControlName=\"password\"></ion-input>\r\n          </app-show-hide-password>\r\n        </ion-item>\r\n        <div class=\"error-container\">\r\n          <ng-container *ngFor=\"let validation of validation_messages.password\">\r\n            <div class=\"error-message\" *ngIf=\"signupForm.get('matching_passwords').get('password').hasError(validation.type) && (signupForm.get('matching_passwords').get('password').dirty || signupForm.get('matching_passwords').get('password').touched)\">\r\n              <ion-icon name=\"information-circle-outline\"></ion-icon>\r\n              <span>{{ validation.message }}</span>\r\n            </div>\r\n          </ng-container>\r\n        </div>\r\n\r\n        <ion-item class=\"input-item\">\r\n          <app-show-hide-password>\r\n            <ion-input type=\"password\" placeholder=\"Confirm Password\" formControlName=\"confirm_password\"></ion-input>\r\n          </app-show-hide-password>\r\n        </ion-item>\r\n        <div class=\"error-container\">\r\n          <ng-container *ngFor=\"let validation of validation_messages.confirm_password\">\r\n            <div class=\"error-message\" *ngIf=\"signupForm.get('matching_passwords').get('confirm_password').hasError(validation.type) && (signupForm.get('matching_passwords').get('confirm_password').dirty || signupForm.get('matching_passwords').get('confirm_password').touched)\">\r\n              <ion-icon name=\"information-circle-outline\"></ion-icon>\r\n              <span>{{ validation.message }}</span>\r\n            </div>\r\n          </ng-container>\r\n        </div>\r\n      </div>\r\n      <div class=\"error-container\">\r\n        <ng-container *ngFor=\"let validation of validation_messages.matching_passwords\">\r\n          <div class=\"error-message\" *ngIf=\"signupForm.get('matching_passwords').hasError(validation.type) && (signupForm.get('matching_passwords').get('confirm_password').dirty || signupForm.get('matching_passwords').get('confirm_password').touched)\">\r\n            <ion-icon name=\"information-circle-outline\"></ion-icon>\r\n            <span>{{ validation.message }}</span>\r\n          </div>\r\n        </ng-container>\r\n      </div>\r\n    </ion-list>\r\n\r\n    <ion-button class=\"signup-btn\" type=\"submit\" expand=\"block\" [disabled]=\"!signupForm.valid\">Sign Up</ion-button>\r\n    <ion-row class=\"other-auth-options-row\">\r\n      <ion-button class=\"login-btn\" fill=\"clear\" [routerLink]=\"['/auth/login']\">\r\n        Already have an account?\r\n      </ion-button>\r\n    </ion-row>\r\n  </form>\r\n\r\n  <div class=\"social-auth-options\">\r\n    <p class=\"options-divider\">Or</p>\r\n    <ion-button class=\"social-auth-btn facebook-auth-btn\" expand=\"block\" color=\"facebook\" (click)=\"doFacebookSignup()\">Sign Up with Facebook</ion-button>\r\n    <ion-button class=\"social-auth-btn google-auth-btn\" expand=\"block\" color=\"google\" (click)=\"doGoogleSignup()\">Sign Up with Google</ion-button>\r\n  </div>\r\n\r\n  <div class=\"legal-stuff\">\r\n    By creating an account you agree to our <a class=\"legal-action\" (click)=\"showPrivacyModal()\">Privacy Policy</a> and <a class=\"legal-action\" (click)=\"showTermsModal()\">Terms of use</a>.\r\n  </div>\r\n</ion-content>\r\n","import { Component } from '@angular/core';\r\nimport { Validators, FormGroup, FormControl } from '@angular/forms';\r\nimport { Router } from '@angular/router';\r\nimport { ModalController, MenuController, IonRouterOutlet } from '@ionic/angular';\r\n\r\nimport { TermsOfServicePage } from '../terms-of-service/terms-of-service.page';\r\nimport { PrivacyPolicyPage } from '../privacy-policy/privacy-policy.page';\r\nimport { PasswordValidator } from '../validators/password.validator';\r\n\r\n@Component({\r\n  selector: 'app-signup',\r\n  templateUrl: './signup.page.html',\r\n  styleUrls: [\r\n    './styles/signup.page.scss'\r\n  ]\r\n})\r\nexport class SignupPage {\r\n  signupForm: FormGroup;\r\n  matching_passwords_group: FormGroup;\r\n\r\n  validation_messages = {\r\n    'email': [\r\n      { type: 'required', message: 'Email is required.' },\r\n      { type: 'pattern', message: 'Enter a valid email.' }\r\n    ],\r\n    'password': [\r\n      { type: 'required', message: 'Password is required.' },\r\n      { type: 'minlength', message: 'Password must be at least 5 characters long.' }\r\n    ],\r\n    'confirm_password': [\r\n      { type: 'required', message: 'Confirm password is required' }\r\n    ],\r\n    'matching_passwords': [\r\n      { type: 'areNotEqual', message: 'Password mismatch' }\r\n    ]\r\n  };\r\n\r\n  constructor(\r\n    public router: Router,\r\n    public modalController: ModalController,\r\n    public menu: MenuController,\r\n    private routerOutlet: IonRouterOutlet\r\n  ) {\r\n    this.matching_passwords_group = new FormGroup({\r\n      'password': new FormControl('', Validators.compose([\r\n        Validators.minLength(5),\r\n        Validators.required\r\n      ])),\r\n      'confirm_password': new FormControl('', Validators.required)\r\n    }, (formGroup: FormGroup) => {\r\n      return PasswordValidator.areNotEqual(formGroup);\r\n    });\r\n\r\n    this.signupForm = new FormGroup({\r\n      'email': new FormControl('test@test.com', Validators.compose([\r\n        Validators.required,\r\n        Validators.pattern('^[a-zA-Z0-9_.+-]+@[a-zA-Z0-9-]+.[a-zA-Z0-9-.]+$')\r\n      ])),\r\n      'matching_passwords': this.matching_passwords_group\r\n    });\r\n  }\r\n\r\n  // Disable side menu for this page\r\n  ionViewDidEnter(): void {\r\n    this.menu.enable(false);\r\n  }\r\n\r\n  // Restore to default when leaving this page\r\n  ionViewDidLeave(): void {\r\n    this.menu.enable(true);\r\n  }\r\n\r\n  async showTermsModal() {\r\n    const modal = await this.modalController.create({\r\n      component: TermsOfServicePage,\r\n      swipeToClose: true,\r\n      presentingElement: this.routerOutlet.nativeEl\r\n    });\r\n    return await modal.present();\r\n  }\r\n\r\n  async showPrivacyModal() {\r\n    const modal = await this.modalController.create({\r\n      component: PrivacyPolicyPage,\r\n      swipeToClose: true,\r\n      presentingElement: this.routerOutlet.nativeEl\r\n    });\r\n    return await modal.present();\r\n  }\r\n\r\n  doSignup(): void {\r\n    console.log('do sign up');\r\n    this.router.navigate(['app/categories']);\r\n  }\r\n\r\n  doFacebookSignup(): void {\r\n    console.log('facebook signup');\r\n    this.router.navigate(['app/categories']);\r\n  }\r\n\r\n  doGoogleSignup(): void {\r\n    console.log('google signup');\r\n    this.router.navigate(['app/categories']);\r\n  }\r\n\r\n  doTwitterSignup(): void {\r\n    console.log('twitter signup');\r\n    this.router.navigate(['app/categories']);\r\n  }\r\n}\r\n"]}